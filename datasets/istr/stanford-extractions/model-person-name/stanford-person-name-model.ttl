@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix schemax: <http://topbraid.org/schemax/> .
@prefix schema: <http://schema.org/> .
@prefix memex: <http://memexproxy.com/ontology/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix ht: <http://memexproxy.com/ontology/human-trafficking/> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix km-dev: <http://isi.edu/integration/karma/dev#> .

_:node19729f85bx1 a km-dev:R2RMLMapping ;
	km-dev:sourceName "stanford-features-sample.json" ;
	km-dev:modelPublicationTime "1416342511787"^^xsd:long ;
	km-dev:modelVersion "1.7" ;
	km-dev:hasInputColumns "[[{\"columnName\":\"ad_timestamp\"}],[{\"columnName\":\"url\"}],[{\"columnName\":\"names2\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"ID\"}]]" ;
	km-dev:hasOutputColumns "[[{\"columnName\":\"nameslist\"}],[{\"columnName\":\"crawl_uri\"}],[{\"columnName\":\"names2\"},{\"columnName\":\"clean_name\"}],[{\"columnName\":\"names2\"},{\"columnName\":\"database_id\"}],[{\"columnName\":\"names2\"},{\"columnName\":\"iso_stanford_modtime\"}],[{\"columnName\":\"names2\"},{\"columnName\":\"name_uri\"}],[{\"columnName\":\"names2\"},{\"columnName\":\"clean_name2\"}],[{\"columnName\":\"featureCollection_uri\"}]]" ;
	km-dev:hasModelLabel "stanford-features-sample.json" ;
	km-dev:hasBaseURI "http://localhost:8080/source/" ;
	km-dev:hasWorksheetHistory """[
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"url\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"crawl_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getCacheBaseUrl()+\\\"page/\\\"+get_url_hash(getValue(\\\"url\\\"))+\\\"/\\\"+getValue(\\\"ad_timestamp\\\")+\\\"/processed\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"ad_timestamp\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"crawl_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"crawl_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"featureCollection_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"crawl_uri\\\")+\\\"/featurecollection\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"crawl_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featureCollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"crawl_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/WebPage\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/WebPage1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:WebPage1 (add)\",
                    \"DomainId\": \"http://schema.org/WebPage1\",
                    \"DomainUri\": \"http://schema.org/WebPage\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"crawl_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"crawl_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"featureCollection_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/FeatureCollection\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/FeatureCollection1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"memex:FeatureCollection1 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featureCollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featureCollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP3:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPage1\",
                    \"edgeId\": \"http://www.w3.org/ns/prov#wasDerivedFrom\",
                    \"edgeTargetId\": \"http://schema.org/WebPage1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1 (add)\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://memexproxy.com/ontology/hasFeatureCollection\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceId\": \"http://schema.org/WebPage1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeId\": \"http://memexproxy.com/ontology/hasFeatureCollection\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceId\": \"http://schema.org/WebPage1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP3:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://www.w3.org/ns/prov#Activity\",
                    \"edgeId\": \"http://www.w3.org/ns/prov#wasGeneratedBy\",
                    \"edgeTargetId\": \"http://www.w3.org/ns/prov#Activity1 (add)\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"names\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"nameslist\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return splitNameField(getValue(\\\"names\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"nameslist\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"nameslist\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"delimiter\",
                \"value\": \",\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColName\",
                \"value\": \"names2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newHNodeId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SplitValuesCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_name\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_name(getValue(\\\"Values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"clean_name\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_name2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"clean_name\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"clean_name2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"name_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return person_name_uri(getValue(\\\"clean_name\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"name_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP6:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/person_name_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"clean_name\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/person_name\",
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"clean_name2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"name_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/Feature\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/Feature1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"name_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"name_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"person_name\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"person_name\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"person_name1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"name_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"database_id\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"if getValue(\\\"clean_name\\\"):\\n  return getValue(\\\"ID\\\")\\nreturn \\\"\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"ID\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"database_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"database_id\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/databaseId\",
                    \"DomainLabel\": \"prov:Activity1\",
                    \"DomainId\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"DomainUri\": \"http://www.w3.org/ns/prov#Activity\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"database_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"database_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"http://memex.zapto.org/data/software/extractor/stanford/version/0.1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memex.zapto.org/data/software/extractor/stanford/version/0.1\",
                    \"edgeId\": \"http://www.w3.org/ns/prov#wasAttributedTo\",
                    \"edgeTargetId\": \"http://memex.zapto.org/data/software/extractor/stanford/version/0.11\",
                    \"edgeSourceId\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"edgeSourceUri\": \"http://www.w3.org/ns/prov#Activity\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"database_id\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"stanford_modtime\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"2014-10-12\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"stanford_modtime\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"iso_stanford_modtime\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"if getValue(\\\"clean_name\\\"):\\n   return iso8601date(getValue(\\\"stanford_modtime\\\"))\\nreturn ''\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"stanford_modtime\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"iso_stanford_modtime\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"iso_stanford_modtime\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://www.w3.org/ns/prov#endedAtTime\",
                    \"DomainLabel\": \"prov:Activity1\",
                    \"DomainId\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"DomainUri\": \"http://www.w3.org/ns/prov#Activity\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"iso_stanford_modtime\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"iso_stanford_modtime\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"orderedColumns\",
                \"value\": [
                    {
                        \"id\": [{\"columnName\": \"modtime\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"modtime\"
                    },
                    {
                        \"id\": [{\"columnName\": \"ad_timestamp\"}],
                        \"visible\": true,
                        \"hideable\": true,
                        \"name\": \"ad_timestamp\"
                    },
                    {
                        \"id\": [{\"columnName\": \"url\"}],
                        \"visible\": true,
                        \"hideable\": true,
                        \"name\": \"url\"
                    },
                    {
                        \"id\": [{\"columnName\": \"crawl_uri\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"crawl_uri\"
                    },
                    {
                        \"id\": [{\"columnName\": \"featureCollection_uri\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"featureCollection_uri\"
                    },
                    {
                        \"id\": [{\"columnName\": \"ID\"}],
                        \"visible\": true,
                        \"hideable\": true,
                        \"name\": \"ID\"
                    },
                    {
                        \"id\": [{\"columnName\": \"names\"}],
                        \"visible\": true,
                        \"hideable\": true,
                        \"name\": \"names\"
                    },
                    {
                        \"id\": [{\"columnName\": \"nameslist\"}],
                        \"visible\": true,
                        \"hideable\": true,
                        \"name\": \"nameslist\"
                    },
                    {
                        \"id\": [{\"columnName\": \"phones\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"phones\"
                    },
                    {
                        \"id\": [{\"columnName\": \"locations\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"locations\"
                    },
                    {
                        \"id\": [{\"columnName\": \"names2\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"names2\",
                        \"children\": \"[{\\\"id\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"Values\\\"}],\\\"visible\\\":true,\\\"hideable\\\":true,\\\"name\\\":\\\"Values\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"clean_name\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name2\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"clean_name2\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"name_uri\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"name_uri\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"database_id\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"database_id\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"stanford_modtime\\\"}],\\\"visible\\\":true,\\\"hideable\\\":true,\\\"name\\\":\\\"stanford_modtime\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"iso_stanford_modtime\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"iso_stanford_modtime\\\"}]\"
                    }
                ],
                \"type\": \"orderedColumns\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"OrganizeColumnsCommand\"
    }
]""" .

km-dev:TriplesMap_4bd05c15-ccd6-4363-8f14-3e0ce2386473 a rr:TriplesMap .

_:node19729f85bx1 km-dev:hasTriplesMap km-dev:TriplesMap_4bd05c15-ccd6-4363-8f14-3e0ce2386473 .

km-dev:TriplesMap_4bd05c15-ccd6-4363-8f14-3e0ce2386473 km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx2 rr:tableName "stanford-features-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasLogicalTable _:node19729f85bx2 .

km-dev:TriplesMap_4bd05c15-ccd6-4363-8f14-3e0ce2386473 rr:logicalTable _:node19729f85bx2 ;
	rr:subjectMap _:node19729f85bx3 .

_:node19729f85bx1 km-dev:hasSubjectMap _:node19729f85bx3 .

_:node19729f85bx3 km-dev:isPartOfMapping _:node19729f85bx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature1" ;
	rr:class memex:Feature ;
	rr:template "{[\"names2\",\"name_uri\"]}" ;
	a km-dev:steinerTreeRootNode .

km-dev:PredicateObjectMap_109997c2-da57-4dee-80f9-c05f894eab2b rr:predicate memex:featureName .

_:node19729f85bx4 rr:constant "person_name" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasObjectMap _:node19729f85bx4 .

km-dev:PredicateObjectMap_109997c2-da57-4dee-80f9-c05f894eab2b rr:objectMap _:node19729f85bx4 .

km-dev:TriplesMap_4bd05c15-ccd6-4363-8f14-3e0ce2386473 rr:predicateObjectMap km-dev:PredicateObjectMap_109997c2-da57-4dee-80f9-c05f894eab2b .

km-dev:PredicateObjectMap_109997c2-da57-4dee-80f9-c05f894eab2b a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_109997c2-da57-4dee-80f9-c05f894eab2b .

km-dev:PredicateObjectMap_5ec7a194-6a62-47f3-95cf-aa16ea139050 rr:predicate memex:featureValue .

_:node19729f85bx5 rr:column "[\"names2\",\"clean_name\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasObjectMap _:node19729f85bx5 .

km-dev:PredicateObjectMap_5ec7a194-6a62-47f3-95cf-aa16ea139050 rr:objectMap _:node19729f85bx5 .

km-dev:TriplesMap_4bd05c15-ccd6-4363-8f14-3e0ce2386473 rr:predicateObjectMap km-dev:PredicateObjectMap_5ec7a194-6a62-47f3-95cf-aa16ea139050 .

km-dev:PredicateObjectMap_5ec7a194-6a62-47f3-95cf-aa16ea139050 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_5ec7a194-6a62-47f3-95cf-aa16ea139050 .

km-dev:PredicateObjectMap_6c61ce80-083f-4779-b075-2cb9f254c94e rr:predicate memex:person_name .

_:node19729f85bx6 rr:column "[\"names2\",\"clean_name\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasObjectMap _:node19729f85bx6 .

km-dev:PredicateObjectMap_6c61ce80-083f-4779-b075-2cb9f254c94e rr:objectMap _:node19729f85bx6 .

km-dev:TriplesMap_4bd05c15-ccd6-4363-8f14-3e0ce2386473 rr:predicateObjectMap km-dev:PredicateObjectMap_6c61ce80-083f-4779-b075-2cb9f254c94e .

km-dev:PredicateObjectMap_6c61ce80-083f-4779-b075-2cb9f254c94e a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_6c61ce80-083f-4779-b075-2cb9f254c94e .

km-dev:PredicateObjectMap_4e46cd69-66b4-4aff-900f-6b7dcf824093 rr:predicate prov:wasGeneratedBy .

km-dev:RefObjectMap_7de7dd99-c15d-434b-8c9c-3b0da0d93e49 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_34d94bb6-cb3a-4b69-9422-e7eecbaaac83 ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasObjectMap km-dev:RefObjectMap_7de7dd99-c15d-434b-8c9c-3b0da0d93e49 .

km-dev:PredicateObjectMap_4e46cd69-66b4-4aff-900f-6b7dcf824093 rr:objectMap km-dev:RefObjectMap_7de7dd99-c15d-434b-8c9c-3b0da0d93e49 .

km-dev:TriplesMap_4bd05c15-ccd6-4363-8f14-3e0ce2386473 rr:predicateObjectMap km-dev:PredicateObjectMap_4e46cd69-66b4-4aff-900f-6b7dcf824093 .

km-dev:PredicateObjectMap_4e46cd69-66b4-4aff-900f-6b7dcf824093 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_4e46cd69-66b4-4aff-900f-6b7dcf824093 .

km-dev:PredicateObjectMap_a6dbb262-6c5a-4bf9-8046-83dac0e824fe rr:predicate prov:wasDerivedFrom .

km-dev:RefObjectMap_19e5b0ed-8128-4139-9ff9-96181d684d5b a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_727b91f8-d0a9-4505-bbbf-c2042fd6925c ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasObjectMap km-dev:RefObjectMap_19e5b0ed-8128-4139-9ff9-96181d684d5b .

km-dev:PredicateObjectMap_a6dbb262-6c5a-4bf9-8046-83dac0e824fe rr:objectMap km-dev:RefObjectMap_19e5b0ed-8128-4139-9ff9-96181d684d5b .

km-dev:TriplesMap_4bd05c15-ccd6-4363-8f14-3e0ce2386473 rr:predicateObjectMap km-dev:PredicateObjectMap_a6dbb262-6c5a-4bf9-8046-83dac0e824fe .

km-dev:PredicateObjectMap_a6dbb262-6c5a-4bf9-8046-83dac0e824fe a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_a6dbb262-6c5a-4bf9-8046-83dac0e824fe .

km-dev:TriplesMap_34d94bb6-cb3a-4b69-9422-e7eecbaaac83 a rr:TriplesMap .

_:node19729f85bx1 km-dev:hasTriplesMap km-dev:TriplesMap_34d94bb6-cb3a-4b69-9422-e7eecbaaac83 .

km-dev:TriplesMap_34d94bb6-cb3a-4b69-9422-e7eecbaaac83 km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx7 rr:tableName "stanford-features-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasLogicalTable _:node19729f85bx7 .

km-dev:TriplesMap_34d94bb6-cb3a-4b69-9422-e7eecbaaac83 rr:logicalTable _:node19729f85bx7 ;
	rr:subjectMap _:node19729f85bx8 .

_:node19729f85bx1 km-dev:hasSubjectMap _:node19729f85bx8 .

_:node19729f85bx8 km-dev:isPartOfMapping _:node19729f85bx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://www.w3.org/ns/prov#Activity1" ;
	rr:class prov:Activity ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "prov:Activity1" .

km-dev:PredicateObjectMap_f231c9e5-f53b-4bc0-a358-938c186b5c2f rr:predicate memex:databaseId .

_:node19729f85bx9 rr:column "[\"names2\",\"database_id\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasObjectMap _:node19729f85bx9 .

km-dev:PredicateObjectMap_f231c9e5-f53b-4bc0-a358-938c186b5c2f rr:objectMap _:node19729f85bx9 .

km-dev:TriplesMap_34d94bb6-cb3a-4b69-9422-e7eecbaaac83 rr:predicateObjectMap km-dev:PredicateObjectMap_f231c9e5-f53b-4bc0-a358-938c186b5c2f .

km-dev:PredicateObjectMap_f231c9e5-f53b-4bc0-a358-938c186b5c2f a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_f231c9e5-f53b-4bc0-a358-938c186b5c2f .

km-dev:PredicateObjectMap_54175a3f-a99e-4436-b222-887699c910db rr:predicate prov:endedAtTime .

_:node19729f85bx10 rr:column "[\"names2\",\"iso_stanford_modtime\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasObjectMap _:node19729f85bx10 .

km-dev:PredicateObjectMap_54175a3f-a99e-4436-b222-887699c910db rr:objectMap _:node19729f85bx10 .

km-dev:TriplesMap_34d94bb6-cb3a-4b69-9422-e7eecbaaac83 rr:predicateObjectMap km-dev:PredicateObjectMap_54175a3f-a99e-4436-b222-887699c910db .

km-dev:PredicateObjectMap_54175a3f-a99e-4436-b222-887699c910db a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_54175a3f-a99e-4436-b222-887699c910db .

km-dev:PredicateObjectMap_569c3d82-4ee6-4880-9444-1da51b70e8df rr:predicate prov:wasAttributedTo .

_:node19729f85bx11 rr:constant <http://memex.zapto.org/data/software/extractor/stanford/version/0.1> ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasObjectMap _:node19729f85bx11 .

km-dev:PredicateObjectMap_569c3d82-4ee6-4880-9444-1da51b70e8df rr:objectMap _:node19729f85bx11 .

km-dev:TriplesMap_34d94bb6-cb3a-4b69-9422-e7eecbaaac83 rr:predicateObjectMap km-dev:PredicateObjectMap_569c3d82-4ee6-4880-9444-1da51b70e8df .

km-dev:PredicateObjectMap_569c3d82-4ee6-4880-9444-1da51b70e8df a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_569c3d82-4ee6-4880-9444-1da51b70e8df .

km-dev:TriplesMap_0a2d3868-8db3-478a-887b-ef5e98c1c3e1 a rr:TriplesMap .

_:node19729f85bx1 km-dev:hasTriplesMap km-dev:TriplesMap_0a2d3868-8db3-478a-887b-ef5e98c1c3e1 .

km-dev:TriplesMap_0a2d3868-8db3-478a-887b-ef5e98c1c3e1 km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx12 rr:tableName "stanford-features-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasLogicalTable _:node19729f85bx12 .

km-dev:TriplesMap_0a2d3868-8db3-478a-887b-ef5e98c1c3e1 rr:logicalTable _:node19729f85bx12 ;
	rr:subjectMap _:node19729f85bx13 .

_:node19729f85bx1 km-dev:hasSubjectMap _:node19729f85bx13 .

_:node19729f85bx13 km-dev:isPartOfMapping _:node19729f85bx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/FeatureCollection1" ;
	rr:class memex:FeatureCollection ;
	rr:template "{crawl_uri}/featurecollection" .

km-dev:PredicateObjectMap_c5607dcb-7db4-41ac-a735-41c5b86dd7c5 rr:predicate memex:person_name_feature .

km-dev:RefObjectMap_d201c75b-97d8-40ff-b57f-ee7c23d59153 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_4bd05c15-ccd6-4363-8f14-3e0ce2386473 ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasObjectMap km-dev:RefObjectMap_d201c75b-97d8-40ff-b57f-ee7c23d59153 .

km-dev:PredicateObjectMap_c5607dcb-7db4-41ac-a735-41c5b86dd7c5 rr:objectMap km-dev:RefObjectMap_d201c75b-97d8-40ff-b57f-ee7c23d59153 .

km-dev:TriplesMap_0a2d3868-8db3-478a-887b-ef5e98c1c3e1 rr:predicateObjectMap km-dev:PredicateObjectMap_c5607dcb-7db4-41ac-a735-41c5b86dd7c5 .

km-dev:PredicateObjectMap_c5607dcb-7db4-41ac-a735-41c5b86dd7c5 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_c5607dcb-7db4-41ac-a735-41c5b86dd7c5 .

km-dev:TriplesMap_727b91f8-d0a9-4505-bbbf-c2042fd6925c a rr:TriplesMap .

_:node19729f85bx1 km-dev:hasTriplesMap km-dev:TriplesMap_727b91f8-d0a9-4505-bbbf-c2042fd6925c .

km-dev:TriplesMap_727b91f8-d0a9-4505-bbbf-c2042fd6925c km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx14 rr:tableName "stanford-features-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasLogicalTable _:node19729f85bx14 .

km-dev:TriplesMap_727b91f8-d0a9-4505-bbbf-c2042fd6925c rr:logicalTable _:node19729f85bx14 ;
	rr:subjectMap _:node19729f85bx15 .

_:node19729f85bx1 km-dev:hasSubjectMap _:node19729f85bx15 .

_:node19729f85bx15 km-dev:isPartOfMapping _:node19729f85bx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPage1" ;
	rr:class schema:WebPage ;
	rr:template "{crawl_uri}" .

km-dev:PredicateObjectMap_add6b7af-0d20-4c0f-b56f-1114e2d5e620 rr:predicate memex:hasFeatureCollection .

km-dev:RefObjectMap_c9dbac1b-263a-415b-9f44-e3b52e3ecd15 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_0a2d3868-8db3-478a-887b-ef5e98c1c3e1 ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasObjectMap km-dev:RefObjectMap_c9dbac1b-263a-415b-9f44-e3b52e3ecd15 .

km-dev:PredicateObjectMap_add6b7af-0d20-4c0f-b56f-1114e2d5e620 rr:objectMap km-dev:RefObjectMap_c9dbac1b-263a-415b-9f44-e3b52e3ecd15 .

km-dev:TriplesMap_727b91f8-d0a9-4505-bbbf-c2042fd6925c rr:predicateObjectMap km-dev:PredicateObjectMap_add6b7af-0d20-4c0f-b56f-1114e2d5e620 .

km-dev:PredicateObjectMap_add6b7af-0d20-4c0f-b56f-1114e2d5e620 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19729f85bx1 .

_:node19729f85bx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_add6b7af-0d20-4c0f-b56f-1114e2d5e620 .
