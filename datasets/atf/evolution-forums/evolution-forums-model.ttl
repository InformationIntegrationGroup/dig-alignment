@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix dgeo: <http://dig.isi.edu/ontology/dgeo/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix schemax: <http://topbraid.org/schemax/> .
@prefix crm: <http://www.cidoc-crm.org/rdfs/cidoc_crm_v6.0-draft-2015January.rdfs> .
@prefix schema: <http://schema.org/> .
@prefix geo: <http://www.opengis.net/ont/geosparql#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix memex: <http://memexproxy.com/ontology/> .
@prefix ht: <http://memexproxy.com/ontology/human-trafficking/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix km-dev: <http://isi.edu/integration/karma/dev#> .

_:node19j2838kex1 a km-dev:R2RMLMapping ;
	km-dev:sourceName "evolution-forums_2015-01-16.tsv.jl.json" ;
	km-dev:modelPublicationTime "1429225972366"^^xsd:long ;
	km-dev:modelVersion "1.7" ;
	km-dev:hasInputColumns "[[{\"columnName\":\"url\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"date_posted\"}],[{\"columnName\":\"split_weapons\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"user_attributes\"},{\"columnName\":\"label\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"post_id\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"user_attributes\"},{\"columnName\":\"value\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"content\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"signature\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"title\"}],[{\"columnName\":\"topic_title\"}],[{\"columnName\":\"split_prices\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"bitcoin_prices\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"weapons\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"topic_id\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"username\"}],[{\"columnName\":\"dollar_prices\"},{\"columnName\":\"Values\"}]]" ;
	km-dev:hasOutputColumns "[[{\"columnName\":\"posts\"},{\"columnName\":\"article_uri\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"address_uri\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"posts:\"},{\"columnName\":\"clean_post_count2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"clean_address\"}],[{\"columnName\":\"joined_dollar_prices\"}],[{\"columnName\":\"split_prices\"},{\"columnName\":\"split_prices2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"weapons\"},{\"columnName\":\"weapons2\"}],[{\"columnName\":\"topic_id\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"posts:\"},{\"columnName\":\"clean_post_count\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"username\"}],[{\"columnName\":\"dollar_prices\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"clean_address2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"joined_weapons\"}],[{\"columnName\":\"url\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"dateCreated\"}],[{\"columnName\":\"topic_title\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"provider_name2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"provider_name\"}],[{\"columnName\":\"bitcoin_prices\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"bitcoin_prices\"},{\"columnName\":\"bitcoin_prices2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"clean_content\"}],[{\"columnName\":\"dollar_prices\"},{\"columnName\":\"dollar_prices2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"posts\"},{\"columnName\":\"post_count\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"registered\"},{\"columnName\":\"enrollment_date\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Column_1\"}],[{\"columnName\":\"split_weapons\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"posts\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"from\"}],[{\"columnName\":\"split_weapons\"},{\"columnName\":\"split_weapons2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"title\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"posts\"},{\"columnName\":\"post_count2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"username2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"posts\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"registered\"},{\"columnName\":\"enrollment_date2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"state\"}],[{\"columnName\":\"prices\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"city\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"country\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"post_id\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"content\"}],[{\"columnName\":\"joined_bitcoin_prices\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Column_1\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"registered\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"from\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"registered\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"prices2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"joined:\"},{\"columnName\":\"joined_iso2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"signature_clean\"}],[{\"columnName\":\"joined_weapons2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"fc_uri\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"joined:\"},{\"columnName\":\"joined_iso\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"}]]" ;
	km-dev:hasModelLabel "evolution-forums" ;
	km-dev:hasBaseURI "http://dig.isi.edu/atf/data/page/" ;
	km-dev:hasWorksheetHistory """[
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"date_posted\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"dateCreated\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_date_created(getValue(\\\"date_posted\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"date_posted\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"dateCreated\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"signature\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"signature_clean\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return signature_clean(getValue(\\\"signature\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"post_id\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"article_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_article_uri(getValue(\\\"url\\\"), getValue(\\\"post_id\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"article_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"username\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"username2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"username\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"article_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/Article\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/Article1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:Article1 (add)\",
                    \"DomainId\": \"http://schema.org/Article1\",
                    \"DomainUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"article_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"article_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"dateCreated\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/dateCreated\",
                    \"DomainLabel\": \"schema:Article1\",
                    \"DomainId\": \"http://schema.org/Article1\",
                    \"DomainUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"dateCreated\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"dateCreated\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"title\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/WebPageElement\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/WebPageElement1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:WebPageElement1 (add)\",
                    \"DomainId\": \"http://schema.org/WebPageElement1 (add)\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/exampleOfWork\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/Article\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasBodyPart\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\",
                    \"edgeSourceUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://memexproxy.com/ontology/hasBodyPart\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/exampleOfWork\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/exampleOfWork\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/exampleOfWork\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/exampleOfWork\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/Article\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasTitlePart\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://memexproxy.com/ontology/hasTitlePart\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPageElement\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasTitlePart\",
                    \"edgeTargetId\": \"http://schema.org/WebPageElement1\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"content\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/WebPageElement\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/WebPageElement2 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:WebPageElement2 (add)\",
                    \"DomainId\": \"http://schema.org/WebPageElement2\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"signature_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/WebPageElement\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/WebPageElement3 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:WebPageElement3 (add)\",
                    \"DomainId\": \"http://schema.org/WebPageElement3\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPageElement\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasSignaturePart\",
                    \"edgeTargetId\": \"http://schema.org/WebPageElement3\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPageElement\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasBodyPart\",
                    \"edgeTargetId\": \"http://schema.org/WebPageElement2\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"username\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature1 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"username2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/person_username\",
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"username2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"fc_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_fc_uri(getValue(\\\"article_uri\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"article_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"fc_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"fc_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/FeatureCollection\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/FeatureCollection1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"memex:FeatureCollection1 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"fc_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"fc_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/FeatureCollection\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasFeatureCollection\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/person_username_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"properties\",
                \"value\": {
                    \"hasServiceProperties\": false,
                    \"hasPrefix\": false,
                    \"graphLabel\": \"\",
                    \"hasBaseURI\": true,
                    \"baseURI\": \"http://dig.isi.edu/atf/data/page/\"
                },
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetWorksheetPropertiesCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"person_username\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"person_username\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"person_username1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"keyhNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"user_attributes\"},
                    {\"columnName\": \"label\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"valuehNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"user_attributes\"},
                    {\"columnName\": \"value\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"notOtherColumn\",
                \"value\": \"true\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"user_attributes\\\"},{\\\"columnName\\\":\\\"label\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"user_attributes\\\"},{\\\"columnName\\\":\\\"value\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"from\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Column_1\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"registered\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"from\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Column_1\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"registered\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"UnfoldCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"city\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_get_city(getValue(\\\"Values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"city\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"city\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"state\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_get_state(getValue(\\\"Values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"state\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"content\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/text\",
                    \"DomainLabel\": \"schema:WebPageElement2\",
                    \"DomainId\": \"http://schema.org/WebPageElement2\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"signature_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/text\",
                    \"DomainLabel\": \"schema:WebPageElement3\",
                    \"DomainId\": \"http://schema.org/WebPageElement3\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"title\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/text\",
                    \"DomainLabel\": \"schema:WebPageElement1\",
                    \"DomainId\": \"http://schema.org/WebPageElement1\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"joined:\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"joined_iso\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_joined_date(getValue(\\\"Values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"joined:\"},
                    {\"columnName\": \"joined_iso\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"joined_iso2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"joined_iso\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"joined:\"},
                    {\"columnName\": \"joined_iso\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/enrollment_date\",
                    \"DomainLabel\": \"memex:Feature2 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature2 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"joined:\"},
                    {\"columnName\": \"joined_iso2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature2\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature2\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"enrollment_date\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"enrollment_date\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"enrollment_date1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature2\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/enrollment_date_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature2\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"properties\",
                \"value\": {
                    \"hasServiceProperties\": false,
                    \"hasPrefix\": false,
                    \"graphLabel\": \"spokaneguntrader\",
                    \"hasBaseURI\": false
                },
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetWorksheetPropertiesCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"state\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"country\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return \\\"US\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"country\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"country\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"address_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_address_uri(getValue(\\\"city\\\"), getValue(\\\"state\\\"), getValue(\\\"country\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"address_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"country\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_address\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_address(getValue(\\\"city\\\"), getValue(\\\"state\\\"), getValue(\\\"country\\\"), \\\",\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"clean_address\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature3 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature3 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature3\",
                    \"edgeId\": \"http://memexproxy.com/ontology/place_postalAddress_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature3\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"clean_address\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_address2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"clean_address\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"clean_address2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/place_postalAddress\",
                    \"DomainLabel\": \"memex:Feature3\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature3\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"place_postalAddress\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"place_postalAddress\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"place_postalAddress1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature3\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts:\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_post_count\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_clean_post_count(getValue(\\\"Values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts:\"},
                    {\"columnName\": \"clean_post_count\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_post_count2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"clean_post_count\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts:\"},
                    {\"columnName\": \"clean_post_count\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature4 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts:\"},
                    {\"columnName\": \"clean_post_count2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/person_postCount\",
                    \"DomainLabel\": \"memex:Feature4\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/person_postCount_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"person_postCount\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"person_postCount\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"person_postCount1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"next firearm:\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"values\",
                \"value\": [
                    {
                        \"name\": \"checked\",
                        \"value\": [
                            {\"columnName\": \"posts\"},
                            {\"columnName\": \"Unfold: label\"},
                            {\"columnName\": \"next firearm:\"}
                        ],
                        \"type\": \"hNodeId\"
                    },
                    {
                        \"name\": \"checked\",
                        \"value\": [
                            {\"columnName\": \"posts\"},
                            {\"columnName\": \"Unfold: label\"},
                            {\"columnName\": \"favorite firearm:\"}
                        ],
                        \"type\": \"hNodeId\"
                    }
                ],
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"ImplMethod\",
                \"value\": \"Longest\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"GlueCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"Values_1\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"joined_weapons\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return get_weapons(getValue(\\\"Values\\\"), getValue(\\\"Values_1\\\"), getValue(\\\"topic_title\\\"), getValue(\\\"title\\\"), getValue(\\\"signature_clean\\\"), getValue(\\\"content\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"joined_weapons\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"joined_weapons\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"delimiter\",
                \"value\": \"|\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColName\",
                \"value\": \"weapons\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newHNodeId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SplitValuesCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"weapons\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/weaponsMentioned\",
                    \"DomainLabel\": \"memex:Feature5 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"weapons\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"weapons2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"Values\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"weapons2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"weapons\"},
                    {\"columnName\": \"weapons2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature5\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"weapons2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"weapons2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/weaponsMentioned_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"weaponsMentioned_feature\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"weaponsMentioned_feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"weaponsMentioned_feature1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"post_id\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://www.w3.org/2000/01/rdf-schema#label\",
                    \"DomainLabel\": \"memex:Identifier1 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Identifier1 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Identifier\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Identifier1\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasIdentifier\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Identifier1\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"http://dig.isi.edu/data/thesauri/identifiertype/postid\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://dig.isi.edu/data/thesauri/identifiertype/postid1\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasType\",
                    \"edgeTargetId\": \"http://dig.isi.edu/data/thesauri/identifiertype/postid1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Identifier1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Identifier\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"topic_title\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/text\",
                    \"DomainLabel\": \"schema:WebPageElement4 (add)\",
                    \"DomainId\": \"http://schema.org/WebPageElement4\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPageElement4\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasTitlePart\",
                    \"edgeTargetId\": \"http://schema.org/WebPageElement4\",
                    \"edgeSourceId\": \"http://schema.org/Article2 (add)\",
                    \"edgeSourceUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/Article\",
                    \"edgeId\": \"http://schema.org/isPartOf\",
                    \"edgeTargetId\": \"http://schema.org/Article2\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"url\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/url\",
                    \"DomainLabel\": \"schema:Article2\",
                    \"DomainId\": \"http://schema.org/Article2\",
                    \"DomainUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"topic_id\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://www.w3.org/2000/01/rdf-schema#label\",
                    \"DomainLabel\": \"memex:Identifier2 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Identifier2 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Identifier\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Identifier2\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasIdentifier\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Identifier2\",
                    \"edgeSourceId\": \"http://schema.org/Article2\",
                    \"edgeSourceUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://dig.isi.edu/data/thesauri/identifiertype/postid1\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasType\",
                    \"edgeTargetId\": \"http://dig.isi.edu/data/thesauri/identifiertype/postid1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Identifier2\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Identifier\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"url\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"prices\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return get_prices(getValue(\\\"topic_title\\\"), getValue(\\\"title\\\"), getValue(\\\"content\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"url\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return get_prices(getValue(\\\"topic_title\\\"), getValue(\\\"title\\\"), getValue(\\\"content\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"previousCommandId\",
                \"value\": \"C7318\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"targetHNodeId\",
                \"value\": [{\"columnName\": \"prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitEditPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"prices2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"prices\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"prices2\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature6 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://memexproxy.com/ontology/organization_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP5:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/pricesMentioned_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/pricesMentioned\",
                    \"DomainLabel\": \"memex:Feature6\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"pricesMentioned\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"pricesMentioned\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"pricesMentioned1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"weaponsMentioned\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"nodeId\",
                \"value\": \"weaponsMentioned_feature1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"article_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"provider_name\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_provider_name(getValue(\\\"url\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"article_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"provider_name\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"previousCommandId\",
                \"value\": \"C8469\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"targetHNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"provider_name\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitEditPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"article_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_provider_name(getValue(\\\"url\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"previousCommandId\",
                \"value\": \"C8556\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"targetHNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"provider_name\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitEditPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"provider_name\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"provider_name2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"provider_name\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"provider_name\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature7 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature7 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"provider_name2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/provider_name\",
                    \"DomainLabel\": \"memex:Feature7\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature7\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"provider_name\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"provider_name\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"provider_name1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature7\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature7\",
                    \"edgeId\": \"http://memexproxy.com/ontology/provider_name_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature7\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"delimiter\",
                \"value\": \"|\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColName\",
                \"value\": \"split_prices\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newHNodeId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SplitValuesCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"split_prices\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"split_prices2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"Values\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"split_prices\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"split_prices\\\"},{\\\"columnName\\\":\\\"split_prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"split_prices\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/pricesMentioned\",
                    \"DomainLabel\": \"memex:Feature6\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"split_prices\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"UnassignSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"split_prices\"},
                    {\"columnName\": \"split_prices2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature6\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"split_prices\\\"},{\\\"columnName\\\":\\\"split_prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"prices2\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"UnassignSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"split_prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"joined_bitcoin_prices\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return get_bitcoin_prices(getValue(\\\"topic_title\\\"), getValue(\\\"title\\\"), getValue(\\\"signature\\\"), getValue(\\\"clean_content\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"joined_bitcoin_prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"joined_bitcoin_prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"delimiter\",
                \"value\": \"|\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColName\",
                \"value\": \"bitcoin_prices\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newHNodeId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SplitValuesCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"bitcoin_prices\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"bitcoin_prices2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"Values\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"bitcoin_prices\\\"},{\\\"columnName\\\":\\\"bitcoin_prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"bitcoin_prices\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature8 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature8 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"bitcoin_prices\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"bitcoin_prices\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"bitcoin_prices\"},
                    {\"columnName\": \"bitcoin_prices2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/bitcoinPricesMentioned\",
                    \"DomainLabel\": \"memex:Feature8\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature8\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"bitcoin_prices\\\"},{\\\"columnName\\\":\\\"bitcoin_prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"bitcoin_prices\\\"},{\\\"columnName\\\":\\\"bitcoin_prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1357AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/bitcoinPricesMentioned_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature8\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"bitcoinPricesMentioned\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"bitcoinPricesMentioned\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"bitcoinPricesMentioned1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature8\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/person_postCount\",
                    \"DomainLabel\": \"memex:Feature4\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts:\"},
                    {\"columnName\": \"clean_post_count\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"UnassignSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts:\"},
                    {\"columnName\": \"clean_post_count2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"UnassignSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"post_count\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return numericOnly(getValue(\\\"Values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_count\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"post_count\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"post_count2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"post_count\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_count\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_count2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"post_count\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/person_postCount\",
                    \"DomainLabel\": \"memex:Feature4\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_count\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_count\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"UnassignSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"post_count2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature4\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_count2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_count2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"registered\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"enrollment_date\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_joined_date(getValue(\\\"Values\\\"), \\\"%Y-%M-%D\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"registered\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"registered\\\"},{\\\"columnName\\\":\\\"enrollment_date\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"registered\"},
                    {\"columnName\": \"enrollment_date\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"enrollment_date2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"enrollment_date\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"registered\\\"},{\\\"columnName\\\":\\\"enrollment_date\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"registered\\\"},{\\\"columnName\\\":\\\"enrollment_date2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"registered\"},
                    {\"columnName\": \"enrollment_date\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/enrollment_date\",
                    \"DomainLabel\": \"memex:Feature2\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature2\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"registered\\\"},{\\\"columnName\\\":\\\"enrollment_date\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"registered\\\"},{\\\"columnName\\\":\\\"enrollment_date\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"registered\"},
                    {\"columnName\": \"enrollment_date2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature2\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature2\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"registered\\\"},{\\\"columnName\\\":\\\"enrollment_date2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"registered\\\"},{\\\"columnName\\\":\\\"enrollment_date2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"joined:\"},
                    {\"columnName\": \"joined_iso\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"UnassignSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"joined:\"},
                    {\"columnName\": \"joined_iso2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"UnassignSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"content\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_content\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_body_clean(getValue('content'))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"clean_content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"clean_content\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/text\",
                    \"DomainLabel\": \"schema:WebPageElement2\",
                    \"DomainId\": \"http://schema.org/WebPageElement2\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"clean_content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"clean_content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"content\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"UnassignSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"split_prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return get_bitcoin_prices(getValue(\\\"topic_title\\\"), getValue(\\\"title\\\"), getValue(\\\"signature\\\"), getValue(\\\"clean_content\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"previousCommandId\",
                \"value\": \"C9775\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"targetHNodeId\",
                \"value\": [{\"columnName\": \"joined_bitcoin_prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"joined_bitcoin_prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitEditPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"joined_bitcoin_prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"joined_dollar_prices\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return get_dollar_prices(getValue(\\\"topic_title\\\"), getValue(\\\"title\\\"), getValue(\\\"signature\\\"), getValue(\\\"clean_content\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"joined_dollar_prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"joined_dollar_prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"delimiter\",
                \"value\": \"|\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColName\",
                \"value\": \"dollar_prices\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newHNodeId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SplitValuesCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"dollar_prices\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"dollar_prices2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"Values\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"dollar_prices\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"dollar_prices\\\"},{\\\"columnName\\\":\\\"dollar_prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"dollar_prices\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/pricesMentioned\",
                    \"DomainLabel\": \"memex:Feature6\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"dollar_prices\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"dollar_prices\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"dollar_prices\"},
                    {\"columnName\": \"dollar_prices2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature6\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"dollar_prices\\\"},{\\\"columnName\\\":\\\"dollar_prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"dollar_prices\\\"},{\\\"columnName\\\":\\\"dollar_prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"split_prices\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"split_prices\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"UnassignSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"split_prices\"},
                    {\"columnName\": \"split_prices2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"split_prices\\\"},{\\\"columnName\\\":\\\"split_prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"UnassignSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"orderedColumns\",
                \"value\": [
                    {
                        \"id\": [{\"columnName\": \"url\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"url\"
                    },
                    {
                        \"id\": [{\"columnName\": \"prices\"}],
                        \"visible\": true,
                        \"hideable\": true,
                        \"name\": \"prices\"
                    },
                    {
                        \"id\": [{\"columnName\": \"prices2\"}],
                        \"visible\": true,
                        \"hideable\": true,
                        \"name\": \"prices2\"
                    },
                    {
                        \"id\": [{\"columnName\": \"topic_title\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"topic_title\"
                    },
                    {
                        \"id\": [{\"columnName\": \"posts\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"posts\",
                        \"children\": \"[{\\\"id\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_number\\\"}],\\\"visible\\\":true,\\\"hideable\\\":true,\\\"name\\\":\\\"post_number\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"user_id\\\"}],\\\"visible\\\":true,\\\"hideable\\\":true,\\\"name\\\":\\\"user_id\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"title\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"title\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}],\\\"visible\\\":true,\\\"hideable\\\":true,\\\"name\\\":\\\"content\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"clean_content\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"clean_content\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_id\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"post_id\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"article_uri\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"article_uri\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"provider_name\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name2\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"provider_name2\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature\\\"}],\\\"visible\\\":true,\\\"hideable\\\":true,\\\"name\\\":\\\"signature\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"signature_clean\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"user_attributes\\\"}],\\\"visible\\\":true,\\\"hideable\\\":true,\\\"name\\\":\\\"user_attributes\\\",\\\"children\\\":\\\"[{\\\\\\\"id\\\\\\\":[{\\\\\\\"columnName\\\\\\\":\\\\\\\"posts\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"user_attributes\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"value\\\\\\\"}],\\\\\\\"visible\\\\\\\":true,\\\\\\\"hideable\\\\\\\":true,\\\\\\\"name\\\\\\\":\\\\\\\"value\\\\\\\"},{\\\\\\\"id\\\\\\\":[{\\\\\\\"columnName\\\\\\\":\\\\\\\"posts\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"user_attributes\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"label\\\\\\\"}],\\\\\\\"visible\\\\\\\":true,\\\\\\\"hideable\\\\\\\":true,\\\\\\\"name\\\\\\\":\\\\\\\"label\\\\\\\"}]\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"user_tag\\\"}],\\\"visible\\\":true,\\\"hideable\\\":true,\\\"name\\\":\\\"user_tag\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"date_posted\\\"}],\\\"visible\\\":true,\\\"hideable\\\":true,\\\"name\\\":\\\"date_posted\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"dateCreated\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"dateCreated\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"username\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username2\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"username2\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"fc_uri\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"fc_uri\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"Unfold: label\\\",\\\"children\\\":\\\"[{\\\\\\\"id\\\\\\\":[{\\\\\\\"columnName\\\\\\\":\\\\\\\"posts\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"Unfold: label\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"posts\\\\\\\"}],\\\\\\\"visible\\\\\\\":true,\\\\\\\"hideable\\\\\\\":false,\\\\\\\"name\\\\\\\":\\\\\\\"posts\\\\\\\",\\\\\\\"children\\\\\\\":\\\\\\\"[{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Values\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Values\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"post_count\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"post_count\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"post_count2\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"post_count2\\\\\\\\\\\\\\\"}]\\\\\\\"},{\\\\\\\"id\\\\\\\":[{\\\\\\\"columnName\\\\\\\":\\\\\\\"posts\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"Unfold: label\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"from\\\\\\\"}],\\\\\\\"visible\\\\\\\":true,\\\\\\\"hideable\\\\\\\":true,\\\\\\\"name\\\\\\\":\\\\\\\"from\\\\\\\",\\\\\\\"children\\\\\\\":\\\\\\\"[{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"from\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Values\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Values\\\\\\\\\\\\\\\"}]\\\\\\\"},{\\\\\\\"id\\\\\\\":[{\\\\\\\"columnName\\\\\\\":\\\\\\\"posts\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"Unfold: label\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"registered\\\\\\\"}],\\\\\\\"visible\\\\\\\":true,\\\\\\\"hideable\\\\\\\":false,\\\\\\\"name\\\\\\\":\\\\\\\"registered\\\\\\\",\\\\\\\"children\\\\\\\":\\\\\\\"[{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"registered\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Values\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Values\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"registered\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"enrollment_date\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"enrollment_date\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"registered\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"enrollment_date2\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"enrollment_date2\\\\\\\\\\\\\\\"}]\\\\\\\"},{\\\\\\\"id\\\\\\\":[{\\\\\\\"columnName\\\\\\\":\\\\\\\"posts\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"Unfold: label\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"Column_1\\\\\\\"}],\\\\\\\"visible\\\\\\\":true,\\\\\\\"hideable\\\\\\\":true,\\\\\\\"name\\\\\\\":\\\\\\\"Column_1\\\\\\\",\\\\\\\"children\\\\\\\":\\\\\\\"[{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Column_1\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Values\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Values\\\\\\\\\\\\\\\"}]\\\\\\\"},{\\\\\\\"id\\\\\\\":[{\\\\\\\"columnName\\\\\\\":\\\\\\\"posts\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"Unfold: label\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"city, state:\\\\\\\"}],\\\\\\\"visible\\\\\\\":true,\\\\\\\"hideable\\\\\\\":false,\\\\\\\"name\\\\\\\":\\\\\\\"city, state:\\\\\\\",\\\\\\\"children\\\\\\\":\\\\\\\"[{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"city, state:\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Values\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Values\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"city, state:\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"city\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"city\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"city, state:\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"state\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"state\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"city, state:\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"country\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"country\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"city, state:\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"clean_address\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"clean_address\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"city, state:\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"clean_address2\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"clean_address2\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"city, state:\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"address_uri\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"address_uri\\\\\\\\\\\\\\\"}]\\\\\\\"},{\\\\\\\"id\\\\\\\":[{\\\\\\\"columnName\\\\\\\":\\\\\\\"posts\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"Unfold: label\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"joined:\\\\\\\"}],\\\\\\\"visible\\\\\\\":true,\\\\\\\"hideable\\\\\\\":true,\\\\\\\"name\\\\\\\":\\\\\\\"joined:\\\\\\\",\\\\\\\"children\\\\\\\":\\\\\\\"[{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"joined:\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Values\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Values\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"joined:\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"joined_iso\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"joined_iso\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"joined:\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"joined_iso2\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"joined_iso2\\\\\\\\\\\\\\\"}]\\\\\\\"},{\\\\\\\"id\\\\\\\":[{\\\\\\\"columnName\\\\\\\":\\\\\\\"posts\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"Unfold: label\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"posts:\\\\\\\"}],\\\\\\\"visible\\\\\\\":true,\\\\\\\"hideable\\\\\\\":true,\\\\\\\"name\\\\\\\":\\\\\\\"posts:\\\\\\\",\\\\\\\"children\\\\\\\":\\\\\\\"[{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts:\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Values\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Values\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts:\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"clean_post_count\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"clean_post_count\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts:\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"clean_post_count2\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"clean_post_count2\\\\\\\\\\\\\\\"}]\\\\\\\"},{\\\\\\\"id\\\\\\\":[{\\\\\\\"columnName\\\\\\\":\\\\\\\"posts\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"Unfold: label\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"next firearm:\\\\\\\"}],\\\\\\\"visible\\\\\\\":true,\\\\\\\"hideable\\\\\\\":true,\\\\\\\"name\\\\\\\":\\\\\\\"next firearm:\\\\\\\"},{\\\\\\\"id\\\\\\\":[{\\\\\\\"columnName\\\\\\\":\\\\\\\"posts\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"Unfold: label\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"favorite firearm:\\\\\\\"}],\\\\\\\"visible\\\\\\\":true,\\\\\\\"hideable\\\\\\\":true,\\\\\\\"name\\\\\\\":\\\\\\\"favorite firearm:\\\\\\\"},{\\\\\\\"id\\\\\\\":[{\\\\\\\"columnName\\\\\\\":\\\\\\\"posts\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"Unfold: label\\\\\\\"},{\\\\\\\"columnName\\\\\\\":\\\\\\\"Glue_1\\\\\\\"}],\\\\\\\"visible\\\\\\\":true,\\\\\\\"hideable\\\\\\\":false,\\\\\\\"name\\\\\\\":\\\\\\\"Glue_1\\\\\\\",\\\\\\\"children\\\\\\\":\\\\\\\"[{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Glue_1\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Values_1\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Values_1\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Glue_1\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"joined_weapons\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"joined_weapons\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Glue_1\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"weapons\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"weapons\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"children\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"[{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Glue_1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"weapons\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Values\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Values\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"posts\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Unfold: label\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Glue_1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"weapons\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"weapons2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"visible\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hideable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"weapons2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}]\\\\\\\\\\\\\\\"}]\\\\\\\"}]\\\"}]\"
                    },
                    {
                        \"id\": [{\"columnName\": \"topic_id\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"topic_id\"
                    },
                    {
                        \"id\": [{\"columnName\": \"split_prices\"}],
                        \"visible\": true,
                        \"hideable\": true,
                        \"name\": \"split_prices\",
                        \"children\": \"[{\\\"id\\\":[{\\\"columnName\\\":\\\"split_prices\\\"},{\\\"columnName\\\":\\\"Values\\\"}],\\\"visible\\\":true,\\\"hideable\\\":true,\\\"name\\\":\\\"Values\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"split_prices\\\"},{\\\"columnName\\\":\\\"split_prices2\\\"}],\\\"visible\\\":true,\\\"hideable\\\":true,\\\"name\\\":\\\"split_prices2\\\"}]\"
                    },
                    {
                        \"id\": [{\"columnName\": \"joined_dollar_prices\"}],
                        \"visible\": true,
                        \"hideable\": true,
                        \"name\": \"joined_dollar_prices\"
                    },
                    {
                        \"id\": [{\"columnName\": \"dollar_prices\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"dollar_prices\",
                        \"children\": \"[{\\\"id\\\":[{\\\"columnName\\\":\\\"dollar_prices\\\"},{\\\"columnName\\\":\\\"Values\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"Values\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"dollar_prices\\\"},{\\\"columnName\\\":\\\"dollar_prices2\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"dollar_prices2\\\"}]\"
                    },
                    {
                        \"id\": [{\"columnName\": \"joined_bitcoin_prices\"}],
                        \"visible\": true,
                        \"hideable\": true,
                        \"name\": \"joined_bitcoin_prices\"
                    },
                    {
                        \"id\": [{\"columnName\": \"bitcoin_prices\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"bitcoin_prices\",
                        \"children\": \"[{\\\"id\\\":[{\\\"columnName\\\":\\\"bitcoin_prices\\\"},{\\\"columnName\\\":\\\"Values\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"Values\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"bitcoin_prices\\\"},{\\\"columnName\\\":\\\"bitcoin_prices2\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"bitcoin_prices2\\\"}]\"
                    }
                ],
                \"type\": \"orderedColumns\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"OrganizeColumnsCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"bitcoin_prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"joined_weapons2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return get_weapons(getValue(\\\"topic_title\\\"), getValue(\\\"title\\\"), getValue(\\\"signature\\\"), getValue(\\\"clean_content\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"joined_weapons2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"joined_weapons2\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"delimiter\",
                \"value\": \"|\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColName\",
                \"value\": \"split_values\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newHNodeId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SplitValuesCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"joined_weapons2\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"delimiter\",
                \"value\": \"|\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColName\",
                \"value\": \"split_weapons\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newHNodeId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SplitValuesCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"split_weapons\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"split_weapons2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"Values\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"split_weapons\\\"},{\\\"columnName\\\":\\\"split_weapons2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"split_weapons\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature5\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"split_weapons\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"split_weapons\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"weapons\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"UnassignSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"weapons\"},
                    {\"columnName\": \"weapons2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"weapons2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"weapons2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"UnassignSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"split_weapons\"},
                    {\"columnName\": \"split_weapons2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/weaponsMentioned\",
                    \"DomainLabel\": \"memex:Feature5\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"split_weapons\\\"},{\\\"columnName\\\":\\\"split_weapons2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"split_weapons\\\"},{\\\"columnName\\\":\\\"split_weapons2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"properties\",
                \"value\": {
                    \"hasServiceProperties\": false,
                    \"hasPrefix\": false,
                    \"graphLabel\": \"evolution-forums\",
                    \"hasBaseURI\": false
                },
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetWorksheetPropertiesCommand\"
    }
]""" .

km-dev:TriplesMap_fe639100-17a1-4e42-a02a-184fa4c9b935 a rr:TriplesMap .

_:node19j2838kex1 km-dev:hasTriplesMap km-dev:TriplesMap_fe639100-17a1-4e42-a02a-184fa4c9b935 .

km-dev:TriplesMap_fe639100-17a1-4e42-a02a-184fa4c9b935 km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex2 rr:tableName "evolution-forums_2015-01-16.tsv.jl.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasLogicalTable _:node19j2838kex2 .

km-dev:TriplesMap_fe639100-17a1-4e42-a02a-184fa4c9b935 rr:logicalTable _:node19j2838kex2 ;
	rr:subjectMap _:node19j2838kex3 .

_:node19j2838kex1 km-dev:hasSubjectMap _:node19j2838kex3 .

_:node19j2838kex3 km-dev:isPartOfMapping _:node19j2838kex1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature1" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature1" .

km-dev:PredicateObjectMap_4c16c003-be97-46a8-a822-1da15f0ab37b rr:predicate memex:featureName .

_:node19j2838kex4 rr:constant "person_username" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex4 .

km-dev:PredicateObjectMap_4c16c003-be97-46a8-a822-1da15f0ab37b rr:objectMap _:node19j2838kex4 .

km-dev:TriplesMap_fe639100-17a1-4e42-a02a-184fa4c9b935 rr:predicateObjectMap km-dev:PredicateObjectMap_4c16c003-be97-46a8-a822-1da15f0ab37b .

km-dev:PredicateObjectMap_4c16c003-be97-46a8-a822-1da15f0ab37b a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_4c16c003-be97-46a8-a822-1da15f0ab37b .

km-dev:PredicateObjectMap_90cda915-35ca-4637-82fc-17f2a2be71a7 rr:predicate memex:featureValue .

_:node19j2838kex5 rr:column "[\"posts\",\"username\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex5 .

km-dev:PredicateObjectMap_90cda915-35ca-4637-82fc-17f2a2be71a7 rr:objectMap _:node19j2838kex5 .

km-dev:TriplesMap_fe639100-17a1-4e42-a02a-184fa4c9b935 rr:predicateObjectMap km-dev:PredicateObjectMap_90cda915-35ca-4637-82fc-17f2a2be71a7 .

km-dev:PredicateObjectMap_90cda915-35ca-4637-82fc-17f2a2be71a7 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_90cda915-35ca-4637-82fc-17f2a2be71a7 .

km-dev:PredicateObjectMap_8dc27fe5-1126-4abe-9540-cca625a9849b rr:predicate memex:person_username .

_:node19j2838kex6 rr:column "[\"posts\",\"username\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex6 .

km-dev:PredicateObjectMap_8dc27fe5-1126-4abe-9540-cca625a9849b rr:objectMap _:node19j2838kex6 .

km-dev:TriplesMap_fe639100-17a1-4e42-a02a-184fa4c9b935 rr:predicateObjectMap km-dev:PredicateObjectMap_8dc27fe5-1126-4abe-9540-cca625a9849b .

km-dev:PredicateObjectMap_8dc27fe5-1126-4abe-9540-cca625a9849b a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_8dc27fe5-1126-4abe-9540-cca625a9849b .

km-dev:TriplesMap_5a19f19c-5841-46a0-8a6b-15871c32283f a rr:TriplesMap .

_:node19j2838kex1 km-dev:hasTriplesMap km-dev:TriplesMap_5a19f19c-5841-46a0-8a6b-15871c32283f .

km-dev:TriplesMap_5a19f19c-5841-46a0-8a6b-15871c32283f km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex7 rr:tableName "evolution-forums_2015-01-16.tsv.jl.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasLogicalTable _:node19j2838kex7 .

km-dev:TriplesMap_5a19f19c-5841-46a0-8a6b-15871c32283f rr:logicalTable _:node19j2838kex7 ;
	rr:subjectMap _:node19j2838kex8 .

_:node19j2838kex1 km-dev:hasSubjectMap _:node19j2838kex8 .

_:node19j2838kex8 km-dev:isPartOfMapping _:node19j2838kex1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature2" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature2" .

km-dev:PredicateObjectMap_2d3b862e-47d3-4585-b7e8-b0af43eb78ee rr:predicate memex:enrollment_date .

_:node19j2838kex9 rr:column "[\"posts\",\"Unfold: label\",\"registered\",\"enrollment_date\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex9 .

km-dev:PredicateObjectMap_2d3b862e-47d3-4585-b7e8-b0af43eb78ee rr:objectMap _:node19j2838kex9 .

km-dev:TriplesMap_5a19f19c-5841-46a0-8a6b-15871c32283f rr:predicateObjectMap km-dev:PredicateObjectMap_2d3b862e-47d3-4585-b7e8-b0af43eb78ee .

km-dev:PredicateObjectMap_2d3b862e-47d3-4585-b7e8-b0af43eb78ee a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_2d3b862e-47d3-4585-b7e8-b0af43eb78ee .

km-dev:PredicateObjectMap_067ddf1c-a073-4d55-859a-6474e3379244 rr:predicate memex:featureName .

_:node19j2838kex10 rr:constant "enrollment_date" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex10 .

km-dev:PredicateObjectMap_067ddf1c-a073-4d55-859a-6474e3379244 rr:objectMap _:node19j2838kex10 .

km-dev:TriplesMap_5a19f19c-5841-46a0-8a6b-15871c32283f rr:predicateObjectMap km-dev:PredicateObjectMap_067ddf1c-a073-4d55-859a-6474e3379244 .

km-dev:PredicateObjectMap_067ddf1c-a073-4d55-859a-6474e3379244 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_067ddf1c-a073-4d55-859a-6474e3379244 .

km-dev:PredicateObjectMap_c0f10ea3-6f10-4d3b-8bb2-a90d2f35da93 rr:predicate memex:featureValue .

_:node19j2838kex11 rr:column "[\"posts\",\"Unfold: label\",\"registered\",\"enrollment_date\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex11 .

km-dev:PredicateObjectMap_c0f10ea3-6f10-4d3b-8bb2-a90d2f35da93 rr:objectMap _:node19j2838kex11 .

km-dev:TriplesMap_5a19f19c-5841-46a0-8a6b-15871c32283f rr:predicateObjectMap km-dev:PredicateObjectMap_c0f10ea3-6f10-4d3b-8bb2-a90d2f35da93 .

km-dev:PredicateObjectMap_c0f10ea3-6f10-4d3b-8bb2-a90d2f35da93 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_c0f10ea3-6f10-4d3b-8bb2-a90d2f35da93 .

km-dev:TriplesMap_a637a08e-e33a-4550-bf59-45cc4b465abb a rr:TriplesMap .

_:node19j2838kex1 km-dev:hasTriplesMap km-dev:TriplesMap_a637a08e-e33a-4550-bf59-45cc4b465abb .

km-dev:TriplesMap_a637a08e-e33a-4550-bf59-45cc4b465abb km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex12 rr:tableName "evolution-forums_2015-01-16.tsv.jl.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasLogicalTable _:node19j2838kex12 .

km-dev:TriplesMap_a637a08e-e33a-4550-bf59-45cc4b465abb rr:logicalTable _:node19j2838kex12 ;
	rr:subjectMap _:node19j2838kex13 .

_:node19j2838kex1 km-dev:hasSubjectMap _:node19j2838kex13 .

_:node19j2838kex13 km-dev:isPartOfMapping _:node19j2838kex1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature3" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature3" .

km-dev:PredicateObjectMap_48fa02e7-5eeb-403b-844d-9416c82b1046 rr:predicate memex:featureName .

_:node19j2838kex14 rr:constant "place_postalAddress" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex14 .

km-dev:PredicateObjectMap_48fa02e7-5eeb-403b-844d-9416c82b1046 rr:objectMap _:node19j2838kex14 .

km-dev:TriplesMap_a637a08e-e33a-4550-bf59-45cc4b465abb rr:predicateObjectMap km-dev:PredicateObjectMap_48fa02e7-5eeb-403b-844d-9416c82b1046 .

km-dev:PredicateObjectMap_48fa02e7-5eeb-403b-844d-9416c82b1046 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_48fa02e7-5eeb-403b-844d-9416c82b1046 .

km-dev:PredicateObjectMap_66cde31e-07a9-4bbf-a112-f6b6ee92d58f rr:predicate memex:featureValue .

_:node19j2838kex15 rr:column "[\"posts\",\"Unfold: label\",\"city, state:\",\"clean_address\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex15 .

km-dev:PredicateObjectMap_66cde31e-07a9-4bbf-a112-f6b6ee92d58f rr:objectMap _:node19j2838kex15 .

km-dev:TriplesMap_a637a08e-e33a-4550-bf59-45cc4b465abb rr:predicateObjectMap km-dev:PredicateObjectMap_66cde31e-07a9-4bbf-a112-f6b6ee92d58f .

km-dev:PredicateObjectMap_66cde31e-07a9-4bbf-a112-f6b6ee92d58f a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_66cde31e-07a9-4bbf-a112-f6b6ee92d58f .

km-dev:PredicateObjectMap_62dc3410-b6e4-4feb-800c-87aef3907bb6 rr:predicate memex:place_postalAddress .

_:node19j2838kex16 rr:column "[\"posts\",\"Unfold: label\",\"city, state:\",\"clean_address\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex16 .

km-dev:PredicateObjectMap_62dc3410-b6e4-4feb-800c-87aef3907bb6 rr:objectMap _:node19j2838kex16 .

km-dev:TriplesMap_a637a08e-e33a-4550-bf59-45cc4b465abb rr:predicateObjectMap km-dev:PredicateObjectMap_62dc3410-b6e4-4feb-800c-87aef3907bb6 .

km-dev:PredicateObjectMap_62dc3410-b6e4-4feb-800c-87aef3907bb6 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_62dc3410-b6e4-4feb-800c-87aef3907bb6 .

km-dev:TriplesMap_60403c0d-a579-439a-960b-3edb05628a5e a rr:TriplesMap .

_:node19j2838kex1 km-dev:hasTriplesMap km-dev:TriplesMap_60403c0d-a579-439a-960b-3edb05628a5e .

km-dev:TriplesMap_60403c0d-a579-439a-960b-3edb05628a5e km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex17 rr:tableName "evolution-forums_2015-01-16.tsv.jl.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasLogicalTable _:node19j2838kex17 .

km-dev:TriplesMap_60403c0d-a579-439a-960b-3edb05628a5e rr:logicalTable _:node19j2838kex17 ;
	rr:subjectMap _:node19j2838kex18 .

_:node19j2838kex1 km-dev:hasSubjectMap _:node19j2838kex18 .

_:node19j2838kex18 km-dev:isPartOfMapping _:node19j2838kex1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature4" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature4" .

km-dev:PredicateObjectMap_722f8f3d-5811-4c39-9a51-65306c2b49fd rr:predicate memex:featureName .

_:node19j2838kex19 rr:constant "person_postCount" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex19 .

km-dev:PredicateObjectMap_722f8f3d-5811-4c39-9a51-65306c2b49fd rr:objectMap _:node19j2838kex19 .

km-dev:TriplesMap_60403c0d-a579-439a-960b-3edb05628a5e rr:predicateObjectMap km-dev:PredicateObjectMap_722f8f3d-5811-4c39-9a51-65306c2b49fd .

km-dev:PredicateObjectMap_722f8f3d-5811-4c39-9a51-65306c2b49fd a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_722f8f3d-5811-4c39-9a51-65306c2b49fd .

km-dev:PredicateObjectMap_e717b3e0-367a-4bb9-b1ce-7d6dc5d0b195 rr:predicate memex:featureValue .

_:node19j2838kex20 rr:column "[\"posts\",\"Unfold: label\",\"posts\",\"post_count\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex20 .

km-dev:PredicateObjectMap_e717b3e0-367a-4bb9-b1ce-7d6dc5d0b195 rr:objectMap _:node19j2838kex20 .

km-dev:TriplesMap_60403c0d-a579-439a-960b-3edb05628a5e rr:predicateObjectMap km-dev:PredicateObjectMap_e717b3e0-367a-4bb9-b1ce-7d6dc5d0b195 .

km-dev:PredicateObjectMap_e717b3e0-367a-4bb9-b1ce-7d6dc5d0b195 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_e717b3e0-367a-4bb9-b1ce-7d6dc5d0b195 .

km-dev:PredicateObjectMap_c4ec70ac-07d8-4258-ae46-703cfbb641d9 rr:predicate memex:person_postCount .

_:node19j2838kex21 rr:column "[\"posts\",\"Unfold: label\",\"posts\",\"post_count\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex21 .

km-dev:PredicateObjectMap_c4ec70ac-07d8-4258-ae46-703cfbb641d9 rr:objectMap _:node19j2838kex21 .

km-dev:TriplesMap_60403c0d-a579-439a-960b-3edb05628a5e rr:predicateObjectMap km-dev:PredicateObjectMap_c4ec70ac-07d8-4258-ae46-703cfbb641d9 .

km-dev:PredicateObjectMap_c4ec70ac-07d8-4258-ae46-703cfbb641d9 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_c4ec70ac-07d8-4258-ae46-703cfbb641d9 .

km-dev:TriplesMap_11834c38-02d0-471e-8fea-2299ec2b2c5a a rr:TriplesMap .

_:node19j2838kex1 km-dev:hasTriplesMap km-dev:TriplesMap_11834c38-02d0-471e-8fea-2299ec2b2c5a .

km-dev:TriplesMap_11834c38-02d0-471e-8fea-2299ec2b2c5a km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex22 rr:tableName "evolution-forums_2015-01-16.tsv.jl.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasLogicalTable _:node19j2838kex22 .

km-dev:TriplesMap_11834c38-02d0-471e-8fea-2299ec2b2c5a rr:logicalTable _:node19j2838kex22 ;
	rr:subjectMap _:node19j2838kex23 .

_:node19j2838kex1 km-dev:hasSubjectMap _:node19j2838kex23 .

_:node19j2838kex23 km-dev:isPartOfMapping _:node19j2838kex1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature5" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature5" .

km-dev:PredicateObjectMap_180a0cd5-a208-43d4-81c6-ace2fd1a4d36 rr:predicate memex:featureName .

_:node19j2838kex24 rr:constant "weaponsMentioned" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex24 .

km-dev:PredicateObjectMap_180a0cd5-a208-43d4-81c6-ace2fd1a4d36 rr:objectMap _:node19j2838kex24 .

km-dev:TriplesMap_11834c38-02d0-471e-8fea-2299ec2b2c5a rr:predicateObjectMap km-dev:PredicateObjectMap_180a0cd5-a208-43d4-81c6-ace2fd1a4d36 .

km-dev:PredicateObjectMap_180a0cd5-a208-43d4-81c6-ace2fd1a4d36 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_180a0cd5-a208-43d4-81c6-ace2fd1a4d36 .

km-dev:PredicateObjectMap_e3e49016-4cd3-458c-affd-d8550178b8e6 rr:predicate memex:featureValue .

_:node19j2838kex25 rr:column "[\"split_weapons\",\"Values\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex25 .

km-dev:PredicateObjectMap_e3e49016-4cd3-458c-affd-d8550178b8e6 rr:objectMap _:node19j2838kex25 .

km-dev:TriplesMap_11834c38-02d0-471e-8fea-2299ec2b2c5a rr:predicateObjectMap km-dev:PredicateObjectMap_e3e49016-4cd3-458c-affd-d8550178b8e6 .

km-dev:PredicateObjectMap_e3e49016-4cd3-458c-affd-d8550178b8e6 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_e3e49016-4cd3-458c-affd-d8550178b8e6 .

km-dev:PredicateObjectMap_87529475-c5d0-4fa3-9061-e975adff7b85 rr:predicate memex:weaponsMentioned .

_:node19j2838kex26 rr:column "[\"split_weapons\",\"Values\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex26 .

km-dev:PredicateObjectMap_87529475-c5d0-4fa3-9061-e975adff7b85 rr:objectMap _:node19j2838kex26 .

km-dev:TriplesMap_11834c38-02d0-471e-8fea-2299ec2b2c5a rr:predicateObjectMap km-dev:PredicateObjectMap_87529475-c5d0-4fa3-9061-e975adff7b85 .

km-dev:PredicateObjectMap_87529475-c5d0-4fa3-9061-e975adff7b85 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_87529475-c5d0-4fa3-9061-e975adff7b85 .

km-dev:TriplesMap_476f82ba-35be-47ad-90bb-30db9a1193f4 a rr:TriplesMap .

_:node19j2838kex1 km-dev:hasTriplesMap km-dev:TriplesMap_476f82ba-35be-47ad-90bb-30db9a1193f4 .

km-dev:TriplesMap_476f82ba-35be-47ad-90bb-30db9a1193f4 km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex27 rr:tableName "evolution-forums_2015-01-16.tsv.jl.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasLogicalTable _:node19j2838kex27 .

km-dev:TriplesMap_476f82ba-35be-47ad-90bb-30db9a1193f4 rr:logicalTable _:node19j2838kex27 ;
	rr:subjectMap _:node19j2838kex28 .

_:node19j2838kex1 km-dev:hasSubjectMap _:node19j2838kex28 .

_:node19j2838kex28 km-dev:isPartOfMapping _:node19j2838kex1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature6" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature6" .

km-dev:PredicateObjectMap_1c17c82c-3242-46d0-937d-e1d0ecf2877c rr:predicate memex:featureName .

_:node19j2838kex29 rr:constant "pricesMentioned" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex29 .

km-dev:PredicateObjectMap_1c17c82c-3242-46d0-937d-e1d0ecf2877c rr:objectMap _:node19j2838kex29 .

km-dev:TriplesMap_476f82ba-35be-47ad-90bb-30db9a1193f4 rr:predicateObjectMap km-dev:PredicateObjectMap_1c17c82c-3242-46d0-937d-e1d0ecf2877c .

km-dev:PredicateObjectMap_1c17c82c-3242-46d0-937d-e1d0ecf2877c a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_1c17c82c-3242-46d0-937d-e1d0ecf2877c .

km-dev:PredicateObjectMap_c0bdb0d6-2cda-47ef-834b-41840ee995d2 rr:predicate memex:featureValue .

_:node19j2838kex30 rr:column "[\"dollar_prices\",\"Values\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex30 .

km-dev:PredicateObjectMap_c0bdb0d6-2cda-47ef-834b-41840ee995d2 rr:objectMap _:node19j2838kex30 .

km-dev:TriplesMap_476f82ba-35be-47ad-90bb-30db9a1193f4 rr:predicateObjectMap km-dev:PredicateObjectMap_c0bdb0d6-2cda-47ef-834b-41840ee995d2 .

km-dev:PredicateObjectMap_c0bdb0d6-2cda-47ef-834b-41840ee995d2 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_c0bdb0d6-2cda-47ef-834b-41840ee995d2 .

km-dev:PredicateObjectMap_004cbf8f-22f3-422a-94c4-20502b207d75 rr:predicate memex:pricesMentioned .

_:node19j2838kex31 rr:column "[\"dollar_prices\",\"Values\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex31 .

km-dev:PredicateObjectMap_004cbf8f-22f3-422a-94c4-20502b207d75 rr:objectMap _:node19j2838kex31 .

km-dev:TriplesMap_476f82ba-35be-47ad-90bb-30db9a1193f4 rr:predicateObjectMap km-dev:PredicateObjectMap_004cbf8f-22f3-422a-94c4-20502b207d75 .

km-dev:PredicateObjectMap_004cbf8f-22f3-422a-94c4-20502b207d75 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_004cbf8f-22f3-422a-94c4-20502b207d75 .

km-dev:TriplesMap_d79a0c7d-cae4-48c6-847a-f708017e197f a rr:TriplesMap .

_:node19j2838kex1 km-dev:hasTriplesMap km-dev:TriplesMap_d79a0c7d-cae4-48c6-847a-f708017e197f .

km-dev:TriplesMap_d79a0c7d-cae4-48c6-847a-f708017e197f km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex32 rr:tableName "evolution-forums_2015-01-16.tsv.jl.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasLogicalTable _:node19j2838kex32 .

km-dev:TriplesMap_d79a0c7d-cae4-48c6-847a-f708017e197f rr:logicalTable _:node19j2838kex32 ;
	rr:subjectMap _:node19j2838kex33 .

_:node19j2838kex1 km-dev:hasSubjectMap _:node19j2838kex33 .

_:node19j2838kex33 km-dev:isPartOfMapping _:node19j2838kex1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature7" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature7" .

km-dev:PredicateObjectMap_30b11b26-6300-45bc-a56f-cb1556587307 rr:predicate memex:featureName .

_:node19j2838kex34 rr:constant "provider_name" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex34 .

km-dev:PredicateObjectMap_30b11b26-6300-45bc-a56f-cb1556587307 rr:objectMap _:node19j2838kex34 .

km-dev:TriplesMap_d79a0c7d-cae4-48c6-847a-f708017e197f rr:predicateObjectMap km-dev:PredicateObjectMap_30b11b26-6300-45bc-a56f-cb1556587307 .

km-dev:PredicateObjectMap_30b11b26-6300-45bc-a56f-cb1556587307 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_30b11b26-6300-45bc-a56f-cb1556587307 .

km-dev:PredicateObjectMap_93a49b65-9608-4e26-b421-823dad642e0e rr:predicate memex:featureValue .

_:node19j2838kex35 rr:column "[\"posts\",\"provider_name\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex35 .

km-dev:PredicateObjectMap_93a49b65-9608-4e26-b421-823dad642e0e rr:objectMap _:node19j2838kex35 .

km-dev:TriplesMap_d79a0c7d-cae4-48c6-847a-f708017e197f rr:predicateObjectMap km-dev:PredicateObjectMap_93a49b65-9608-4e26-b421-823dad642e0e .

km-dev:PredicateObjectMap_93a49b65-9608-4e26-b421-823dad642e0e a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_93a49b65-9608-4e26-b421-823dad642e0e .

km-dev:PredicateObjectMap_cd62093a-17cd-4444-b1e1-9898f1cd1759 rr:predicate memex:provider_name .

_:node19j2838kex36 rr:column "[\"posts\",\"provider_name\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex36 .

km-dev:PredicateObjectMap_cd62093a-17cd-4444-b1e1-9898f1cd1759 rr:objectMap _:node19j2838kex36 .

km-dev:TriplesMap_d79a0c7d-cae4-48c6-847a-f708017e197f rr:predicateObjectMap km-dev:PredicateObjectMap_cd62093a-17cd-4444-b1e1-9898f1cd1759 .

km-dev:PredicateObjectMap_cd62093a-17cd-4444-b1e1-9898f1cd1759 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_cd62093a-17cd-4444-b1e1-9898f1cd1759 .

km-dev:TriplesMap_511f05c1-43e9-4945-9f72-56f281c58620 a rr:TriplesMap .

_:node19j2838kex1 km-dev:hasTriplesMap km-dev:TriplesMap_511f05c1-43e9-4945-9f72-56f281c58620 .

km-dev:TriplesMap_511f05c1-43e9-4945-9f72-56f281c58620 km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex37 rr:tableName "evolution-forums_2015-01-16.tsv.jl.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasLogicalTable _:node19j2838kex37 .

km-dev:TriplesMap_511f05c1-43e9-4945-9f72-56f281c58620 rr:logicalTable _:node19j2838kex37 ;
	rr:subjectMap _:node19j2838kex38 .

_:node19j2838kex1 km-dev:hasSubjectMap _:node19j2838kex38 .

_:node19j2838kex38 km-dev:isPartOfMapping _:node19j2838kex1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature8" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature8" .

km-dev:PredicateObjectMap_9d3c3dc3-1d36-42bc-9644-c9676a9333ca rr:predicate memex:bitcoinPricesMentioned .

_:node19j2838kex39 rr:column "[\"bitcoin_prices\",\"Values\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex39 .

km-dev:PredicateObjectMap_9d3c3dc3-1d36-42bc-9644-c9676a9333ca rr:objectMap _:node19j2838kex39 .

km-dev:TriplesMap_511f05c1-43e9-4945-9f72-56f281c58620 rr:predicateObjectMap km-dev:PredicateObjectMap_9d3c3dc3-1d36-42bc-9644-c9676a9333ca .

km-dev:PredicateObjectMap_9d3c3dc3-1d36-42bc-9644-c9676a9333ca a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_9d3c3dc3-1d36-42bc-9644-c9676a9333ca .

km-dev:PredicateObjectMap_83589001-5c2e-4437-89f7-50a7f57896f1 rr:predicate memex:featureName .

_:node19j2838kex40 rr:constant "bitcoinPricesMentioned" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex40 .

km-dev:PredicateObjectMap_83589001-5c2e-4437-89f7-50a7f57896f1 rr:objectMap _:node19j2838kex40 .

km-dev:TriplesMap_511f05c1-43e9-4945-9f72-56f281c58620 rr:predicateObjectMap km-dev:PredicateObjectMap_83589001-5c2e-4437-89f7-50a7f57896f1 .

km-dev:PredicateObjectMap_83589001-5c2e-4437-89f7-50a7f57896f1 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_83589001-5c2e-4437-89f7-50a7f57896f1 .

km-dev:PredicateObjectMap_071be5cf-137d-4927-a556-205d40134452 rr:predicate memex:featureValue .

_:node19j2838kex41 rr:column "[\"bitcoin_prices\",\"Values\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex41 .

km-dev:PredicateObjectMap_071be5cf-137d-4927-a556-205d40134452 rr:objectMap _:node19j2838kex41 .

km-dev:TriplesMap_511f05c1-43e9-4945-9f72-56f281c58620 rr:predicateObjectMap km-dev:PredicateObjectMap_071be5cf-137d-4927-a556-205d40134452 .

km-dev:PredicateObjectMap_071be5cf-137d-4927-a556-205d40134452 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_071be5cf-137d-4927-a556-205d40134452 .

km-dev:TriplesMap_6238120b-f03c-4d92-a445-7d9353fb3c19 a rr:TriplesMap .

_:node19j2838kex1 km-dev:hasTriplesMap km-dev:TriplesMap_6238120b-f03c-4d92-a445-7d9353fb3c19 .

km-dev:TriplesMap_6238120b-f03c-4d92-a445-7d9353fb3c19 km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex42 rr:tableName "evolution-forums_2015-01-16.tsv.jl.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasLogicalTable _:node19j2838kex42 .

km-dev:TriplesMap_6238120b-f03c-4d92-a445-7d9353fb3c19 rr:logicalTable _:node19j2838kex42 ;
	rr:subjectMap _:node19j2838kex43 .

_:node19j2838kex1 km-dev:hasSubjectMap _:node19j2838kex43 .

_:node19j2838kex43 km-dev:isPartOfMapping _:node19j2838kex1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/FeatureCollection1" ;
	rr:class memex:FeatureCollection ;
	rr:template "{[\"posts\",\"fc_uri\"]}" .

km-dev:PredicateObjectMap_d05e4b58-df16-44e9-9135-c5bace1862fa rr:predicate memex:bitcoinPricesMentioned_feature .

km-dev:RefObjectMap_c0c5a19e-965f-4a0e-88ce-627cd5df5a1b a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_511f05c1-43e9-4945-9f72-56f281c58620 ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap km-dev:RefObjectMap_c0c5a19e-965f-4a0e-88ce-627cd5df5a1b .

km-dev:PredicateObjectMap_d05e4b58-df16-44e9-9135-c5bace1862fa rr:objectMap km-dev:RefObjectMap_c0c5a19e-965f-4a0e-88ce-627cd5df5a1b .

km-dev:TriplesMap_6238120b-f03c-4d92-a445-7d9353fb3c19 rr:predicateObjectMap km-dev:PredicateObjectMap_d05e4b58-df16-44e9-9135-c5bace1862fa .

km-dev:PredicateObjectMap_d05e4b58-df16-44e9-9135-c5bace1862fa a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_d05e4b58-df16-44e9-9135-c5bace1862fa .

km-dev:PredicateObjectMap_81fe33ab-b159-45b8-b150-5e063a9df806 rr:predicate memex:enrollment_date_feature .

km-dev:RefObjectMap_2887346d-d727-4208-9b90-6080661ee7c7 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_5a19f19c-5841-46a0-8a6b-15871c32283f ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap km-dev:RefObjectMap_2887346d-d727-4208-9b90-6080661ee7c7 .

km-dev:PredicateObjectMap_81fe33ab-b159-45b8-b150-5e063a9df806 rr:objectMap km-dev:RefObjectMap_2887346d-d727-4208-9b90-6080661ee7c7 .

km-dev:TriplesMap_6238120b-f03c-4d92-a445-7d9353fb3c19 rr:predicateObjectMap km-dev:PredicateObjectMap_81fe33ab-b159-45b8-b150-5e063a9df806 .

km-dev:PredicateObjectMap_81fe33ab-b159-45b8-b150-5e063a9df806 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_81fe33ab-b159-45b8-b150-5e063a9df806 .

km-dev:PredicateObjectMap_49c19a9b-b7b0-4dec-b5c0-a5be2dadd161 rr:predicate memex:person_postCount_feature .

km-dev:RefObjectMap_4e468e04-0a36-4c1e-9ea9-b9a07a992210 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_60403c0d-a579-439a-960b-3edb05628a5e ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap km-dev:RefObjectMap_4e468e04-0a36-4c1e-9ea9-b9a07a992210 .

km-dev:PredicateObjectMap_49c19a9b-b7b0-4dec-b5c0-a5be2dadd161 rr:objectMap km-dev:RefObjectMap_4e468e04-0a36-4c1e-9ea9-b9a07a992210 .

km-dev:TriplesMap_6238120b-f03c-4d92-a445-7d9353fb3c19 rr:predicateObjectMap km-dev:PredicateObjectMap_49c19a9b-b7b0-4dec-b5c0-a5be2dadd161 .

km-dev:PredicateObjectMap_49c19a9b-b7b0-4dec-b5c0-a5be2dadd161 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_49c19a9b-b7b0-4dec-b5c0-a5be2dadd161 .

km-dev:PredicateObjectMap_77905ebf-86bd-4982-b361-1b68c7a7244b rr:predicate memex:person_username_feature .

km-dev:RefObjectMap_f3bf6417-7429-4362-a431-39a1bb0daab5 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_fe639100-17a1-4e42-a02a-184fa4c9b935 ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap km-dev:RefObjectMap_f3bf6417-7429-4362-a431-39a1bb0daab5 .

km-dev:PredicateObjectMap_77905ebf-86bd-4982-b361-1b68c7a7244b rr:objectMap km-dev:RefObjectMap_f3bf6417-7429-4362-a431-39a1bb0daab5 .

km-dev:TriplesMap_6238120b-f03c-4d92-a445-7d9353fb3c19 rr:predicateObjectMap km-dev:PredicateObjectMap_77905ebf-86bd-4982-b361-1b68c7a7244b .

km-dev:PredicateObjectMap_77905ebf-86bd-4982-b361-1b68c7a7244b a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_77905ebf-86bd-4982-b361-1b68c7a7244b .

km-dev:PredicateObjectMap_15a4dd88-2563-4b62-baf8-dc0bcd5a6dc0 rr:predicate memex:place_postalAddress_feature .

km-dev:RefObjectMap_3b4b6745-faad-49bd-9fe9-01b31b65961a a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_a637a08e-e33a-4550-bf59-45cc4b465abb ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap km-dev:RefObjectMap_3b4b6745-faad-49bd-9fe9-01b31b65961a .

km-dev:PredicateObjectMap_15a4dd88-2563-4b62-baf8-dc0bcd5a6dc0 rr:objectMap km-dev:RefObjectMap_3b4b6745-faad-49bd-9fe9-01b31b65961a .

km-dev:TriplesMap_6238120b-f03c-4d92-a445-7d9353fb3c19 rr:predicateObjectMap km-dev:PredicateObjectMap_15a4dd88-2563-4b62-baf8-dc0bcd5a6dc0 .

km-dev:PredicateObjectMap_15a4dd88-2563-4b62-baf8-dc0bcd5a6dc0 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_15a4dd88-2563-4b62-baf8-dc0bcd5a6dc0 .

km-dev:PredicateObjectMap_00743f3f-db55-4426-a2f3-7d86e8b00748 rr:predicate memex:pricesMentioned_feature .

km-dev:RefObjectMap_317abcfb-a4e2-4ac0-a377-f3e7603aa687 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_476f82ba-35be-47ad-90bb-30db9a1193f4 ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap km-dev:RefObjectMap_317abcfb-a4e2-4ac0-a377-f3e7603aa687 .

km-dev:PredicateObjectMap_00743f3f-db55-4426-a2f3-7d86e8b00748 rr:objectMap km-dev:RefObjectMap_317abcfb-a4e2-4ac0-a377-f3e7603aa687 .

km-dev:TriplesMap_6238120b-f03c-4d92-a445-7d9353fb3c19 rr:predicateObjectMap km-dev:PredicateObjectMap_00743f3f-db55-4426-a2f3-7d86e8b00748 .

km-dev:PredicateObjectMap_00743f3f-db55-4426-a2f3-7d86e8b00748 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_00743f3f-db55-4426-a2f3-7d86e8b00748 .

km-dev:PredicateObjectMap_15e89029-c9dc-4ba0-9082-67ce1c6a9b5d rr:predicate memex:provider_name_feature .

km-dev:RefObjectMap_12f7a2f3-0e42-4b87-b921-97206aceecd4 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_d79a0c7d-cae4-48c6-847a-f708017e197f ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap km-dev:RefObjectMap_12f7a2f3-0e42-4b87-b921-97206aceecd4 .

km-dev:PredicateObjectMap_15e89029-c9dc-4ba0-9082-67ce1c6a9b5d rr:objectMap km-dev:RefObjectMap_12f7a2f3-0e42-4b87-b921-97206aceecd4 .

km-dev:TriplesMap_6238120b-f03c-4d92-a445-7d9353fb3c19 rr:predicateObjectMap km-dev:PredicateObjectMap_15e89029-c9dc-4ba0-9082-67ce1c6a9b5d .

km-dev:PredicateObjectMap_15e89029-c9dc-4ba0-9082-67ce1c6a9b5d a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_15e89029-c9dc-4ba0-9082-67ce1c6a9b5d .

km-dev:PredicateObjectMap_aa0d2f36-4a68-4df2-ab93-5ab2d7dac618 rr:predicate memex:weaponsMentioned_feature .

km-dev:RefObjectMap_5476582e-1a78-48b2-bc98-4997cbb7052b a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_11834c38-02d0-471e-8fea-2299ec2b2c5a ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap km-dev:RefObjectMap_5476582e-1a78-48b2-bc98-4997cbb7052b .

km-dev:PredicateObjectMap_aa0d2f36-4a68-4df2-ab93-5ab2d7dac618 rr:objectMap km-dev:RefObjectMap_5476582e-1a78-48b2-bc98-4997cbb7052b .

km-dev:TriplesMap_6238120b-f03c-4d92-a445-7d9353fb3c19 rr:predicateObjectMap km-dev:PredicateObjectMap_aa0d2f36-4a68-4df2-ab93-5ab2d7dac618 .

km-dev:PredicateObjectMap_aa0d2f36-4a68-4df2-ab93-5ab2d7dac618 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_aa0d2f36-4a68-4df2-ab93-5ab2d7dac618 .

km-dev:TriplesMap_636ce4d5-d315-4d18-83e0-3062e85097a0 a rr:TriplesMap .

_:node19j2838kex1 km-dev:hasTriplesMap km-dev:TriplesMap_636ce4d5-d315-4d18-83e0-3062e85097a0 .

km-dev:TriplesMap_636ce4d5-d315-4d18-83e0-3062e85097a0 km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex44 rr:tableName "evolution-forums_2015-01-16.tsv.jl.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasLogicalTable _:node19j2838kex44 .

km-dev:TriplesMap_636ce4d5-d315-4d18-83e0-3062e85097a0 rr:logicalTable _:node19j2838kex44 ;
	rr:subjectMap _:node19j2838kex45 .

_:node19j2838kex1 km-dev:hasSubjectMap _:node19j2838kex45 .

_:node19j2838kex45 km-dev:isPartOfMapping _:node19j2838kex1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Identifier1" ;
	rr:class memex:Identifier ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Identifier1" .

km-dev:PredicateObjectMap_dcea45fa-30d1-4cef-892f-065dba6f5e65 rr:predicate memex:hasType .

_:node19j2838kex46 rr:constant <http://dig.isi.edu/data/thesauri/identifiertype/postid> ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex46 .

km-dev:PredicateObjectMap_dcea45fa-30d1-4cef-892f-065dba6f5e65 rr:objectMap _:node19j2838kex46 .

km-dev:TriplesMap_636ce4d5-d315-4d18-83e0-3062e85097a0 rr:predicateObjectMap km-dev:PredicateObjectMap_dcea45fa-30d1-4cef-892f-065dba6f5e65 .

km-dev:PredicateObjectMap_dcea45fa-30d1-4cef-892f-065dba6f5e65 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_dcea45fa-30d1-4cef-892f-065dba6f5e65 .

km-dev:PredicateObjectMap_92159451-0330-4822-9098-9439cec850b7 rr:predicate rdfs:label .

_:node19j2838kex47 rr:column "[\"posts\",\"post_id\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex47 .

km-dev:PredicateObjectMap_92159451-0330-4822-9098-9439cec850b7 rr:objectMap _:node19j2838kex47 .

km-dev:TriplesMap_636ce4d5-d315-4d18-83e0-3062e85097a0 rr:predicateObjectMap km-dev:PredicateObjectMap_92159451-0330-4822-9098-9439cec850b7 .

km-dev:PredicateObjectMap_92159451-0330-4822-9098-9439cec850b7 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_92159451-0330-4822-9098-9439cec850b7 .

km-dev:TriplesMap_af440d92-953b-432c-b725-f4bcaefa2920 a rr:TriplesMap .

_:node19j2838kex1 km-dev:hasTriplesMap km-dev:TriplesMap_af440d92-953b-432c-b725-f4bcaefa2920 .

km-dev:TriplesMap_af440d92-953b-432c-b725-f4bcaefa2920 km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex48 rr:tableName "evolution-forums_2015-01-16.tsv.jl.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasLogicalTable _:node19j2838kex48 .

km-dev:TriplesMap_af440d92-953b-432c-b725-f4bcaefa2920 rr:logicalTable _:node19j2838kex48 ;
	rr:subjectMap _:node19j2838kex49 .

_:node19j2838kex1 km-dev:hasSubjectMap _:node19j2838kex49 .

_:node19j2838kex49 km-dev:isPartOfMapping _:node19j2838kex1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Identifier2" ;
	rr:class memex:Identifier ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Identifier2" .

km-dev:PredicateObjectMap_1e5892a5-46d1-4697-b5d2-28852a4a4b0d rr:predicate memex:hasType .

_:node19j2838kex50 rr:constant <http://dig.isi.edu/data/thesauri/identifiertype/postid> ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex50 .

km-dev:PredicateObjectMap_1e5892a5-46d1-4697-b5d2-28852a4a4b0d rr:objectMap _:node19j2838kex50 .

km-dev:TriplesMap_af440d92-953b-432c-b725-f4bcaefa2920 rr:predicateObjectMap km-dev:PredicateObjectMap_1e5892a5-46d1-4697-b5d2-28852a4a4b0d .

km-dev:PredicateObjectMap_1e5892a5-46d1-4697-b5d2-28852a4a4b0d a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_1e5892a5-46d1-4697-b5d2-28852a4a4b0d .

km-dev:PredicateObjectMap_10a153de-bd9a-4fcc-97fd-1062b756c9c9 rr:predicate rdfs:label .

_:node19j2838kex51 rr:column "topic_id" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex51 .

km-dev:PredicateObjectMap_10a153de-bd9a-4fcc-97fd-1062b756c9c9 rr:objectMap _:node19j2838kex51 .

km-dev:TriplesMap_af440d92-953b-432c-b725-f4bcaefa2920 rr:predicateObjectMap km-dev:PredicateObjectMap_10a153de-bd9a-4fcc-97fd-1062b756c9c9 .

km-dev:PredicateObjectMap_10a153de-bd9a-4fcc-97fd-1062b756c9c9 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_10a153de-bd9a-4fcc-97fd-1062b756c9c9 .

km-dev:TriplesMap_0fa4c951-4570-42f4-96a8-de618e5bd2bc a rr:TriplesMap .

_:node19j2838kex1 km-dev:hasTriplesMap km-dev:TriplesMap_0fa4c951-4570-42f4-96a8-de618e5bd2bc .

km-dev:TriplesMap_0fa4c951-4570-42f4-96a8-de618e5bd2bc km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex52 rr:tableName "evolution-forums_2015-01-16.tsv.jl.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasLogicalTable _:node19j2838kex52 .

km-dev:TriplesMap_0fa4c951-4570-42f4-96a8-de618e5bd2bc rr:logicalTable _:node19j2838kex52 ;
	rr:subjectMap _:node19j2838kex53 .

_:node19j2838kex1 km-dev:hasSubjectMap _:node19j2838kex53 .

_:node19j2838kex53 km-dev:isPartOfMapping _:node19j2838kex1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/Article1" ;
	rr:class schema:Article ;
	rr:template "{[\"posts\",\"article_uri\"]}" ;
	a km-dev:steinerTreeRootNode .

km-dev:PredicateObjectMap_5a97a4a7-08f1-4399-b912-d56f3c92601c rr:predicate memex:hasBodyPart .

km-dev:RefObjectMap_9d167c15-f71c-447e-b531-71088c2a2c10 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_42ace5ea-de0c-4b15-ae8c-16d70e926442 ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap km-dev:RefObjectMap_9d167c15-f71c-447e-b531-71088c2a2c10 .

km-dev:PredicateObjectMap_5a97a4a7-08f1-4399-b912-d56f3c92601c rr:objectMap km-dev:RefObjectMap_9d167c15-f71c-447e-b531-71088c2a2c10 .

km-dev:TriplesMap_0fa4c951-4570-42f4-96a8-de618e5bd2bc rr:predicateObjectMap km-dev:PredicateObjectMap_5a97a4a7-08f1-4399-b912-d56f3c92601c .

km-dev:PredicateObjectMap_5a97a4a7-08f1-4399-b912-d56f3c92601c a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_5a97a4a7-08f1-4399-b912-d56f3c92601c .

km-dev:PredicateObjectMap_b8bc0330-d2ff-4097-bc32-03ddd7953243 rr:predicate memex:hasFeatureCollection .

km-dev:RefObjectMap_45791716-fcc2-40a7-8ed4-f677864bdd84 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_6238120b-f03c-4d92-a445-7d9353fb3c19 ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap km-dev:RefObjectMap_45791716-fcc2-40a7-8ed4-f677864bdd84 .

km-dev:PredicateObjectMap_b8bc0330-d2ff-4097-bc32-03ddd7953243 rr:objectMap km-dev:RefObjectMap_45791716-fcc2-40a7-8ed4-f677864bdd84 .

km-dev:TriplesMap_0fa4c951-4570-42f4-96a8-de618e5bd2bc rr:predicateObjectMap km-dev:PredicateObjectMap_b8bc0330-d2ff-4097-bc32-03ddd7953243 .

km-dev:PredicateObjectMap_b8bc0330-d2ff-4097-bc32-03ddd7953243 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_b8bc0330-d2ff-4097-bc32-03ddd7953243 .

km-dev:PredicateObjectMap_1425addd-0714-4bc9-afcc-6be579117602 rr:predicate memex:hasSignaturePart .

km-dev:RefObjectMap_8ca5ccc7-42fd-4d16-b66b-44b16af4f37b a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_a909c595-08df-4db2-b930-9cdb527e75cf ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap km-dev:RefObjectMap_8ca5ccc7-42fd-4d16-b66b-44b16af4f37b .

km-dev:PredicateObjectMap_1425addd-0714-4bc9-afcc-6be579117602 rr:objectMap km-dev:RefObjectMap_8ca5ccc7-42fd-4d16-b66b-44b16af4f37b .

km-dev:TriplesMap_0fa4c951-4570-42f4-96a8-de618e5bd2bc rr:predicateObjectMap km-dev:PredicateObjectMap_1425addd-0714-4bc9-afcc-6be579117602 .

km-dev:PredicateObjectMap_1425addd-0714-4bc9-afcc-6be579117602 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_1425addd-0714-4bc9-afcc-6be579117602 .

km-dev:PredicateObjectMap_bfe7d1e0-4890-4b19-8dea-a0c10e9976ec rr:predicate memex:hasTitlePart .

km-dev:RefObjectMap_5ad48b5d-e37a-471f-aeb7-da855b730901 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_92e00340-821a-404f-b9bf-255877e045be ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap km-dev:RefObjectMap_5ad48b5d-e37a-471f-aeb7-da855b730901 .

km-dev:PredicateObjectMap_bfe7d1e0-4890-4b19-8dea-a0c10e9976ec rr:objectMap km-dev:RefObjectMap_5ad48b5d-e37a-471f-aeb7-da855b730901 .

km-dev:TriplesMap_0fa4c951-4570-42f4-96a8-de618e5bd2bc rr:predicateObjectMap km-dev:PredicateObjectMap_bfe7d1e0-4890-4b19-8dea-a0c10e9976ec .

km-dev:PredicateObjectMap_bfe7d1e0-4890-4b19-8dea-a0c10e9976ec a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_bfe7d1e0-4890-4b19-8dea-a0c10e9976ec .

km-dev:PredicateObjectMap_9966b5bf-37cf-4bd5-9cb2-3d073754d2da rr:predicate schema:dateCreated .

_:node19j2838kex54 rr:column "[\"posts\",\"dateCreated\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex54 .

km-dev:PredicateObjectMap_9966b5bf-37cf-4bd5-9cb2-3d073754d2da rr:objectMap _:node19j2838kex54 .

km-dev:TriplesMap_0fa4c951-4570-42f4-96a8-de618e5bd2bc rr:predicateObjectMap km-dev:PredicateObjectMap_9966b5bf-37cf-4bd5-9cb2-3d073754d2da .

km-dev:PredicateObjectMap_9966b5bf-37cf-4bd5-9cb2-3d073754d2da a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_9966b5bf-37cf-4bd5-9cb2-3d073754d2da .

km-dev:PredicateObjectMap_735866c0-711d-427d-888f-edeeb8cc0e97 rr:predicate schema:isPartOf .

km-dev:RefObjectMap_63903490-162e-4091-8c14-508aa44993bc a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_77e33e89-371c-4034-88ec-b063ebaf28d6 ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap km-dev:RefObjectMap_63903490-162e-4091-8c14-508aa44993bc .

km-dev:PredicateObjectMap_735866c0-711d-427d-888f-edeeb8cc0e97 rr:objectMap km-dev:RefObjectMap_63903490-162e-4091-8c14-508aa44993bc .

km-dev:TriplesMap_0fa4c951-4570-42f4-96a8-de618e5bd2bc rr:predicateObjectMap km-dev:PredicateObjectMap_735866c0-711d-427d-888f-edeeb8cc0e97 .

km-dev:PredicateObjectMap_735866c0-711d-427d-888f-edeeb8cc0e97 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_735866c0-711d-427d-888f-edeeb8cc0e97 .

km-dev:PredicateObjectMap_80de2475-14e0-4970-99ec-0b22fc80041e rr:predicate memex:hasIdentifier .

km-dev:RefObjectMap_bf9ab9e1-2f19-422d-aa04-63b9331e20c2 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_636ce4d5-d315-4d18-83e0-3062e85097a0 ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap km-dev:RefObjectMap_bf9ab9e1-2f19-422d-aa04-63b9331e20c2 .

km-dev:PredicateObjectMap_80de2475-14e0-4970-99ec-0b22fc80041e rr:objectMap km-dev:RefObjectMap_bf9ab9e1-2f19-422d-aa04-63b9331e20c2 .

km-dev:TriplesMap_0fa4c951-4570-42f4-96a8-de618e5bd2bc rr:predicateObjectMap km-dev:PredicateObjectMap_80de2475-14e0-4970-99ec-0b22fc80041e .

km-dev:PredicateObjectMap_80de2475-14e0-4970-99ec-0b22fc80041e a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_80de2475-14e0-4970-99ec-0b22fc80041e .

km-dev:TriplesMap_42ace5ea-de0c-4b15-ae8c-16d70e926442 a rr:TriplesMap .

_:node19j2838kex1 km-dev:hasTriplesMap km-dev:TriplesMap_42ace5ea-de0c-4b15-ae8c-16d70e926442 .

km-dev:TriplesMap_42ace5ea-de0c-4b15-ae8c-16d70e926442 km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex55 rr:tableName "evolution-forums_2015-01-16.tsv.jl.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasLogicalTable _:node19j2838kex55 .

km-dev:TriplesMap_42ace5ea-de0c-4b15-ae8c-16d70e926442 rr:logicalTable _:node19j2838kex55 ;
	rr:subjectMap _:node19j2838kex56 .

_:node19j2838kex1 km-dev:hasSubjectMap _:node19j2838kex56 .

_:node19j2838kex56 km-dev:isPartOfMapping _:node19j2838kex1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPageElement2" ;
	rr:class schema:WebPageElement ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:WebPageElement2" .

km-dev:PredicateObjectMap_66823a09-6b96-4cc0-8ee0-0a400fab37d3 rr:predicate schema:text .

_:node19j2838kex57 rr:column "[\"posts\",\"clean_content\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex57 .

km-dev:PredicateObjectMap_66823a09-6b96-4cc0-8ee0-0a400fab37d3 rr:objectMap _:node19j2838kex57 .

km-dev:TriplesMap_42ace5ea-de0c-4b15-ae8c-16d70e926442 rr:predicateObjectMap km-dev:PredicateObjectMap_66823a09-6b96-4cc0-8ee0-0a400fab37d3 .

km-dev:PredicateObjectMap_66823a09-6b96-4cc0-8ee0-0a400fab37d3 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_66823a09-6b96-4cc0-8ee0-0a400fab37d3 .

km-dev:TriplesMap_a909c595-08df-4db2-b930-9cdb527e75cf a rr:TriplesMap .

_:node19j2838kex1 km-dev:hasTriplesMap km-dev:TriplesMap_a909c595-08df-4db2-b930-9cdb527e75cf .

km-dev:TriplesMap_a909c595-08df-4db2-b930-9cdb527e75cf km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex58 rr:tableName "evolution-forums_2015-01-16.tsv.jl.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasLogicalTable _:node19j2838kex58 .

km-dev:TriplesMap_a909c595-08df-4db2-b930-9cdb527e75cf rr:logicalTable _:node19j2838kex58 ;
	rr:subjectMap _:node19j2838kex59 .

_:node19j2838kex1 km-dev:hasSubjectMap _:node19j2838kex59 .

_:node19j2838kex59 km-dev:isPartOfMapping _:node19j2838kex1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPageElement3" ;
	rr:class schema:WebPageElement ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:WebPageElement3" .

km-dev:PredicateObjectMap_a970d3ea-55fa-4eeb-8fcb-cd8fbecf636a rr:predicate schema:text .

_:node19j2838kex60 rr:column "[\"posts\",\"signature_clean\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex60 .

km-dev:PredicateObjectMap_a970d3ea-55fa-4eeb-8fcb-cd8fbecf636a rr:objectMap _:node19j2838kex60 .

km-dev:TriplesMap_a909c595-08df-4db2-b930-9cdb527e75cf rr:predicateObjectMap km-dev:PredicateObjectMap_a970d3ea-55fa-4eeb-8fcb-cd8fbecf636a .

km-dev:PredicateObjectMap_a970d3ea-55fa-4eeb-8fcb-cd8fbecf636a a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_a970d3ea-55fa-4eeb-8fcb-cd8fbecf636a .

km-dev:TriplesMap_92e00340-821a-404f-b9bf-255877e045be a rr:TriplesMap .

_:node19j2838kex1 km-dev:hasTriplesMap km-dev:TriplesMap_92e00340-821a-404f-b9bf-255877e045be .

km-dev:TriplesMap_92e00340-821a-404f-b9bf-255877e045be km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex61 rr:tableName "evolution-forums_2015-01-16.tsv.jl.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasLogicalTable _:node19j2838kex61 .

km-dev:TriplesMap_92e00340-821a-404f-b9bf-255877e045be rr:logicalTable _:node19j2838kex61 ;
	rr:subjectMap _:node19j2838kex62 .

_:node19j2838kex1 km-dev:hasSubjectMap _:node19j2838kex62 .

_:node19j2838kex62 km-dev:isPartOfMapping _:node19j2838kex1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPageElement1" ;
	rr:class schema:WebPageElement ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:WebPageElement1" .

km-dev:PredicateObjectMap_bd003a47-1490-431b-85e2-74124507ad97 rr:predicate schema:text .

_:node19j2838kex63 rr:column "[\"posts\",\"title\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex63 .

km-dev:PredicateObjectMap_bd003a47-1490-431b-85e2-74124507ad97 rr:objectMap _:node19j2838kex63 .

km-dev:TriplesMap_92e00340-821a-404f-b9bf-255877e045be rr:predicateObjectMap km-dev:PredicateObjectMap_bd003a47-1490-431b-85e2-74124507ad97 .

km-dev:PredicateObjectMap_bd003a47-1490-431b-85e2-74124507ad97 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_bd003a47-1490-431b-85e2-74124507ad97 .

km-dev:TriplesMap_77e33e89-371c-4034-88ec-b063ebaf28d6 a rr:TriplesMap .

_:node19j2838kex1 km-dev:hasTriplesMap km-dev:TriplesMap_77e33e89-371c-4034-88ec-b063ebaf28d6 .

km-dev:TriplesMap_77e33e89-371c-4034-88ec-b063ebaf28d6 km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex64 rr:tableName "evolution-forums_2015-01-16.tsv.jl.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasLogicalTable _:node19j2838kex64 .

km-dev:TriplesMap_77e33e89-371c-4034-88ec-b063ebaf28d6 rr:logicalTable _:node19j2838kex64 ;
	rr:subjectMap _:node19j2838kex65 .

_:node19j2838kex1 km-dev:hasSubjectMap _:node19j2838kex65 .

_:node19j2838kex65 km-dev:isPartOfMapping _:node19j2838kex1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/Article2" ;
	rr:class schema:Article ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:Article2" .

km-dev:PredicateObjectMap_3b8c7a9b-d885-4022-998a-7d6550e5752e rr:predicate memex:hasIdentifier .

km-dev:RefObjectMap_6d9d9ed7-07ad-4793-beae-be057c4ad156 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_af440d92-953b-432c-b725-f4bcaefa2920 ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap km-dev:RefObjectMap_6d9d9ed7-07ad-4793-beae-be057c4ad156 .

km-dev:PredicateObjectMap_3b8c7a9b-d885-4022-998a-7d6550e5752e rr:objectMap km-dev:RefObjectMap_6d9d9ed7-07ad-4793-beae-be057c4ad156 .

km-dev:TriplesMap_77e33e89-371c-4034-88ec-b063ebaf28d6 rr:predicateObjectMap km-dev:PredicateObjectMap_3b8c7a9b-d885-4022-998a-7d6550e5752e .

km-dev:PredicateObjectMap_3b8c7a9b-d885-4022-998a-7d6550e5752e a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_3b8c7a9b-d885-4022-998a-7d6550e5752e .

km-dev:PredicateObjectMap_5b68456f-8f07-4bad-82f2-f9cbf596fe62 rr:predicate memex:hasTitlePart .

km-dev:RefObjectMap_79a41933-e4bf-47ad-977a-7dcdb8a80a58 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_3c0e123d-82c8-4bf3-a357-bcce41e61603 ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap km-dev:RefObjectMap_79a41933-e4bf-47ad-977a-7dcdb8a80a58 .

km-dev:PredicateObjectMap_5b68456f-8f07-4bad-82f2-f9cbf596fe62 rr:objectMap km-dev:RefObjectMap_79a41933-e4bf-47ad-977a-7dcdb8a80a58 .

km-dev:TriplesMap_77e33e89-371c-4034-88ec-b063ebaf28d6 rr:predicateObjectMap km-dev:PredicateObjectMap_5b68456f-8f07-4bad-82f2-f9cbf596fe62 .

km-dev:PredicateObjectMap_5b68456f-8f07-4bad-82f2-f9cbf596fe62 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_5b68456f-8f07-4bad-82f2-f9cbf596fe62 .

km-dev:PredicateObjectMap_29f5d322-e62c-49d0-b121-1f8715fa1f36 rr:predicate schema:url .

_:node19j2838kex66 rr:column "url" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex66 .

km-dev:PredicateObjectMap_29f5d322-e62c-49d0-b121-1f8715fa1f36 rr:objectMap _:node19j2838kex66 .

km-dev:TriplesMap_77e33e89-371c-4034-88ec-b063ebaf28d6 rr:predicateObjectMap km-dev:PredicateObjectMap_29f5d322-e62c-49d0-b121-1f8715fa1f36 .

km-dev:PredicateObjectMap_29f5d322-e62c-49d0-b121-1f8715fa1f36 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_29f5d322-e62c-49d0-b121-1f8715fa1f36 .

km-dev:TriplesMap_3c0e123d-82c8-4bf3-a357-bcce41e61603 a rr:TriplesMap .

_:node19j2838kex1 km-dev:hasTriplesMap km-dev:TriplesMap_3c0e123d-82c8-4bf3-a357-bcce41e61603 .

km-dev:TriplesMap_3c0e123d-82c8-4bf3-a357-bcce41e61603 km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex67 rr:tableName "evolution-forums_2015-01-16.tsv.jl.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasLogicalTable _:node19j2838kex67 .

km-dev:TriplesMap_3c0e123d-82c8-4bf3-a357-bcce41e61603 rr:logicalTable _:node19j2838kex67 ;
	rr:subjectMap _:node19j2838kex68 .

_:node19j2838kex1 km-dev:hasSubjectMap _:node19j2838kex68 .

_:node19j2838kex68 km-dev:isPartOfMapping _:node19j2838kex1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPageElement4" ;
	rr:class schema:WebPageElement ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:WebPageElement4" .

km-dev:PredicateObjectMap_b750bc70-f44c-4fa7-9080-010df4fcd5ff rr:predicate schema:text .

_:node19j2838kex69 rr:column "topic_title" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasObjectMap _:node19j2838kex69 .

km-dev:PredicateObjectMap_b750bc70-f44c-4fa7-9080-010df4fcd5ff rr:objectMap _:node19j2838kex69 .

km-dev:TriplesMap_3c0e123d-82c8-4bf3-a357-bcce41e61603 rr:predicateObjectMap km-dev:PredicateObjectMap_b750bc70-f44c-4fa7-9080-010df4fcd5ff .

km-dev:PredicateObjectMap_b750bc70-f44c-4fa7-9080-010df4fcd5ff a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j2838kex1 .

_:node19j2838kex1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_b750bc70-f44c-4fa7-9080-010df4fcd5ff .
