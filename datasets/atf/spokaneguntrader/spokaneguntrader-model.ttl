@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix dgeo: <http://dig.isi.edu/ontology/dgeo/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix schemax: <http://topbraid.org/schemax/> .
@prefix crm: <http://www.cidoc-crm.org/rdfs/cidoc_crm_v6.0-draft-2015January.rdfs> .
@prefix schema: <http://schema.org/> .
@prefix geo: <http://www.opengis.net/ont/geosparql#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix memex: <http://memexproxy.com/ontology/> .
@prefix ht: <http://memexproxy.com/ontology/human-trafficking/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix km-dev: <http://isi.edu/integration/karma/dev#> .

_:node19j24e2hkx1 a km-dev:R2RMLMapping ;
	km-dev:sourceName "spokaneguntrader-sample.json" ;
	km-dev:modelPublicationTime "1429222132277"^^xsd:long ;
	km-dev:modelVersion "1.7" ;
	km-dev:hasInputColumns "[[{\"columnName\":\"posts\"},{\"columnName\":\"date_posted\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"title\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"content\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"post_id\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"user_attributes\"},{\"columnName\":\"value\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"signature\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"user_attributes\"},{\"columnName\":\"label\"}],[{\"columnName\":\"bitcoin_prices\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"url\"}],[{\"columnName\":\"topic_title\"}],[{\"columnName\":\"topic_id\"}],[{\"columnName\":\"split_prices\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"weapons\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"username\"}]]" ;
	km-dev:hasOutputColumns "[[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"Values_1\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"prices\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"address_uri\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"provider_name\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"provider_name2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"weapons\"},{\"columnName\":\"weapons2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"joined_weapons\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"content\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"sgt supporter:\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"fc_uri\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"state\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"sgt supporter:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"bitcoin_prices\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"city\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"signature_clean\"}],[{\"columnName\":\"bitcoin_prices\"},{\"columnName\":\"bitcoin_prices2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"next firearm:\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"dateCreated\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"clean_address2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"joined_bitcoin_prices\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"joined:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"next firearm:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"joined:\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"title\"}],[{\"columnName\":\"prices2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"post_id\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"posts:\"},{\"columnName\":\"clean_post_count2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"location:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"posts:\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"location:\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"posts:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"favorite firearm:\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"favorite firearm:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"split_prices\"},{\"columnName\":\"split_prices2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"username2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"weapons\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"posts:\"},{\"columnName\":\"clean_post_count\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"username\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"article_uri\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"joined:\"},{\"columnName\":\"joined_iso\"}],[{\"columnName\":\"url\"}],[{\"columnName\":\"topic_title\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"country\"}],[{\"columnName\":\"topic_id\"}],[{\"columnName\":\"split_prices\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"clean_address\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"joined:\"},{\"columnName\":\"joined_iso2\"}]]" ;
	km-dev:hasModelLabel "spokaneguntrader" ;
	km-dev:hasBaseURI "http://dig.isi.edu/atf/data/page/" ;
	km-dev:hasWorksheetHistory """[
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"date_posted\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"dateCreated\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_date_created(getValue(\\\"date_posted\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"date_posted\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"dateCreated\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"signature\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"signature_clean\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return signature_clean(getValue(\\\"signature\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"post_id\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"article_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_article_uri(getValue(\\\"url\\\"), getValue(\\\"post_id\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"article_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"username\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"username2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"username\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"article_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/Article\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/Article1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:Article1 (add)\",
                    \"DomainId\": \"http://schema.org/Article1\",
                    \"DomainUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"article_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"article_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"dateCreated\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/dateCreated\",
                    \"DomainLabel\": \"schema:Article1\",
                    \"DomainId\": \"http://schema.org/Article1\",
                    \"DomainUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"dateCreated\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"dateCreated\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"title\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/WebPageElement\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/WebPageElement1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:WebPageElement1 (add)\",
                    \"DomainId\": \"http://schema.org/WebPageElement1 (add)\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/exampleOfWork\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/Article\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasBodyPart\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\",
                    \"edgeSourceUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://memexproxy.com/ontology/hasBodyPart\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/exampleOfWork\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/exampleOfWork\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/exampleOfWork\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/exampleOfWork\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/Article\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasTitlePart\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://memexproxy.com/ontology/hasTitlePart\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPageElement\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasTitlePart\",
                    \"edgeTargetId\": \"http://schema.org/WebPageElement1\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"content\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/WebPageElement\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/WebPageElement2 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:WebPageElement2 (add)\",
                    \"DomainId\": \"http://schema.org/WebPageElement2\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"signature_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/WebPageElement\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/WebPageElement3 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:WebPageElement3 (add)\",
                    \"DomainId\": \"http://schema.org/WebPageElement3\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPageElement\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasSignaturePart\",
                    \"edgeTargetId\": \"http://schema.org/WebPageElement3\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPageElement\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasBodyPart\",
                    \"edgeTargetId\": \"http://schema.org/WebPageElement2\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"username\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature1 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"username2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/person_username\",
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"username2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"fc_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_fc_uri(getValue(\\\"article_uri\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"article_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"fc_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"fc_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/FeatureCollection\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/FeatureCollection1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"memex:FeatureCollection1 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"fc_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"fc_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/FeatureCollection\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasFeatureCollection\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/person_username_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"properties\",
                \"value\": {
                    \"hasServiceProperties\": false,
                    \"hasPrefix\": false,
                    \"graphLabel\": \"\",
                    \"hasBaseURI\": true,
                    \"baseURI\": \"http://dig.isi.edu/atf/data/page/\"
                },
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetWorksheetPropertiesCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"person_username\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"person_username\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"person_username1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"keyhNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"user_attributes\"},
                    {\"columnName\": \"label\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"valuehNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"user_attributes\"},
                    {\"columnName\": \"value\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"notOtherColumn\",
                \"value\": \"true\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"user_attributes\\\"},{\\\"columnName\\\":\\\"value\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"user_attributes\\\"},{\\\"columnName\\\":\\\"label\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"sgt supporter:\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"sgt supporter:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"location:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"location:\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"favorite firearm:\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"favorite firearm:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"next firearm:\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"next firearm:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"UnfoldCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"city\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_get_city(getValue(\\\"Values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"city\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"city\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"state\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_get_state(getValue(\\\"Values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"state\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"content\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/text\",
                    \"DomainLabel\": \"schema:WebPageElement2\",
                    \"DomainId\": \"http://schema.org/WebPageElement2\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"signature_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/text\",
                    \"DomainLabel\": \"schema:WebPageElement3\",
                    \"DomainId\": \"http://schema.org/WebPageElement3\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"title\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/text\",
                    \"DomainLabel\": \"schema:WebPageElement1\",
                    \"DomainId\": \"http://schema.org/WebPageElement1\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"joined:\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"joined_iso\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_joined_date(getValue(\\\"Values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"joined:\"},
                    {\"columnName\": \"joined_iso\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"joined_iso2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"joined_iso\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"joined:\"},
                    {\"columnName\": \"joined_iso\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/enrollment_date\",
                    \"DomainLabel\": \"memex:Feature2 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature2 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"joined:\"},
                    {\"columnName\": \"joined_iso2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature2\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature2\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"enrollment_date\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"enrollment_date\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"enrollment_date1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature2\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/enrollment_date_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature2\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"properties\",
                \"value\": {
                    \"hasServiceProperties\": false,
                    \"hasPrefix\": false,
                    \"graphLabel\": \"spokaneguntrader\",
                    \"hasBaseURI\": false
                },
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetWorksheetPropertiesCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"state\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"country\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return \\\"US\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"country\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"country\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"address_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_address_uri(getValue(\\\"city\\\"), getValue(\\\"state\\\"), getValue(\\\"country\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"city\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"state\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"country\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"address_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"country\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_address\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_address(getValue(\\\"city\\\"), getValue(\\\"state\\\"), getValue(\\\"country\\\"), \\\",\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"city\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"state\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"country\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"clean_address\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature3 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature3 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature3\",
                    \"edgeId\": \"http://memexproxy.com/ontology/place_postalAddress_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature3\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"clean_address\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_address2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"clean_address\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"clean_address2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/place_postalAddress\",
                    \"DomainLabel\": \"memex:Feature3\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature3\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"place_postalAddress\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"place_postalAddress\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"place_postalAddress1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature3\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts:\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_post_count\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_clean_post_count(getValue(\\\"Values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts:\"},
                    {\"columnName\": \"clean_post_count\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_post_count2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"clean_post_count\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts:\"},
                    {\"columnName\": \"clean_post_count\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature4 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts:\"},
                    {\"columnName\": \"clean_post_count2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/person_postCount\",
                    \"DomainLabel\": \"memex:Feature4\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/person_postCount_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"person_postCount\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"person_postCount\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"person_postCount1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"next firearm:\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"values\",
                \"value\": [
                    {
                        \"name\": \"checked\",
                        \"value\": [
                            {\"columnName\": \"posts\"},
                            {\"columnName\": \"Unfold: label\"},
                            {\"columnName\": \"next firearm:\"}
                        ],
                        \"type\": \"hNodeId\"
                    },
                    {
                        \"name\": \"checked\",
                        \"value\": [
                            {\"columnName\": \"posts\"},
                            {\"columnName\": \"Unfold: label\"},
                            {\"columnName\": \"favorite firearm:\"}
                        ],
                        \"type\": \"hNodeId\"
                    }
                ],
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"ImplMethod\",
                \"value\": \"Longest\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"Values_1\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"GlueCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"Values_1\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"joined_weapons\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return get_weapons(getValue(\\\"Values\\\"), getValue(\\\"Values_1\\\"), getValue(\\\"topic_title\\\"), getValue(\\\"title\\\"), getValue(\\\"signature_clean\\\"), getValue(\\\"content\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"title\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"Values_1\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"joined_weapons\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"joined_weapons\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"delimiter\",
                \"value\": \"|\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColName\",
                \"value\": \"weapons\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newHNodeId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SplitValuesCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"weapons\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/weaponsMentioned\",
                    \"DomainLabel\": \"memex:Feature5 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"weapons\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"weapons2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"Values\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"weapons2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"weapons\"},
                    {\"columnName\": \"weapons2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature5\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"weapons2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"weapons2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/weaponsMentioned_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"weaponsMentioned_feature\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"weaponsMentioned_feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"weaponsMentioned_feature1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"post_id\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://www.w3.org/2000/01/rdf-schema#label\",
                    \"DomainLabel\": \"memex:Identifier1 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Identifier1 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Identifier\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Identifier1\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasIdentifier\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Identifier1\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"http://dig.isi.edu/data/thesauri/identifiertype/postid\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://dig.isi.edu/data/thesauri/identifiertype/postid1\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasType\",
                    \"edgeTargetId\": \"http://dig.isi.edu/data/thesauri/identifiertype/postid1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Identifier1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Identifier\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"topic_title\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/text\",
                    \"DomainLabel\": \"schema:WebPageElement4 (add)\",
                    \"DomainId\": \"http://schema.org/WebPageElement4\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPageElement4\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasTitlePart\",
                    \"edgeTargetId\": \"http://schema.org/WebPageElement4\",
                    \"edgeSourceId\": \"http://schema.org/Article2 (add)\",
                    \"edgeSourceUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/Article\",
                    \"edgeId\": \"http://schema.org/isPartOf\",
                    \"edgeTargetId\": \"http://schema.org/Article2\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"url\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/url\",
                    \"DomainLabel\": \"schema:Article2\",
                    \"DomainId\": \"http://schema.org/Article2\",
                    \"DomainUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"topic_id\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://www.w3.org/2000/01/rdf-schema#label\",
                    \"DomainLabel\": \"memex:Identifier2 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Identifier2 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Identifier\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Identifier2\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasIdentifier\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Identifier2\",
                    \"edgeSourceId\": \"http://schema.org/Article2\",
                    \"edgeSourceUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://dig.isi.edu/data/thesauri/identifiertype/postid1\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasType\",
                    \"edgeTargetId\": \"http://dig.isi.edu/data/thesauri/identifiertype/postid1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Identifier2\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Identifier\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"url\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"prices\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return get_prices(getValue(\\\"topic_title\\\"), getValue(\\\"title\\\"), getValue(\\\"content\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"url\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return get_prices(getValue(\\\"topic_title\\\"), getValue(\\\"title\\\"), getValue(\\\"content\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"previousCommandId\",
                \"value\": \"C7318\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"targetHNodeId\",
                \"value\": [{\"columnName\": \"prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitEditPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"prices2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"prices\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"prices2\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature6 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://memexproxy.com/ontology/organization_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP5:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/pricesMentioned_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/pricesMentioned\",
                    \"DomainLabel\": \"memex:Feature6\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"pricesMentioned\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"pricesMentioned\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"pricesMentioned1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"weaponsMentioned\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"nodeId\",
                \"value\": \"weaponsMentioned_feature1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"article_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"provider_name\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_provider_name(getValue(\\\"url\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"article_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"provider_name\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"previousCommandId\",
                \"value\": \"C8469\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"targetHNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"provider_name\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitEditPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"article_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_provider_name(getValue(\\\"url\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"previousCommandId\",
                \"value\": \"C8556\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"targetHNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"provider_name\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitEditPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"provider_name\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"provider_name2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"provider_name\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"provider_name\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature7 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature7 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"provider_name2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/provider_name\",
                    \"DomainLabel\": \"memex:Feature7\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature7\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"provider_name\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"provider_name\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"provider_name1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature7\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature7\",
                    \"edgeId\": \"http://memexproxy.com/ontology/provider_name_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature7\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"delimiter\",
                \"value\": \"|\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColName\",
                \"value\": \"split_prices\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newHNodeId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SplitValuesCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"split_prices\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"split_prices2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"Values\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"split_prices\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"split_prices\\\"},{\\\"columnName\\\":\\\"split_prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"split_prices\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/pricesMentioned\",
                    \"DomainLabel\": \"memex:Feature6\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"split_prices\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"split_prices\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"UnassignSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"split_prices\"},
                    {\"columnName\": \"split_prices2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature6\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"split_prices\\\"},{\\\"columnName\\\":\\\"split_prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"split_prices\\\"},{\\\"columnName\\\":\\\"split_prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"prices2\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"UnassignSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"split_prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"joined_bitcoin_prices\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return get_bitcoin_prices(getValue(\\\"topic_title\\\"), getValue(\\\"title\\\"), getValue(\\\"content\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"joined_bitcoin_prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"joined_bitcoin_prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"delimiter\",
                \"value\": \"|\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColName\",
                \"value\": \"bitcoin_prices\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newHNodeId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SplitValuesCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"bitcoin_prices\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"bitcoin_prices2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"Values\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"bitcoin_prices\\\"},{\\\"columnName\\\":\\\"bitcoin_prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"bitcoin_prices\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature8 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature8 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"bitcoin_prices\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"bitcoin_prices\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"bitcoin_prices\"},
                    {\"columnName\": \"bitcoin_prices2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/bitcoinPricesMentioned\",
                    \"DomainLabel\": \"memex:Feature8\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature8\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"bitcoin_prices\\\"},{\\\"columnName\\\":\\\"bitcoin_prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"bitcoin_prices\\\"},{\\\"columnName\\\":\\\"bitcoin_prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1357AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/bitcoinPricesMentioned_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature8\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"bitcoinPricesMentioned\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"bitcoinPricesMentioned\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"bitcoinPricesMentioned1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature8\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    }
]""" .

km-dev:TriplesMap_b410853c-6d17-4159-bbd1-02673c453bf1 a rr:TriplesMap .

_:node19j24e2hkx1 km-dev:hasTriplesMap km-dev:TriplesMap_b410853c-6d17-4159-bbd1-02673c453bf1 .

km-dev:TriplesMap_b410853c-6d17-4159-bbd1-02673c453bf1 km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx2 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasLogicalTable _:node19j24e2hkx2 .

km-dev:TriplesMap_b410853c-6d17-4159-bbd1-02673c453bf1 rr:logicalTable _:node19j24e2hkx2 ;
	rr:subjectMap _:node19j24e2hkx3 .

_:node19j24e2hkx1 km-dev:hasSubjectMap _:node19j24e2hkx3 .

_:node19j24e2hkx3 km-dev:isPartOfMapping _:node19j24e2hkx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature1" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature1" .

km-dev:PredicateObjectMap_2ba6df32-6ccb-4211-ab02-8372b98925fc rr:predicate memex:featureName .

_:node19j24e2hkx4 rr:constant "person_username" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx4 .

km-dev:PredicateObjectMap_2ba6df32-6ccb-4211-ab02-8372b98925fc rr:objectMap _:node19j24e2hkx4 .

km-dev:TriplesMap_b410853c-6d17-4159-bbd1-02673c453bf1 rr:predicateObjectMap km-dev:PredicateObjectMap_2ba6df32-6ccb-4211-ab02-8372b98925fc .

km-dev:PredicateObjectMap_2ba6df32-6ccb-4211-ab02-8372b98925fc a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_2ba6df32-6ccb-4211-ab02-8372b98925fc .

km-dev:PredicateObjectMap_398cbbc8-a0e9-49cd-8e6d-33d44938cb84 rr:predicate memex:featureValue .

_:node19j24e2hkx5 rr:column "[\"posts\",\"username\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx5 .

km-dev:PredicateObjectMap_398cbbc8-a0e9-49cd-8e6d-33d44938cb84 rr:objectMap _:node19j24e2hkx5 .

km-dev:TriplesMap_b410853c-6d17-4159-bbd1-02673c453bf1 rr:predicateObjectMap km-dev:PredicateObjectMap_398cbbc8-a0e9-49cd-8e6d-33d44938cb84 .

km-dev:PredicateObjectMap_398cbbc8-a0e9-49cd-8e6d-33d44938cb84 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_398cbbc8-a0e9-49cd-8e6d-33d44938cb84 .

km-dev:PredicateObjectMap_54e92507-f11b-41ad-bab9-4873ffa30b44 rr:predicate memex:person_username .

_:node19j24e2hkx6 rr:column "[\"posts\",\"username\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx6 .

km-dev:PredicateObjectMap_54e92507-f11b-41ad-bab9-4873ffa30b44 rr:objectMap _:node19j24e2hkx6 .

km-dev:TriplesMap_b410853c-6d17-4159-bbd1-02673c453bf1 rr:predicateObjectMap km-dev:PredicateObjectMap_54e92507-f11b-41ad-bab9-4873ffa30b44 .

km-dev:PredicateObjectMap_54e92507-f11b-41ad-bab9-4873ffa30b44 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_54e92507-f11b-41ad-bab9-4873ffa30b44 .

km-dev:TriplesMap_8ce92aee-4158-4d03-82cb-4d5dc5245d1e a rr:TriplesMap .

_:node19j24e2hkx1 km-dev:hasTriplesMap km-dev:TriplesMap_8ce92aee-4158-4d03-82cb-4d5dc5245d1e .

km-dev:TriplesMap_8ce92aee-4158-4d03-82cb-4d5dc5245d1e km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx7 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasLogicalTable _:node19j24e2hkx7 .

km-dev:TriplesMap_8ce92aee-4158-4d03-82cb-4d5dc5245d1e rr:logicalTable _:node19j24e2hkx7 ;
	rr:subjectMap _:node19j24e2hkx8 .

_:node19j24e2hkx1 km-dev:hasSubjectMap _:node19j24e2hkx8 .

_:node19j24e2hkx8 km-dev:isPartOfMapping _:node19j24e2hkx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature2" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature2" .

km-dev:PredicateObjectMap_10f5c673-df39-49a9-97c6-c284420f45aa rr:predicate memex:enrollment_date .

_:node19j24e2hkx9 rr:column "[\"posts\",\"Unfold: label\",\"joined:\",\"joined_iso\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx9 .

km-dev:PredicateObjectMap_10f5c673-df39-49a9-97c6-c284420f45aa rr:objectMap _:node19j24e2hkx9 .

km-dev:TriplesMap_8ce92aee-4158-4d03-82cb-4d5dc5245d1e rr:predicateObjectMap km-dev:PredicateObjectMap_10f5c673-df39-49a9-97c6-c284420f45aa .

km-dev:PredicateObjectMap_10f5c673-df39-49a9-97c6-c284420f45aa a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_10f5c673-df39-49a9-97c6-c284420f45aa .

km-dev:PredicateObjectMap_80d6ca55-4960-4c21-8c58-ee160c90e544 rr:predicate memex:featureName .

_:node19j24e2hkx10 rr:constant "enrollment_date" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx10 .

km-dev:PredicateObjectMap_80d6ca55-4960-4c21-8c58-ee160c90e544 rr:objectMap _:node19j24e2hkx10 .

km-dev:TriplesMap_8ce92aee-4158-4d03-82cb-4d5dc5245d1e rr:predicateObjectMap km-dev:PredicateObjectMap_80d6ca55-4960-4c21-8c58-ee160c90e544 .

km-dev:PredicateObjectMap_80d6ca55-4960-4c21-8c58-ee160c90e544 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_80d6ca55-4960-4c21-8c58-ee160c90e544 .

km-dev:PredicateObjectMap_d5543131-bcb7-484e-8dba-00fb278bc748 rr:predicate memex:featureValue .

_:node19j24e2hkx11 rr:column "[\"posts\",\"Unfold: label\",\"joined:\",\"joined_iso\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx11 .

km-dev:PredicateObjectMap_d5543131-bcb7-484e-8dba-00fb278bc748 rr:objectMap _:node19j24e2hkx11 .

km-dev:TriplesMap_8ce92aee-4158-4d03-82cb-4d5dc5245d1e rr:predicateObjectMap km-dev:PredicateObjectMap_d5543131-bcb7-484e-8dba-00fb278bc748 .

km-dev:PredicateObjectMap_d5543131-bcb7-484e-8dba-00fb278bc748 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_d5543131-bcb7-484e-8dba-00fb278bc748 .

km-dev:TriplesMap_c243155d-949e-4db0-add8-ce194e4e062e a rr:TriplesMap .

_:node19j24e2hkx1 km-dev:hasTriplesMap km-dev:TriplesMap_c243155d-949e-4db0-add8-ce194e4e062e .

km-dev:TriplesMap_c243155d-949e-4db0-add8-ce194e4e062e km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx12 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasLogicalTable _:node19j24e2hkx12 .

km-dev:TriplesMap_c243155d-949e-4db0-add8-ce194e4e062e rr:logicalTable _:node19j24e2hkx12 ;
	rr:subjectMap _:node19j24e2hkx13 .

_:node19j24e2hkx1 km-dev:hasSubjectMap _:node19j24e2hkx13 .

_:node19j24e2hkx13 km-dev:isPartOfMapping _:node19j24e2hkx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature3" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature3" .

km-dev:PredicateObjectMap_2e32ee39-5272-43d2-bec7-37b122aa5a60 rr:predicate memex:featureName .

_:node19j24e2hkx14 rr:constant "place_postalAddress" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx14 .

km-dev:PredicateObjectMap_2e32ee39-5272-43d2-bec7-37b122aa5a60 rr:objectMap _:node19j24e2hkx14 .

km-dev:TriplesMap_c243155d-949e-4db0-add8-ce194e4e062e rr:predicateObjectMap km-dev:PredicateObjectMap_2e32ee39-5272-43d2-bec7-37b122aa5a60 .

km-dev:PredicateObjectMap_2e32ee39-5272-43d2-bec7-37b122aa5a60 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_2e32ee39-5272-43d2-bec7-37b122aa5a60 .

km-dev:PredicateObjectMap_46a88e8c-0cbd-41d3-acd0-fee2743eb656 rr:predicate memex:featureValue .

_:node19j24e2hkx15 rr:column "[\"posts\",\"Unfold: label\",\"city, state:\",\"clean_address\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx15 .

km-dev:PredicateObjectMap_46a88e8c-0cbd-41d3-acd0-fee2743eb656 rr:objectMap _:node19j24e2hkx15 .

km-dev:TriplesMap_c243155d-949e-4db0-add8-ce194e4e062e rr:predicateObjectMap km-dev:PredicateObjectMap_46a88e8c-0cbd-41d3-acd0-fee2743eb656 .

km-dev:PredicateObjectMap_46a88e8c-0cbd-41d3-acd0-fee2743eb656 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_46a88e8c-0cbd-41d3-acd0-fee2743eb656 .

km-dev:PredicateObjectMap_0ba2b98f-eb40-4992-bd0a-2902afbc9955 rr:predicate memex:place_postalAddress .

_:node19j24e2hkx16 rr:column "[\"posts\",\"Unfold: label\",\"city, state:\",\"clean_address\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx16 .

km-dev:PredicateObjectMap_0ba2b98f-eb40-4992-bd0a-2902afbc9955 rr:objectMap _:node19j24e2hkx16 .

km-dev:TriplesMap_c243155d-949e-4db0-add8-ce194e4e062e rr:predicateObjectMap km-dev:PredicateObjectMap_0ba2b98f-eb40-4992-bd0a-2902afbc9955 .

km-dev:PredicateObjectMap_0ba2b98f-eb40-4992-bd0a-2902afbc9955 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_0ba2b98f-eb40-4992-bd0a-2902afbc9955 .

km-dev:TriplesMap_2ca31e0b-cd43-4f39-b318-b95a55388334 a rr:TriplesMap .

_:node19j24e2hkx1 km-dev:hasTriplesMap km-dev:TriplesMap_2ca31e0b-cd43-4f39-b318-b95a55388334 .

km-dev:TriplesMap_2ca31e0b-cd43-4f39-b318-b95a55388334 km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx17 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasLogicalTable _:node19j24e2hkx17 .

km-dev:TriplesMap_2ca31e0b-cd43-4f39-b318-b95a55388334 rr:logicalTable _:node19j24e2hkx17 ;
	rr:subjectMap _:node19j24e2hkx18 .

_:node19j24e2hkx1 km-dev:hasSubjectMap _:node19j24e2hkx18 .

_:node19j24e2hkx18 km-dev:isPartOfMapping _:node19j24e2hkx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature4" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature4" .

km-dev:PredicateObjectMap_44f5d2f3-c0a6-4bc5-a6bb-a47d5d12bed3 rr:predicate memex:featureName .

_:node19j24e2hkx19 rr:constant "person_postCount" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx19 .

km-dev:PredicateObjectMap_44f5d2f3-c0a6-4bc5-a6bb-a47d5d12bed3 rr:objectMap _:node19j24e2hkx19 .

km-dev:TriplesMap_2ca31e0b-cd43-4f39-b318-b95a55388334 rr:predicateObjectMap km-dev:PredicateObjectMap_44f5d2f3-c0a6-4bc5-a6bb-a47d5d12bed3 .

km-dev:PredicateObjectMap_44f5d2f3-c0a6-4bc5-a6bb-a47d5d12bed3 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_44f5d2f3-c0a6-4bc5-a6bb-a47d5d12bed3 .

km-dev:PredicateObjectMap_c338216b-7420-4760-bbce-2acbb542e71c rr:predicate memex:featureValue .

_:node19j24e2hkx20 rr:column "[\"posts\",\"Unfold: label\",\"posts:\",\"clean_post_count\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx20 .

km-dev:PredicateObjectMap_c338216b-7420-4760-bbce-2acbb542e71c rr:objectMap _:node19j24e2hkx20 .

km-dev:TriplesMap_2ca31e0b-cd43-4f39-b318-b95a55388334 rr:predicateObjectMap km-dev:PredicateObjectMap_c338216b-7420-4760-bbce-2acbb542e71c .

km-dev:PredicateObjectMap_c338216b-7420-4760-bbce-2acbb542e71c a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_c338216b-7420-4760-bbce-2acbb542e71c .

km-dev:PredicateObjectMap_02499eba-39bc-43a6-811a-177ea44c8eb9 rr:predicate memex:person_postCount .

_:node19j24e2hkx21 rr:column "[\"posts\",\"Unfold: label\",\"posts:\",\"clean_post_count\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx21 .

km-dev:PredicateObjectMap_02499eba-39bc-43a6-811a-177ea44c8eb9 rr:objectMap _:node19j24e2hkx21 .

km-dev:TriplesMap_2ca31e0b-cd43-4f39-b318-b95a55388334 rr:predicateObjectMap km-dev:PredicateObjectMap_02499eba-39bc-43a6-811a-177ea44c8eb9 .

km-dev:PredicateObjectMap_02499eba-39bc-43a6-811a-177ea44c8eb9 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_02499eba-39bc-43a6-811a-177ea44c8eb9 .

km-dev:TriplesMap_c4f6d105-2551-420f-ac64-1c5412a2d180 a rr:TriplesMap .

_:node19j24e2hkx1 km-dev:hasTriplesMap km-dev:TriplesMap_c4f6d105-2551-420f-ac64-1c5412a2d180 .

km-dev:TriplesMap_c4f6d105-2551-420f-ac64-1c5412a2d180 km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx22 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasLogicalTable _:node19j24e2hkx22 .

km-dev:TriplesMap_c4f6d105-2551-420f-ac64-1c5412a2d180 rr:logicalTable _:node19j24e2hkx22 ;
	rr:subjectMap _:node19j24e2hkx23 .

_:node19j24e2hkx1 km-dev:hasSubjectMap _:node19j24e2hkx23 .

_:node19j24e2hkx23 km-dev:isPartOfMapping _:node19j24e2hkx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature5" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature5" .

km-dev:PredicateObjectMap_fcfe7815-47d3-4f04-a7e4-8099f811dc00 rr:predicate memex:featureName .

_:node19j24e2hkx24 rr:constant "weaponsMentioned" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx24 .

km-dev:PredicateObjectMap_fcfe7815-47d3-4f04-a7e4-8099f811dc00 rr:objectMap _:node19j24e2hkx24 .

km-dev:TriplesMap_c4f6d105-2551-420f-ac64-1c5412a2d180 rr:predicateObjectMap km-dev:PredicateObjectMap_fcfe7815-47d3-4f04-a7e4-8099f811dc00 .

km-dev:PredicateObjectMap_fcfe7815-47d3-4f04-a7e4-8099f811dc00 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_fcfe7815-47d3-4f04-a7e4-8099f811dc00 .

km-dev:PredicateObjectMap_60fe20f1-1e27-4f87-a151-e228ce91d0fd rr:predicate memex:featureValue .

_:node19j24e2hkx25 rr:column "[\"posts\",\"Unfold: label\",\"Glue_1\",\"weapons\",\"Values\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx25 .

km-dev:PredicateObjectMap_60fe20f1-1e27-4f87-a151-e228ce91d0fd rr:objectMap _:node19j24e2hkx25 .

km-dev:TriplesMap_c4f6d105-2551-420f-ac64-1c5412a2d180 rr:predicateObjectMap km-dev:PredicateObjectMap_60fe20f1-1e27-4f87-a151-e228ce91d0fd .

km-dev:PredicateObjectMap_60fe20f1-1e27-4f87-a151-e228ce91d0fd a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_60fe20f1-1e27-4f87-a151-e228ce91d0fd .

km-dev:PredicateObjectMap_6365eba9-8311-4d80-927c-56a9a7c85b89 rr:predicate memex:weaponsMentioned .

_:node19j24e2hkx26 rr:column "[\"posts\",\"Unfold: label\",\"Glue_1\",\"weapons\",\"Values\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx26 .

km-dev:PredicateObjectMap_6365eba9-8311-4d80-927c-56a9a7c85b89 rr:objectMap _:node19j24e2hkx26 .

km-dev:TriplesMap_c4f6d105-2551-420f-ac64-1c5412a2d180 rr:predicateObjectMap km-dev:PredicateObjectMap_6365eba9-8311-4d80-927c-56a9a7c85b89 .

km-dev:PredicateObjectMap_6365eba9-8311-4d80-927c-56a9a7c85b89 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_6365eba9-8311-4d80-927c-56a9a7c85b89 .

km-dev:TriplesMap_7065016d-e289-4f7c-873b-f621421084fb a rr:TriplesMap .

_:node19j24e2hkx1 km-dev:hasTriplesMap km-dev:TriplesMap_7065016d-e289-4f7c-873b-f621421084fb .

km-dev:TriplesMap_7065016d-e289-4f7c-873b-f621421084fb km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx27 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasLogicalTable _:node19j24e2hkx27 .

km-dev:TriplesMap_7065016d-e289-4f7c-873b-f621421084fb rr:logicalTable _:node19j24e2hkx27 ;
	rr:subjectMap _:node19j24e2hkx28 .

_:node19j24e2hkx1 km-dev:hasSubjectMap _:node19j24e2hkx28 .

_:node19j24e2hkx28 km-dev:isPartOfMapping _:node19j24e2hkx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature6" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature6" .

km-dev:PredicateObjectMap_b7b4f364-4717-4179-bec4-73cd7529d8fe rr:predicate memex:featureName .

_:node19j24e2hkx29 rr:constant "pricesMentioned" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx29 .

km-dev:PredicateObjectMap_b7b4f364-4717-4179-bec4-73cd7529d8fe rr:objectMap _:node19j24e2hkx29 .

km-dev:TriplesMap_7065016d-e289-4f7c-873b-f621421084fb rr:predicateObjectMap km-dev:PredicateObjectMap_b7b4f364-4717-4179-bec4-73cd7529d8fe .

km-dev:PredicateObjectMap_b7b4f364-4717-4179-bec4-73cd7529d8fe a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_b7b4f364-4717-4179-bec4-73cd7529d8fe .

km-dev:PredicateObjectMap_21b0630c-8672-4ae3-89ce-d34f5fe21d92 rr:predicate memex:featureValue .

_:node19j24e2hkx30 rr:column "[\"split_prices\",\"Values\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx30 .

km-dev:PredicateObjectMap_21b0630c-8672-4ae3-89ce-d34f5fe21d92 rr:objectMap _:node19j24e2hkx30 .

km-dev:TriplesMap_7065016d-e289-4f7c-873b-f621421084fb rr:predicateObjectMap km-dev:PredicateObjectMap_21b0630c-8672-4ae3-89ce-d34f5fe21d92 .

km-dev:PredicateObjectMap_21b0630c-8672-4ae3-89ce-d34f5fe21d92 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_21b0630c-8672-4ae3-89ce-d34f5fe21d92 .

km-dev:PredicateObjectMap_61808ac1-4c7a-4472-aa1a-8bfee49c6b90 rr:predicate memex:pricesMentioned .

_:node19j24e2hkx31 rr:column "[\"split_prices\",\"Values\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx31 .

km-dev:PredicateObjectMap_61808ac1-4c7a-4472-aa1a-8bfee49c6b90 rr:objectMap _:node19j24e2hkx31 .

km-dev:TriplesMap_7065016d-e289-4f7c-873b-f621421084fb rr:predicateObjectMap km-dev:PredicateObjectMap_61808ac1-4c7a-4472-aa1a-8bfee49c6b90 .

km-dev:PredicateObjectMap_61808ac1-4c7a-4472-aa1a-8bfee49c6b90 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_61808ac1-4c7a-4472-aa1a-8bfee49c6b90 .

km-dev:TriplesMap_bee391d0-4d88-4600-9b82-1b5216d7411b a rr:TriplesMap .

_:node19j24e2hkx1 km-dev:hasTriplesMap km-dev:TriplesMap_bee391d0-4d88-4600-9b82-1b5216d7411b .

km-dev:TriplesMap_bee391d0-4d88-4600-9b82-1b5216d7411b km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx32 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasLogicalTable _:node19j24e2hkx32 .

km-dev:TriplesMap_bee391d0-4d88-4600-9b82-1b5216d7411b rr:logicalTable _:node19j24e2hkx32 ;
	rr:subjectMap _:node19j24e2hkx33 .

_:node19j24e2hkx1 km-dev:hasSubjectMap _:node19j24e2hkx33 .

_:node19j24e2hkx33 km-dev:isPartOfMapping _:node19j24e2hkx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature7" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature7" .

km-dev:PredicateObjectMap_787c4f9a-f22d-4f61-b373-d5d2d564f48e rr:predicate memex:featureName .

_:node19j24e2hkx34 rr:constant "provider_name" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx34 .

km-dev:PredicateObjectMap_787c4f9a-f22d-4f61-b373-d5d2d564f48e rr:objectMap _:node19j24e2hkx34 .

km-dev:TriplesMap_bee391d0-4d88-4600-9b82-1b5216d7411b rr:predicateObjectMap km-dev:PredicateObjectMap_787c4f9a-f22d-4f61-b373-d5d2d564f48e .

km-dev:PredicateObjectMap_787c4f9a-f22d-4f61-b373-d5d2d564f48e a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_787c4f9a-f22d-4f61-b373-d5d2d564f48e .

km-dev:PredicateObjectMap_c9a5f2c6-0b29-482d-937c-091104580da7 rr:predicate memex:featureValue .

_:node19j24e2hkx35 rr:column "[\"posts\",\"provider_name\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx35 .

km-dev:PredicateObjectMap_c9a5f2c6-0b29-482d-937c-091104580da7 rr:objectMap _:node19j24e2hkx35 .

km-dev:TriplesMap_bee391d0-4d88-4600-9b82-1b5216d7411b rr:predicateObjectMap km-dev:PredicateObjectMap_c9a5f2c6-0b29-482d-937c-091104580da7 .

km-dev:PredicateObjectMap_c9a5f2c6-0b29-482d-937c-091104580da7 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_c9a5f2c6-0b29-482d-937c-091104580da7 .

km-dev:PredicateObjectMap_2910592a-66d5-4afd-b099-3613e4645814 rr:predicate memex:provider_name .

_:node19j24e2hkx36 rr:column "[\"posts\",\"provider_name\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx36 .

km-dev:PredicateObjectMap_2910592a-66d5-4afd-b099-3613e4645814 rr:objectMap _:node19j24e2hkx36 .

km-dev:TriplesMap_bee391d0-4d88-4600-9b82-1b5216d7411b rr:predicateObjectMap km-dev:PredicateObjectMap_2910592a-66d5-4afd-b099-3613e4645814 .

km-dev:PredicateObjectMap_2910592a-66d5-4afd-b099-3613e4645814 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_2910592a-66d5-4afd-b099-3613e4645814 .

km-dev:TriplesMap_367ba8d4-9c91-49e8-9800-54abcf8bb13e a rr:TriplesMap .

_:node19j24e2hkx1 km-dev:hasTriplesMap km-dev:TriplesMap_367ba8d4-9c91-49e8-9800-54abcf8bb13e .

km-dev:TriplesMap_367ba8d4-9c91-49e8-9800-54abcf8bb13e km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx37 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasLogicalTable _:node19j24e2hkx37 .

km-dev:TriplesMap_367ba8d4-9c91-49e8-9800-54abcf8bb13e rr:logicalTable _:node19j24e2hkx37 ;
	rr:subjectMap _:node19j24e2hkx38 .

_:node19j24e2hkx1 km-dev:hasSubjectMap _:node19j24e2hkx38 .

_:node19j24e2hkx38 km-dev:isPartOfMapping _:node19j24e2hkx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature8" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature8" .

km-dev:PredicateObjectMap_e3f63a28-c547-4072-9d4d-c8d801bf13c1 rr:predicate memex:bitcoinPricesMentioned .

_:node19j24e2hkx39 rr:column "[\"bitcoin_prices\",\"Values\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx39 .

km-dev:PredicateObjectMap_e3f63a28-c547-4072-9d4d-c8d801bf13c1 rr:objectMap _:node19j24e2hkx39 .

km-dev:TriplesMap_367ba8d4-9c91-49e8-9800-54abcf8bb13e rr:predicateObjectMap km-dev:PredicateObjectMap_e3f63a28-c547-4072-9d4d-c8d801bf13c1 .

km-dev:PredicateObjectMap_e3f63a28-c547-4072-9d4d-c8d801bf13c1 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_e3f63a28-c547-4072-9d4d-c8d801bf13c1 .

km-dev:PredicateObjectMap_3989cbab-4d2f-4a59-b50f-a79a324de29b rr:predicate memex:featureName .

_:node19j24e2hkx40 rr:constant "bitcoinPricesMentioned" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx40 .

km-dev:PredicateObjectMap_3989cbab-4d2f-4a59-b50f-a79a324de29b rr:objectMap _:node19j24e2hkx40 .

km-dev:TriplesMap_367ba8d4-9c91-49e8-9800-54abcf8bb13e rr:predicateObjectMap km-dev:PredicateObjectMap_3989cbab-4d2f-4a59-b50f-a79a324de29b .

km-dev:PredicateObjectMap_3989cbab-4d2f-4a59-b50f-a79a324de29b a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_3989cbab-4d2f-4a59-b50f-a79a324de29b .

km-dev:PredicateObjectMap_d80d093f-09d9-47a9-ad05-e379024645b7 rr:predicate memex:featureValue .

_:node19j24e2hkx41 rr:column "[\"bitcoin_prices\",\"Values\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx41 .

km-dev:PredicateObjectMap_d80d093f-09d9-47a9-ad05-e379024645b7 rr:objectMap _:node19j24e2hkx41 .

km-dev:TriplesMap_367ba8d4-9c91-49e8-9800-54abcf8bb13e rr:predicateObjectMap km-dev:PredicateObjectMap_d80d093f-09d9-47a9-ad05-e379024645b7 .

km-dev:PredicateObjectMap_d80d093f-09d9-47a9-ad05-e379024645b7 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_d80d093f-09d9-47a9-ad05-e379024645b7 .

km-dev:TriplesMap_0058eb3a-d8f7-406e-9379-0d6456d544f9 a rr:TriplesMap .

_:node19j24e2hkx1 km-dev:hasTriplesMap km-dev:TriplesMap_0058eb3a-d8f7-406e-9379-0d6456d544f9 .

km-dev:TriplesMap_0058eb3a-d8f7-406e-9379-0d6456d544f9 km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx42 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasLogicalTable _:node19j24e2hkx42 .

km-dev:TriplesMap_0058eb3a-d8f7-406e-9379-0d6456d544f9 rr:logicalTable _:node19j24e2hkx42 ;
	rr:subjectMap _:node19j24e2hkx43 .

_:node19j24e2hkx1 km-dev:hasSubjectMap _:node19j24e2hkx43 .

_:node19j24e2hkx43 km-dev:isPartOfMapping _:node19j24e2hkx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/FeatureCollection1" ;
	rr:class memex:FeatureCollection ;
	rr:template "{[\"posts\",\"fc_uri\"]}" .

km-dev:PredicateObjectMap_7a2eb9d6-44cf-469d-af5f-3a9c72c94608 rr:predicate memex:bitcoinPricesMentioned_feature .

km-dev:RefObjectMap_4e31e41b-9d49-47d8-986e-0525f1aa18cd a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_367ba8d4-9c91-49e8-9800-54abcf8bb13e ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap km-dev:RefObjectMap_4e31e41b-9d49-47d8-986e-0525f1aa18cd .

km-dev:PredicateObjectMap_7a2eb9d6-44cf-469d-af5f-3a9c72c94608 rr:objectMap km-dev:RefObjectMap_4e31e41b-9d49-47d8-986e-0525f1aa18cd .

km-dev:TriplesMap_0058eb3a-d8f7-406e-9379-0d6456d544f9 rr:predicateObjectMap km-dev:PredicateObjectMap_7a2eb9d6-44cf-469d-af5f-3a9c72c94608 .

km-dev:PredicateObjectMap_7a2eb9d6-44cf-469d-af5f-3a9c72c94608 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_7a2eb9d6-44cf-469d-af5f-3a9c72c94608 .

km-dev:PredicateObjectMap_d9b06f13-90b4-45b2-904d-66f347d0f5ab rr:predicate memex:enrollment_date_feature .

km-dev:RefObjectMap_8f847fc9-d0f0-4385-b407-918922a5563b a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_8ce92aee-4158-4d03-82cb-4d5dc5245d1e ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap km-dev:RefObjectMap_8f847fc9-d0f0-4385-b407-918922a5563b .

km-dev:PredicateObjectMap_d9b06f13-90b4-45b2-904d-66f347d0f5ab rr:objectMap km-dev:RefObjectMap_8f847fc9-d0f0-4385-b407-918922a5563b .

km-dev:TriplesMap_0058eb3a-d8f7-406e-9379-0d6456d544f9 rr:predicateObjectMap km-dev:PredicateObjectMap_d9b06f13-90b4-45b2-904d-66f347d0f5ab .

km-dev:PredicateObjectMap_d9b06f13-90b4-45b2-904d-66f347d0f5ab a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_d9b06f13-90b4-45b2-904d-66f347d0f5ab .

km-dev:PredicateObjectMap_192f58e2-7b2d-4d54-9539-2e5981b0555d rr:predicate memex:person_postCount_feature .

km-dev:RefObjectMap_6f5554fe-2962-44e5-8776-75337ddd0e0f a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_2ca31e0b-cd43-4f39-b318-b95a55388334 ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap km-dev:RefObjectMap_6f5554fe-2962-44e5-8776-75337ddd0e0f .

km-dev:PredicateObjectMap_192f58e2-7b2d-4d54-9539-2e5981b0555d rr:objectMap km-dev:RefObjectMap_6f5554fe-2962-44e5-8776-75337ddd0e0f .

km-dev:TriplesMap_0058eb3a-d8f7-406e-9379-0d6456d544f9 rr:predicateObjectMap km-dev:PredicateObjectMap_192f58e2-7b2d-4d54-9539-2e5981b0555d .

km-dev:PredicateObjectMap_192f58e2-7b2d-4d54-9539-2e5981b0555d a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_192f58e2-7b2d-4d54-9539-2e5981b0555d .

km-dev:PredicateObjectMap_b64f68fe-1ac3-45c6-874e-eb923db9f504 rr:predicate memex:person_username_feature .

km-dev:RefObjectMap_fee9294a-6ad4-4d27-9d6a-817e55c6250d a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_b410853c-6d17-4159-bbd1-02673c453bf1 ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap km-dev:RefObjectMap_fee9294a-6ad4-4d27-9d6a-817e55c6250d .

km-dev:PredicateObjectMap_b64f68fe-1ac3-45c6-874e-eb923db9f504 rr:objectMap km-dev:RefObjectMap_fee9294a-6ad4-4d27-9d6a-817e55c6250d .

km-dev:TriplesMap_0058eb3a-d8f7-406e-9379-0d6456d544f9 rr:predicateObjectMap km-dev:PredicateObjectMap_b64f68fe-1ac3-45c6-874e-eb923db9f504 .

km-dev:PredicateObjectMap_b64f68fe-1ac3-45c6-874e-eb923db9f504 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_b64f68fe-1ac3-45c6-874e-eb923db9f504 .

km-dev:PredicateObjectMap_764a155b-a627-496d-895e-89e0074d7e75 rr:predicate memex:place_postalAddress_feature .

km-dev:RefObjectMap_01ece8a7-4cf8-4605-9c0e-bd8e041d490c a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_c243155d-949e-4db0-add8-ce194e4e062e ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap km-dev:RefObjectMap_01ece8a7-4cf8-4605-9c0e-bd8e041d490c .

km-dev:PredicateObjectMap_764a155b-a627-496d-895e-89e0074d7e75 rr:objectMap km-dev:RefObjectMap_01ece8a7-4cf8-4605-9c0e-bd8e041d490c .

km-dev:TriplesMap_0058eb3a-d8f7-406e-9379-0d6456d544f9 rr:predicateObjectMap km-dev:PredicateObjectMap_764a155b-a627-496d-895e-89e0074d7e75 .

km-dev:PredicateObjectMap_764a155b-a627-496d-895e-89e0074d7e75 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_764a155b-a627-496d-895e-89e0074d7e75 .

km-dev:PredicateObjectMap_6586afed-9587-415f-9af9-1782d38180aa rr:predicate memex:pricesMentioned_feature .

km-dev:RefObjectMap_60f112f7-79d4-4e56-816e-d671578bd8af a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_7065016d-e289-4f7c-873b-f621421084fb ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap km-dev:RefObjectMap_60f112f7-79d4-4e56-816e-d671578bd8af .

km-dev:PredicateObjectMap_6586afed-9587-415f-9af9-1782d38180aa rr:objectMap km-dev:RefObjectMap_60f112f7-79d4-4e56-816e-d671578bd8af .

km-dev:TriplesMap_0058eb3a-d8f7-406e-9379-0d6456d544f9 rr:predicateObjectMap km-dev:PredicateObjectMap_6586afed-9587-415f-9af9-1782d38180aa .

km-dev:PredicateObjectMap_6586afed-9587-415f-9af9-1782d38180aa a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_6586afed-9587-415f-9af9-1782d38180aa .

km-dev:PredicateObjectMap_7763a726-bbc5-4aeb-9050-db827db1e11a rr:predicate memex:provider_name_feature .

km-dev:RefObjectMap_b8cbce7d-9ad3-46ff-8b28-0acf6bb5b247 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_bee391d0-4d88-4600-9b82-1b5216d7411b ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap km-dev:RefObjectMap_b8cbce7d-9ad3-46ff-8b28-0acf6bb5b247 .

km-dev:PredicateObjectMap_7763a726-bbc5-4aeb-9050-db827db1e11a rr:objectMap km-dev:RefObjectMap_b8cbce7d-9ad3-46ff-8b28-0acf6bb5b247 .

km-dev:TriplesMap_0058eb3a-d8f7-406e-9379-0d6456d544f9 rr:predicateObjectMap km-dev:PredicateObjectMap_7763a726-bbc5-4aeb-9050-db827db1e11a .

km-dev:PredicateObjectMap_7763a726-bbc5-4aeb-9050-db827db1e11a a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_7763a726-bbc5-4aeb-9050-db827db1e11a .

km-dev:PredicateObjectMap_4174d7f2-6a04-49a2-ac69-8fbeaf32812a rr:predicate memex:weaponsMentioned_feature .

km-dev:RefObjectMap_a4c4de9c-c718-42e9-8506-fa3cee15cc0d a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_c4f6d105-2551-420f-ac64-1c5412a2d180 ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap km-dev:RefObjectMap_a4c4de9c-c718-42e9-8506-fa3cee15cc0d .

km-dev:PredicateObjectMap_4174d7f2-6a04-49a2-ac69-8fbeaf32812a rr:objectMap km-dev:RefObjectMap_a4c4de9c-c718-42e9-8506-fa3cee15cc0d .

km-dev:TriplesMap_0058eb3a-d8f7-406e-9379-0d6456d544f9 rr:predicateObjectMap km-dev:PredicateObjectMap_4174d7f2-6a04-49a2-ac69-8fbeaf32812a .

km-dev:PredicateObjectMap_4174d7f2-6a04-49a2-ac69-8fbeaf32812a a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_4174d7f2-6a04-49a2-ac69-8fbeaf32812a .

km-dev:TriplesMap_c2180cc3-25fc-475d-9a86-2f22d03f07e2 a rr:TriplesMap .

_:node19j24e2hkx1 km-dev:hasTriplesMap km-dev:TriplesMap_c2180cc3-25fc-475d-9a86-2f22d03f07e2 .

km-dev:TriplesMap_c2180cc3-25fc-475d-9a86-2f22d03f07e2 km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx44 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasLogicalTable _:node19j24e2hkx44 .

km-dev:TriplesMap_c2180cc3-25fc-475d-9a86-2f22d03f07e2 rr:logicalTable _:node19j24e2hkx44 ;
	rr:subjectMap _:node19j24e2hkx45 .

_:node19j24e2hkx1 km-dev:hasSubjectMap _:node19j24e2hkx45 .

_:node19j24e2hkx45 km-dev:isPartOfMapping _:node19j24e2hkx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Identifier1" ;
	rr:class memex:Identifier ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Identifier1" .

km-dev:PredicateObjectMap_61d4a147-e30c-43f8-a70f-f92e0b2bf023 rr:predicate memex:hasType .

_:node19j24e2hkx46 rr:constant <http://dig.isi.edu/data/thesauri/identifiertype/postid> ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx46 .

km-dev:PredicateObjectMap_61d4a147-e30c-43f8-a70f-f92e0b2bf023 rr:objectMap _:node19j24e2hkx46 .

km-dev:TriplesMap_c2180cc3-25fc-475d-9a86-2f22d03f07e2 rr:predicateObjectMap km-dev:PredicateObjectMap_61d4a147-e30c-43f8-a70f-f92e0b2bf023 .

km-dev:PredicateObjectMap_61d4a147-e30c-43f8-a70f-f92e0b2bf023 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_61d4a147-e30c-43f8-a70f-f92e0b2bf023 .

km-dev:PredicateObjectMap_e9b54a88-d0cf-410e-8585-0a882f478d65 rr:predicate rdfs:label .

_:node19j24e2hkx47 rr:column "[\"posts\",\"post_id\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx47 .

km-dev:PredicateObjectMap_e9b54a88-d0cf-410e-8585-0a882f478d65 rr:objectMap _:node19j24e2hkx47 .

km-dev:TriplesMap_c2180cc3-25fc-475d-9a86-2f22d03f07e2 rr:predicateObjectMap km-dev:PredicateObjectMap_e9b54a88-d0cf-410e-8585-0a882f478d65 .

km-dev:PredicateObjectMap_e9b54a88-d0cf-410e-8585-0a882f478d65 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_e9b54a88-d0cf-410e-8585-0a882f478d65 .

km-dev:TriplesMap_8ae8b462-4a6b-4d0e-879d-8e5ef8bf9ad3 a rr:TriplesMap .

_:node19j24e2hkx1 km-dev:hasTriplesMap km-dev:TriplesMap_8ae8b462-4a6b-4d0e-879d-8e5ef8bf9ad3 .

km-dev:TriplesMap_8ae8b462-4a6b-4d0e-879d-8e5ef8bf9ad3 km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx48 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasLogicalTable _:node19j24e2hkx48 .

km-dev:TriplesMap_8ae8b462-4a6b-4d0e-879d-8e5ef8bf9ad3 rr:logicalTable _:node19j24e2hkx48 ;
	rr:subjectMap _:node19j24e2hkx49 .

_:node19j24e2hkx1 km-dev:hasSubjectMap _:node19j24e2hkx49 .

_:node19j24e2hkx49 km-dev:isPartOfMapping _:node19j24e2hkx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Identifier2" ;
	rr:class memex:Identifier ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Identifier2" .

km-dev:PredicateObjectMap_8fa15425-cbc3-47cd-838d-1ad6108729f8 rr:predicate memex:hasType .

_:node19j24e2hkx50 rr:constant <http://dig.isi.edu/data/thesauri/identifiertype/postid> ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx50 .

km-dev:PredicateObjectMap_8fa15425-cbc3-47cd-838d-1ad6108729f8 rr:objectMap _:node19j24e2hkx50 .

km-dev:TriplesMap_8ae8b462-4a6b-4d0e-879d-8e5ef8bf9ad3 rr:predicateObjectMap km-dev:PredicateObjectMap_8fa15425-cbc3-47cd-838d-1ad6108729f8 .

km-dev:PredicateObjectMap_8fa15425-cbc3-47cd-838d-1ad6108729f8 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_8fa15425-cbc3-47cd-838d-1ad6108729f8 .

km-dev:PredicateObjectMap_26a82c5b-c156-4cbc-aebf-524c4de699b5 rr:predicate rdfs:label .

_:node19j24e2hkx51 rr:column "topic_id" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx51 .

km-dev:PredicateObjectMap_26a82c5b-c156-4cbc-aebf-524c4de699b5 rr:objectMap _:node19j24e2hkx51 .

km-dev:TriplesMap_8ae8b462-4a6b-4d0e-879d-8e5ef8bf9ad3 rr:predicateObjectMap km-dev:PredicateObjectMap_26a82c5b-c156-4cbc-aebf-524c4de699b5 .

km-dev:PredicateObjectMap_26a82c5b-c156-4cbc-aebf-524c4de699b5 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_26a82c5b-c156-4cbc-aebf-524c4de699b5 .

km-dev:TriplesMap_ca32146f-06c5-433d-aef4-033be6231f8b a rr:TriplesMap .

_:node19j24e2hkx1 km-dev:hasTriplesMap km-dev:TriplesMap_ca32146f-06c5-433d-aef4-033be6231f8b .

km-dev:TriplesMap_ca32146f-06c5-433d-aef4-033be6231f8b km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx52 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasLogicalTable _:node19j24e2hkx52 .

km-dev:TriplesMap_ca32146f-06c5-433d-aef4-033be6231f8b rr:logicalTable _:node19j24e2hkx52 ;
	rr:subjectMap _:node19j24e2hkx53 .

_:node19j24e2hkx1 km-dev:hasSubjectMap _:node19j24e2hkx53 .

_:node19j24e2hkx53 km-dev:isPartOfMapping _:node19j24e2hkx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/Article1" ;
	rr:class schema:Article ;
	rr:template "{[\"posts\",\"article_uri\"]}" ;
	a km-dev:steinerTreeRootNode .

km-dev:PredicateObjectMap_1f2467ee-0a59-43c7-97a7-951bce7765b6 rr:predicate memex:hasBodyPart .

km-dev:RefObjectMap_c35ff47e-2735-48a2-a1f1-dbdc20bddb35 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_17c84f68-9ecb-4b7b-ab35-6bc8e9911712 ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap km-dev:RefObjectMap_c35ff47e-2735-48a2-a1f1-dbdc20bddb35 .

km-dev:PredicateObjectMap_1f2467ee-0a59-43c7-97a7-951bce7765b6 rr:objectMap km-dev:RefObjectMap_c35ff47e-2735-48a2-a1f1-dbdc20bddb35 .

km-dev:TriplesMap_ca32146f-06c5-433d-aef4-033be6231f8b rr:predicateObjectMap km-dev:PredicateObjectMap_1f2467ee-0a59-43c7-97a7-951bce7765b6 .

km-dev:PredicateObjectMap_1f2467ee-0a59-43c7-97a7-951bce7765b6 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_1f2467ee-0a59-43c7-97a7-951bce7765b6 .

km-dev:PredicateObjectMap_990b021a-9880-43b2-941c-e72114b8fa41 rr:predicate memex:hasFeatureCollection .

km-dev:RefObjectMap_75d807dc-8ea9-4577-8939-e11895d91ab1 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_0058eb3a-d8f7-406e-9379-0d6456d544f9 ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap km-dev:RefObjectMap_75d807dc-8ea9-4577-8939-e11895d91ab1 .

km-dev:PredicateObjectMap_990b021a-9880-43b2-941c-e72114b8fa41 rr:objectMap km-dev:RefObjectMap_75d807dc-8ea9-4577-8939-e11895d91ab1 .

km-dev:TriplesMap_ca32146f-06c5-433d-aef4-033be6231f8b rr:predicateObjectMap km-dev:PredicateObjectMap_990b021a-9880-43b2-941c-e72114b8fa41 .

km-dev:PredicateObjectMap_990b021a-9880-43b2-941c-e72114b8fa41 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_990b021a-9880-43b2-941c-e72114b8fa41 .

km-dev:PredicateObjectMap_c1bba17c-94e2-4a45-8d84-58ad25ccf9ea rr:predicate memex:hasSignaturePart .

km-dev:RefObjectMap_5c7abdf1-78fd-4d80-bc07-deff7cfa4903 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_96e7a974-bb47-4be5-871e-c1fb2557259e ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap km-dev:RefObjectMap_5c7abdf1-78fd-4d80-bc07-deff7cfa4903 .

km-dev:PredicateObjectMap_c1bba17c-94e2-4a45-8d84-58ad25ccf9ea rr:objectMap km-dev:RefObjectMap_5c7abdf1-78fd-4d80-bc07-deff7cfa4903 .

km-dev:TriplesMap_ca32146f-06c5-433d-aef4-033be6231f8b rr:predicateObjectMap km-dev:PredicateObjectMap_c1bba17c-94e2-4a45-8d84-58ad25ccf9ea .

km-dev:PredicateObjectMap_c1bba17c-94e2-4a45-8d84-58ad25ccf9ea a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_c1bba17c-94e2-4a45-8d84-58ad25ccf9ea .

km-dev:PredicateObjectMap_dda954da-c27d-4127-aa3a-0b276251f6d0 rr:predicate memex:hasTitlePart .

km-dev:RefObjectMap_fac20c74-4509-4180-b286-e688b3e3a66d a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_8eda8fbb-afe7-4ce9-966d-313dbff0d262 ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap km-dev:RefObjectMap_fac20c74-4509-4180-b286-e688b3e3a66d .

km-dev:PredicateObjectMap_dda954da-c27d-4127-aa3a-0b276251f6d0 rr:objectMap km-dev:RefObjectMap_fac20c74-4509-4180-b286-e688b3e3a66d .

km-dev:TriplesMap_ca32146f-06c5-433d-aef4-033be6231f8b rr:predicateObjectMap km-dev:PredicateObjectMap_dda954da-c27d-4127-aa3a-0b276251f6d0 .

km-dev:PredicateObjectMap_dda954da-c27d-4127-aa3a-0b276251f6d0 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_dda954da-c27d-4127-aa3a-0b276251f6d0 .

km-dev:PredicateObjectMap_7a90a5d2-d69f-455f-9058-6fdc77151e67 rr:predicate schema:dateCreated .

_:node19j24e2hkx54 rr:column "[\"posts\",\"dateCreated\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx54 .

km-dev:PredicateObjectMap_7a90a5d2-d69f-455f-9058-6fdc77151e67 rr:objectMap _:node19j24e2hkx54 .

km-dev:TriplesMap_ca32146f-06c5-433d-aef4-033be6231f8b rr:predicateObjectMap km-dev:PredicateObjectMap_7a90a5d2-d69f-455f-9058-6fdc77151e67 .

km-dev:PredicateObjectMap_7a90a5d2-d69f-455f-9058-6fdc77151e67 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_7a90a5d2-d69f-455f-9058-6fdc77151e67 .

km-dev:PredicateObjectMap_11174a33-8420-4eb0-a321-0e59e2598e8d rr:predicate schema:isPartOf .

km-dev:RefObjectMap_eea40322-4c32-45da-b592-52ca8abcc0bf a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_b680a20b-d4a8-47f2-ba8e-8f1d2e1b9108 ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap km-dev:RefObjectMap_eea40322-4c32-45da-b592-52ca8abcc0bf .

km-dev:PredicateObjectMap_11174a33-8420-4eb0-a321-0e59e2598e8d rr:objectMap km-dev:RefObjectMap_eea40322-4c32-45da-b592-52ca8abcc0bf .

km-dev:TriplesMap_ca32146f-06c5-433d-aef4-033be6231f8b rr:predicateObjectMap km-dev:PredicateObjectMap_11174a33-8420-4eb0-a321-0e59e2598e8d .

km-dev:PredicateObjectMap_11174a33-8420-4eb0-a321-0e59e2598e8d a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_11174a33-8420-4eb0-a321-0e59e2598e8d .

km-dev:PredicateObjectMap_7a38cf65-633b-435b-bf6d-e39706c1cbf9 rr:predicate memex:hasIdentifier .

km-dev:RefObjectMap_6db8d798-9ae4-4216-913e-2f73f512f19f a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_c2180cc3-25fc-475d-9a86-2f22d03f07e2 ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap km-dev:RefObjectMap_6db8d798-9ae4-4216-913e-2f73f512f19f .

km-dev:PredicateObjectMap_7a38cf65-633b-435b-bf6d-e39706c1cbf9 rr:objectMap km-dev:RefObjectMap_6db8d798-9ae4-4216-913e-2f73f512f19f .

km-dev:TriplesMap_ca32146f-06c5-433d-aef4-033be6231f8b rr:predicateObjectMap km-dev:PredicateObjectMap_7a38cf65-633b-435b-bf6d-e39706c1cbf9 .

km-dev:PredicateObjectMap_7a38cf65-633b-435b-bf6d-e39706c1cbf9 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_7a38cf65-633b-435b-bf6d-e39706c1cbf9 .

km-dev:TriplesMap_17c84f68-9ecb-4b7b-ab35-6bc8e9911712 a rr:TriplesMap .

_:node19j24e2hkx1 km-dev:hasTriplesMap km-dev:TriplesMap_17c84f68-9ecb-4b7b-ab35-6bc8e9911712 .

km-dev:TriplesMap_17c84f68-9ecb-4b7b-ab35-6bc8e9911712 km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx55 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasLogicalTable _:node19j24e2hkx55 .

km-dev:TriplesMap_17c84f68-9ecb-4b7b-ab35-6bc8e9911712 rr:logicalTable _:node19j24e2hkx55 ;
	rr:subjectMap _:node19j24e2hkx56 .

_:node19j24e2hkx1 km-dev:hasSubjectMap _:node19j24e2hkx56 .

_:node19j24e2hkx56 km-dev:isPartOfMapping _:node19j24e2hkx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPageElement2" ;
	rr:class schema:WebPageElement ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:WebPageElement2" .

km-dev:PredicateObjectMap_69f0c405-4347-4198-8aa8-dca63cff549c rr:predicate schema:text .

_:node19j24e2hkx57 rr:column "[\"posts\",\"content\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx57 .

km-dev:PredicateObjectMap_69f0c405-4347-4198-8aa8-dca63cff549c rr:objectMap _:node19j24e2hkx57 .

km-dev:TriplesMap_17c84f68-9ecb-4b7b-ab35-6bc8e9911712 rr:predicateObjectMap km-dev:PredicateObjectMap_69f0c405-4347-4198-8aa8-dca63cff549c .

km-dev:PredicateObjectMap_69f0c405-4347-4198-8aa8-dca63cff549c a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_69f0c405-4347-4198-8aa8-dca63cff549c .

km-dev:TriplesMap_96e7a974-bb47-4be5-871e-c1fb2557259e a rr:TriplesMap .

_:node19j24e2hkx1 km-dev:hasTriplesMap km-dev:TriplesMap_96e7a974-bb47-4be5-871e-c1fb2557259e .

km-dev:TriplesMap_96e7a974-bb47-4be5-871e-c1fb2557259e km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx58 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasLogicalTable _:node19j24e2hkx58 .

km-dev:TriplesMap_96e7a974-bb47-4be5-871e-c1fb2557259e rr:logicalTable _:node19j24e2hkx58 ;
	rr:subjectMap _:node19j24e2hkx59 .

_:node19j24e2hkx1 km-dev:hasSubjectMap _:node19j24e2hkx59 .

_:node19j24e2hkx59 km-dev:isPartOfMapping _:node19j24e2hkx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPageElement3" ;
	rr:class schema:WebPageElement ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:WebPageElement3" .

km-dev:PredicateObjectMap_1e9d3445-3e9a-4c25-8bc6-06f2044852fd rr:predicate schema:text .

_:node19j24e2hkx60 rr:column "[\"posts\",\"signature_clean\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx60 .

km-dev:PredicateObjectMap_1e9d3445-3e9a-4c25-8bc6-06f2044852fd rr:objectMap _:node19j24e2hkx60 .

km-dev:TriplesMap_96e7a974-bb47-4be5-871e-c1fb2557259e rr:predicateObjectMap km-dev:PredicateObjectMap_1e9d3445-3e9a-4c25-8bc6-06f2044852fd .

km-dev:PredicateObjectMap_1e9d3445-3e9a-4c25-8bc6-06f2044852fd a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_1e9d3445-3e9a-4c25-8bc6-06f2044852fd .

km-dev:TriplesMap_8eda8fbb-afe7-4ce9-966d-313dbff0d262 a rr:TriplesMap .

_:node19j24e2hkx1 km-dev:hasTriplesMap km-dev:TriplesMap_8eda8fbb-afe7-4ce9-966d-313dbff0d262 .

km-dev:TriplesMap_8eda8fbb-afe7-4ce9-966d-313dbff0d262 km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx61 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasLogicalTable _:node19j24e2hkx61 .

km-dev:TriplesMap_8eda8fbb-afe7-4ce9-966d-313dbff0d262 rr:logicalTable _:node19j24e2hkx61 ;
	rr:subjectMap _:node19j24e2hkx62 .

_:node19j24e2hkx1 km-dev:hasSubjectMap _:node19j24e2hkx62 .

_:node19j24e2hkx62 km-dev:isPartOfMapping _:node19j24e2hkx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPageElement1" ;
	rr:class schema:WebPageElement ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:WebPageElement1" .

km-dev:PredicateObjectMap_255f45b1-6cf3-42db-b87e-13577f6d2032 rr:predicate schema:text .

_:node19j24e2hkx63 rr:column "[\"posts\",\"title\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx63 .

km-dev:PredicateObjectMap_255f45b1-6cf3-42db-b87e-13577f6d2032 rr:objectMap _:node19j24e2hkx63 .

km-dev:TriplesMap_8eda8fbb-afe7-4ce9-966d-313dbff0d262 rr:predicateObjectMap km-dev:PredicateObjectMap_255f45b1-6cf3-42db-b87e-13577f6d2032 .

km-dev:PredicateObjectMap_255f45b1-6cf3-42db-b87e-13577f6d2032 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_255f45b1-6cf3-42db-b87e-13577f6d2032 .

km-dev:TriplesMap_b680a20b-d4a8-47f2-ba8e-8f1d2e1b9108 a rr:TriplesMap .

_:node19j24e2hkx1 km-dev:hasTriplesMap km-dev:TriplesMap_b680a20b-d4a8-47f2-ba8e-8f1d2e1b9108 .

km-dev:TriplesMap_b680a20b-d4a8-47f2-ba8e-8f1d2e1b9108 km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx64 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasLogicalTable _:node19j24e2hkx64 .

km-dev:TriplesMap_b680a20b-d4a8-47f2-ba8e-8f1d2e1b9108 rr:logicalTable _:node19j24e2hkx64 ;
	rr:subjectMap _:node19j24e2hkx65 .

_:node19j24e2hkx1 km-dev:hasSubjectMap _:node19j24e2hkx65 .

_:node19j24e2hkx65 km-dev:isPartOfMapping _:node19j24e2hkx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/Article2" ;
	rr:class schema:Article ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:Article2" .

km-dev:PredicateObjectMap_7fa0fc81-57b9-4f26-b586-c5a93eece5cf rr:predicate memex:hasIdentifier .

km-dev:RefObjectMap_1a64804b-6dc4-4837-aca9-6099dae23439 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_8ae8b462-4a6b-4d0e-879d-8e5ef8bf9ad3 ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap km-dev:RefObjectMap_1a64804b-6dc4-4837-aca9-6099dae23439 .

km-dev:PredicateObjectMap_7fa0fc81-57b9-4f26-b586-c5a93eece5cf rr:objectMap km-dev:RefObjectMap_1a64804b-6dc4-4837-aca9-6099dae23439 .

km-dev:TriplesMap_b680a20b-d4a8-47f2-ba8e-8f1d2e1b9108 rr:predicateObjectMap km-dev:PredicateObjectMap_7fa0fc81-57b9-4f26-b586-c5a93eece5cf .

km-dev:PredicateObjectMap_7fa0fc81-57b9-4f26-b586-c5a93eece5cf a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_7fa0fc81-57b9-4f26-b586-c5a93eece5cf .

km-dev:PredicateObjectMap_d6bc200b-d5df-4f6d-9cd1-2bfce5809d8f rr:predicate memex:hasTitlePart .

km-dev:RefObjectMap_20138c1a-62d1-465b-8eee-5f0b8c406608 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_542ebe36-dede-4390-9348-a207ee65d3df ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap km-dev:RefObjectMap_20138c1a-62d1-465b-8eee-5f0b8c406608 .

km-dev:PredicateObjectMap_d6bc200b-d5df-4f6d-9cd1-2bfce5809d8f rr:objectMap km-dev:RefObjectMap_20138c1a-62d1-465b-8eee-5f0b8c406608 .

km-dev:TriplesMap_b680a20b-d4a8-47f2-ba8e-8f1d2e1b9108 rr:predicateObjectMap km-dev:PredicateObjectMap_d6bc200b-d5df-4f6d-9cd1-2bfce5809d8f .

km-dev:PredicateObjectMap_d6bc200b-d5df-4f6d-9cd1-2bfce5809d8f a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_d6bc200b-d5df-4f6d-9cd1-2bfce5809d8f .

km-dev:PredicateObjectMap_25b1f04c-b16e-4a0a-941f-15a873c7f76a rr:predicate schema:url .

_:node19j24e2hkx66 rr:column "url" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx66 .

km-dev:PredicateObjectMap_25b1f04c-b16e-4a0a-941f-15a873c7f76a rr:objectMap _:node19j24e2hkx66 .

km-dev:TriplesMap_b680a20b-d4a8-47f2-ba8e-8f1d2e1b9108 rr:predicateObjectMap km-dev:PredicateObjectMap_25b1f04c-b16e-4a0a-941f-15a873c7f76a .

km-dev:PredicateObjectMap_25b1f04c-b16e-4a0a-941f-15a873c7f76a a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_25b1f04c-b16e-4a0a-941f-15a873c7f76a .

km-dev:TriplesMap_542ebe36-dede-4390-9348-a207ee65d3df a rr:TriplesMap .

_:node19j24e2hkx1 km-dev:hasTriplesMap km-dev:TriplesMap_542ebe36-dede-4390-9348-a207ee65d3df .

km-dev:TriplesMap_542ebe36-dede-4390-9348-a207ee65d3df km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx67 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasLogicalTable _:node19j24e2hkx67 .

km-dev:TriplesMap_542ebe36-dede-4390-9348-a207ee65d3df rr:logicalTable _:node19j24e2hkx67 ;
	rr:subjectMap _:node19j24e2hkx68 .

_:node19j24e2hkx1 km-dev:hasSubjectMap _:node19j24e2hkx68 .

_:node19j24e2hkx68 km-dev:isPartOfMapping _:node19j24e2hkx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPageElement4" ;
	rr:class schema:WebPageElement ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:WebPageElement4" .

km-dev:PredicateObjectMap_7e1e84d9-b296-4894-9777-af810f363450 rr:predicate schema:text .

_:node19j24e2hkx69 rr:column "topic_title" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasObjectMap _:node19j24e2hkx69 .

km-dev:PredicateObjectMap_7e1e84d9-b296-4894-9777-af810f363450 rr:objectMap _:node19j24e2hkx69 .

km-dev:TriplesMap_542ebe36-dede-4390-9348-a207ee65d3df rr:predicateObjectMap km-dev:PredicateObjectMap_7e1e84d9-b296-4894-9777-af810f363450 .

km-dev:PredicateObjectMap_7e1e84d9-b296-4894-9777-af810f363450 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j24e2hkx1 .

_:node19j24e2hkx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_7e1e84d9-b296-4894-9777-af810f363450 .
