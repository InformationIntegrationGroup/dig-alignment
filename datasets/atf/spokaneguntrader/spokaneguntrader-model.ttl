@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix dgeo: <http://dig.isi.edu/ontology/dgeo/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix schemax: <http://topbraid.org/schemax/> .
@prefix crm: <http://www.cidoc-crm.org/rdfs/cidoc_crm_v6.0-draft-2015January.rdfs> .
@prefix schema: <http://schema.org/> .
@prefix geo: <http://www.opengis.net/ont/geosparql#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix memex: <http://memexproxy.com/ontology/> .
@prefix ht: <http://memexproxy.com/ontology/human-trafficking/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix km-dev: <http://isi.edu/integration/karma/dev#> .

_:node19j16cgf4x1 a km-dev:R2RMLMapping ;
	km-dev:sourceName "spokaneguntrader-sample.json" ;
	km-dev:modelPublicationTime "1429190623717"^^xsd:long ;
	km-dev:modelVersion "1.7" ;
	km-dev:hasInputColumns "[[{\"columnName\":\"posts\"},{\"columnName\":\"post_id\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"signature\"}],[{\"columnName\":\"topic_title\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"user_attributes\"},{\"columnName\":\"value\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"title\"}],[{\"columnName\":\"topic_id\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"user_attributes\"},{\"columnName\":\"label\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"weapons\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"url\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"username\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"content\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"date_posted\"}]]" ;
	km-dev:hasOutputColumns "[[{\"columnName\":\"prices2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"post_id\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"posts:\"},{\"columnName\":\"clean_post_count\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"title\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Column_1\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"dateCreated\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"joined:\"},{\"columnName\":\"joined_iso2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"posts:\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"content\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"joined_weapons\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"favorite firearm:\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"favorite firearm:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"address_uri\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"joined:\"},{\"columnName\":\"joined_iso\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"joined:\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"clean_address2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"joined:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"clean_address\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"username\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"username2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"next firearm:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"signature_clean\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"fc_uri\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Column_1\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"Values_1\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"sgt supporter:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"prices\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"country\"}],[{\"columnName\":\"url\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"posts:\"},{\"columnName\":\"clean_post_count2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"sgt supporter:\"}],[{\"columnName\":\"topic_title\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"posts:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"topic_id\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"state\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"weapons\"},{\"columnName\":\"weapons2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"location:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"city\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"location:\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"weapons\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"next firearm:\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"article_uri\"}]]" ;
	km-dev:hasModelLabel "spokaneguntrader" ;
	km-dev:hasBaseURI "http://dig.isi.edu/atf/data/page/" ;
	km-dev:hasWorksheetHistory """[
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"date_posted\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"dateCreated\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_date_created(getValue(\\\"date_posted\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"date_posted\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"dateCreated\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"signature\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"signature_clean\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return signature_clean(getValue(\\\"signature\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"post_id\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"article_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_article_uri(getValue(\\\"url\\\"), getValue(\\\"post_id\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_id\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"article_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"username\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"username2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"username\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"article_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/Article\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/Article1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:Article1 (add)\",
                    \"DomainId\": \"http://schema.org/Article1\",
                    \"DomainUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"article_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"article_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"dateCreated\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/dateCreated\",
                    \"DomainLabel\": \"schema:Article1\",
                    \"DomainId\": \"http://schema.org/Article1\",
                    \"DomainUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"dateCreated\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"dateCreated\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"title\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/WebPageElement\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/WebPageElement1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:WebPageElement1 (add)\",
                    \"DomainId\": \"http://schema.org/WebPageElement1 (add)\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/exampleOfWork\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/Article\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasBodyPart\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\",
                    \"edgeSourceUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://memexproxy.com/ontology/hasBodyPart\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/exampleOfWork\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/exampleOfWork\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/exampleOfWork\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/exampleOfWork\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/Article\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasTitlePart\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://memexproxy.com/ontology/hasTitlePart\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPageElement\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasTitlePart\",
                    \"edgeTargetId\": \"http://schema.org/WebPageElement1\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"content\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/WebPageElement\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/WebPageElement2 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:WebPageElement2 (add)\",
                    \"DomainId\": \"http://schema.org/WebPageElement2\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"signature_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/WebPageElement\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/WebPageElement3 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:WebPageElement3 (add)\",
                    \"DomainId\": \"http://schema.org/WebPageElement3\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPageElement\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasSignaturePart\",
                    \"edgeTargetId\": \"http://schema.org/WebPageElement3\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPageElement\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasBodyPart\",
                    \"edgeTargetId\": \"http://schema.org/WebPageElement2\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"username\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature1 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"username2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/person_username\",
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"username2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"fc_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_fc_uri(getValue(\\\"article_uri\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"article_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"fc_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"fc_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/FeatureCollection\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/FeatureCollection1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"memex:FeatureCollection1 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"fc_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"fc_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/FeatureCollection\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasFeatureCollection\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/person_username_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"properties\",
                \"value\": {
                    \"hasServiceProperties\": false,
                    \"hasPrefix\": false,
                    \"graphLabel\": \"\",
                    \"hasBaseURI\": true,
                    \"baseURI\": \"http://dig.isi.edu/atf/data/page/\"
                },
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetWorksheetPropertiesCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"person_username\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"person_username\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"person_username1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"keyhNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"user_attributes\"},
                    {\"columnName\": \"label\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"valuehNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"user_attributes\"},
                    {\"columnName\": \"value\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"notOtherColumn\",
                \"value\": \"true\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"user_attributes\\\"},{\\\"columnName\\\":\\\"value\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"user_attributes\\\"},{\\\"columnName\\\":\\\"label\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"next firearm:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Column_1\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"sgt supporter:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Column_1\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"favorite firearm:\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"favorite firearm:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"sgt supporter:\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"location:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"location:\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"next firearm:\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"UnfoldCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"city\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_get_city(getValue(\\\"Values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"city\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"city\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"state\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_get_state(getValue(\\\"Values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"state\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"content\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/text\",
                    \"DomainLabel\": \"schema:WebPageElement2\",
                    \"DomainId\": \"http://schema.org/WebPageElement2\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"signature_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/text\",
                    \"DomainLabel\": \"schema:WebPageElement3\",
                    \"DomainId\": \"http://schema.org/WebPageElement3\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"title\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/text\",
                    \"DomainLabel\": \"schema:WebPageElement1\",
                    \"DomainId\": \"http://schema.org/WebPageElement1\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"joined:\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"joined_iso\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_joined_date(getValue(\\\"Values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"joined:\"},
                    {\"columnName\": \"joined_iso\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"joined_iso2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"joined_iso\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"joined:\"},
                    {\"columnName\": \"joined_iso\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/enrollment_date\",
                    \"DomainLabel\": \"memex:Feature2 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature2 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"joined:\"},
                    {\"columnName\": \"joined_iso2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature2\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature2\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"enrollment_date\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"enrollment_date\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"enrollment_date1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature2\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/enrollment_date_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature2\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"properties\",
                \"value\": {
                    \"hasServiceProperties\": false,
                    \"hasPrefix\": false,
                    \"graphLabel\": \"spokaneguntrader\",
                    \"hasBaseURI\": false
                },
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetWorksheetPropertiesCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"state\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"country\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return \\\"US\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"country\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"country\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"address_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_address_uri(getValue(\\\"city\\\"), getValue(\\\"state\\\"), getValue(\\\"country\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"state\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"city\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"country\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"address_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"country\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_address\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_address(getValue(\\\"city\\\"), getValue(\\\"state\\\"), getValue(\\\"country\\\"), \\\",\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"state\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"city\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"country\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"clean_address\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature3 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature3 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature3\",
                    \"edgeId\": \"http://memexproxy.com/ontology/place_postalAddress_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature3\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"clean_address\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_address2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"clean_address\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"clean_address2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/place_postalAddress\",
                    \"DomainLabel\": \"memex:Feature3\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature3\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"place_postalAddress\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"place_postalAddress\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"place_postalAddress1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature3\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts:\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_post_count\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_clean_post_count(getValue(\\\"Values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts:\"},
                    {\"columnName\": \"clean_post_count\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_post_count2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"clean_post_count\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts:\"},
                    {\"columnName\": \"clean_post_count\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature4 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts:\"},
                    {\"columnName\": \"clean_post_count2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/person_postCount\",
                    \"DomainLabel\": \"memex:Feature4\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/person_postCount_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"person_postCount\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"person_postCount\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"person_postCount1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"next firearm:\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"values\",
                \"value\": [
                    {
                        \"name\": \"checked\",
                        \"value\": [
                            {\"columnName\": \"posts\"},
                            {\"columnName\": \"Unfold: label\"},
                            {\"columnName\": \"next firearm:\"}
                        ],
                        \"type\": \"hNodeId\"
                    },
                    {
                        \"name\": \"checked\",
                        \"value\": [
                            {\"columnName\": \"posts\"},
                            {\"columnName\": \"Unfold: label\"},
                            {\"columnName\": \"favorite firearm:\"}
                        ],
                        \"type\": \"hNodeId\"
                    }
                ],
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"ImplMethod\",
                \"value\": \"Longest\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"Values_1\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"GlueCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"Values_1\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"joined_weapons\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return get_weapons(getValue(\\\"Values\\\"), getValue(\\\"Values_1\\\"), getValue(\\\"topic_title\\\"), getValue(\\\"title\\\"), getValue(\\\"signature_clean\\\"), getValue(\\\"content\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"title\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"Values_1\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"joined_weapons\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"joined_weapons\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"delimiter\",
                \"value\": \"|\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColName\",
                \"value\": \"weapons\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newHNodeId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SplitValuesCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"weapons\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/weaponsMentioned\",
                    \"DomainLabel\": \"memex:Feature5 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"weapons\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"weapons2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"Values\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"weapons2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"weapons\"},
                    {\"columnName\": \"weapons2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature5\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"weapons2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"weapons2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/weaponsMentioned_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"weaponsMentioned_feature\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"weaponsMentioned_feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"weaponsMentioned_feature1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"post_id\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://www.w3.org/2000/01/rdf-schema#label\",
                    \"DomainLabel\": \"memex:Identifier1 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Identifier1 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Identifier\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Identifier1\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasIdentifier\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Identifier1\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"http://dig.isi.edu/data/thesauri/identifiertype/postid\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://dig.isi.edu/data/thesauri/identifiertype/postid1\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasType\",
                    \"edgeTargetId\": \"http://dig.isi.edu/data/thesauri/identifiertype/postid1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Identifier1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Identifier\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"topic_title\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/text\",
                    \"DomainLabel\": \"schema:WebPageElement4 (add)\",
                    \"DomainId\": \"http://schema.org/WebPageElement4\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPageElement4\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasTitlePart\",
                    \"edgeTargetId\": \"http://schema.org/WebPageElement4\",
                    \"edgeSourceId\": \"http://schema.org/Article2 (add)\",
                    \"edgeSourceUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/Article\",
                    \"edgeId\": \"http://schema.org/isPartOf\",
                    \"edgeTargetId\": \"http://schema.org/Article2\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"url\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/url\",
                    \"DomainLabel\": \"schema:Article2\",
                    \"DomainId\": \"http://schema.org/Article2\",
                    \"DomainUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"topic_id\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://www.w3.org/2000/01/rdf-schema#label\",
                    \"DomainLabel\": \"memex:Identifier2 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Identifier2 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Identifier\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Identifier2\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasIdentifier\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Identifier2\",
                    \"edgeSourceId\": \"http://schema.org/Article2\",
                    \"edgeSourceUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://dig.isi.edu/data/thesauri/identifiertype/postid1\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasType\",
                    \"edgeTargetId\": \"http://dig.isi.edu/data/thesauri/identifiertype/postid1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Identifier2\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Identifier\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"url\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"prices\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return get_prices(getValue(\\\"topic_title\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"url\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return get_prices(getValue(\\\"topic_title\\\"), getValue(\\\"title\\\"), getValue(\\\"content\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"previousCommandId\",
                \"value\": \"C7318\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"targetHNodeId\",
                \"value\": [{\"columnName\": \"prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitEditPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"prices2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"prices\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"prices2\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature6 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://memexproxy.com/ontology/organization_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP5:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/pricesMentioned_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/pricesMentioned\",
                    \"DomainLabel\": \"memex:Feature6\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"pricesMentioned\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"pricesMentioned\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"pricesMentioned1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"weaponsMentioned\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"nodeId\",
                \"value\": \"weaponsMentioned_feature1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    }
]""" .

km-dev:TriplesMap_15c9e44f-724e-4fb0-8929-b3d7c8a63b1f a rr:TriplesMap .

_:node19j16cgf4x1 km-dev:hasTriplesMap km-dev:TriplesMap_15c9e44f-724e-4fb0-8929-b3d7c8a63b1f .

km-dev:TriplesMap_15c9e44f-724e-4fb0-8929-b3d7c8a63b1f km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x2 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasLogicalTable _:node19j16cgf4x2 .

km-dev:TriplesMap_15c9e44f-724e-4fb0-8929-b3d7c8a63b1f rr:logicalTable _:node19j16cgf4x2 ;
	rr:subjectMap _:node19j16cgf4x3 .

_:node19j16cgf4x1 km-dev:hasSubjectMap _:node19j16cgf4x3 .

_:node19j16cgf4x3 km-dev:isPartOfMapping _:node19j16cgf4x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature1" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature1" .

km-dev:PredicateObjectMap_c89f5271-e364-4936-92c9-276dee6015de rr:predicate memex:featureName .

_:node19j16cgf4x4 rr:constant "person_username" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x4 .

km-dev:PredicateObjectMap_c89f5271-e364-4936-92c9-276dee6015de rr:objectMap _:node19j16cgf4x4 .

km-dev:TriplesMap_15c9e44f-724e-4fb0-8929-b3d7c8a63b1f rr:predicateObjectMap km-dev:PredicateObjectMap_c89f5271-e364-4936-92c9-276dee6015de .

km-dev:PredicateObjectMap_c89f5271-e364-4936-92c9-276dee6015de a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_c89f5271-e364-4936-92c9-276dee6015de .

km-dev:PredicateObjectMap_02f367bb-5617-490c-babf-9c7b88c37aba rr:predicate memex:featureValue .

_:node19j16cgf4x5 rr:column "[\"posts\",\"username\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x5 .

km-dev:PredicateObjectMap_02f367bb-5617-490c-babf-9c7b88c37aba rr:objectMap _:node19j16cgf4x5 .

km-dev:TriplesMap_15c9e44f-724e-4fb0-8929-b3d7c8a63b1f rr:predicateObjectMap km-dev:PredicateObjectMap_02f367bb-5617-490c-babf-9c7b88c37aba .

km-dev:PredicateObjectMap_02f367bb-5617-490c-babf-9c7b88c37aba a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_02f367bb-5617-490c-babf-9c7b88c37aba .

km-dev:PredicateObjectMap_c6510afd-132b-49e1-9730-63b8ebf44441 rr:predicate memex:person_username .

_:node19j16cgf4x6 rr:column "[\"posts\",\"username\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x6 .

km-dev:PredicateObjectMap_c6510afd-132b-49e1-9730-63b8ebf44441 rr:objectMap _:node19j16cgf4x6 .

km-dev:TriplesMap_15c9e44f-724e-4fb0-8929-b3d7c8a63b1f rr:predicateObjectMap km-dev:PredicateObjectMap_c6510afd-132b-49e1-9730-63b8ebf44441 .

km-dev:PredicateObjectMap_c6510afd-132b-49e1-9730-63b8ebf44441 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_c6510afd-132b-49e1-9730-63b8ebf44441 .

km-dev:TriplesMap_fc407542-e99d-4241-8eae-f06cedcaefc7 a rr:TriplesMap .

_:node19j16cgf4x1 km-dev:hasTriplesMap km-dev:TriplesMap_fc407542-e99d-4241-8eae-f06cedcaefc7 .

km-dev:TriplesMap_fc407542-e99d-4241-8eae-f06cedcaefc7 km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x7 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasLogicalTable _:node19j16cgf4x7 .

km-dev:TriplesMap_fc407542-e99d-4241-8eae-f06cedcaefc7 rr:logicalTable _:node19j16cgf4x7 ;
	rr:subjectMap _:node19j16cgf4x8 .

_:node19j16cgf4x1 km-dev:hasSubjectMap _:node19j16cgf4x8 .

_:node19j16cgf4x8 km-dev:isPartOfMapping _:node19j16cgf4x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature2" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature2" .

km-dev:PredicateObjectMap_21e29cc9-2400-4804-a8ca-ef823d4c840d rr:predicate memex:enrollment_date .

_:node19j16cgf4x9 rr:column "[\"posts\",\"Unfold: label\",\"joined:\",\"joined_iso\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x9 .

km-dev:PredicateObjectMap_21e29cc9-2400-4804-a8ca-ef823d4c840d rr:objectMap _:node19j16cgf4x9 .

km-dev:TriplesMap_fc407542-e99d-4241-8eae-f06cedcaefc7 rr:predicateObjectMap km-dev:PredicateObjectMap_21e29cc9-2400-4804-a8ca-ef823d4c840d .

km-dev:PredicateObjectMap_21e29cc9-2400-4804-a8ca-ef823d4c840d a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_21e29cc9-2400-4804-a8ca-ef823d4c840d .

km-dev:PredicateObjectMap_a6d159d9-c1e0-49b3-b769-bf0bb534a546 rr:predicate memex:featureName .

_:node19j16cgf4x10 rr:constant "enrollment_date" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x10 .

km-dev:PredicateObjectMap_a6d159d9-c1e0-49b3-b769-bf0bb534a546 rr:objectMap _:node19j16cgf4x10 .

km-dev:TriplesMap_fc407542-e99d-4241-8eae-f06cedcaefc7 rr:predicateObjectMap km-dev:PredicateObjectMap_a6d159d9-c1e0-49b3-b769-bf0bb534a546 .

km-dev:PredicateObjectMap_a6d159d9-c1e0-49b3-b769-bf0bb534a546 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_a6d159d9-c1e0-49b3-b769-bf0bb534a546 .

km-dev:PredicateObjectMap_3f4d8a20-8a30-4c7a-9ddf-f5fc1cfc5801 rr:predicate memex:featureValue .

_:node19j16cgf4x11 rr:column "[\"posts\",\"Unfold: label\",\"joined:\",\"joined_iso\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x11 .

km-dev:PredicateObjectMap_3f4d8a20-8a30-4c7a-9ddf-f5fc1cfc5801 rr:objectMap _:node19j16cgf4x11 .

km-dev:TriplesMap_fc407542-e99d-4241-8eae-f06cedcaefc7 rr:predicateObjectMap km-dev:PredicateObjectMap_3f4d8a20-8a30-4c7a-9ddf-f5fc1cfc5801 .

km-dev:PredicateObjectMap_3f4d8a20-8a30-4c7a-9ddf-f5fc1cfc5801 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_3f4d8a20-8a30-4c7a-9ddf-f5fc1cfc5801 .

km-dev:TriplesMap_2e259e7d-00c6-47a9-89e7-206506d513c5 a rr:TriplesMap .

_:node19j16cgf4x1 km-dev:hasTriplesMap km-dev:TriplesMap_2e259e7d-00c6-47a9-89e7-206506d513c5 .

km-dev:TriplesMap_2e259e7d-00c6-47a9-89e7-206506d513c5 km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x12 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasLogicalTable _:node19j16cgf4x12 .

km-dev:TriplesMap_2e259e7d-00c6-47a9-89e7-206506d513c5 rr:logicalTable _:node19j16cgf4x12 ;
	rr:subjectMap _:node19j16cgf4x13 .

_:node19j16cgf4x1 km-dev:hasSubjectMap _:node19j16cgf4x13 .

_:node19j16cgf4x13 km-dev:isPartOfMapping _:node19j16cgf4x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature3" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature3" .

km-dev:PredicateObjectMap_e434e543-bf78-4099-80eb-af86b97c4829 rr:predicate memex:featureName .

_:node19j16cgf4x14 rr:constant "place_postalAddress" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x14 .

km-dev:PredicateObjectMap_e434e543-bf78-4099-80eb-af86b97c4829 rr:objectMap _:node19j16cgf4x14 .

km-dev:TriplesMap_2e259e7d-00c6-47a9-89e7-206506d513c5 rr:predicateObjectMap km-dev:PredicateObjectMap_e434e543-bf78-4099-80eb-af86b97c4829 .

km-dev:PredicateObjectMap_e434e543-bf78-4099-80eb-af86b97c4829 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_e434e543-bf78-4099-80eb-af86b97c4829 .

km-dev:PredicateObjectMap_751b0653-2e8b-4ca0-8146-a60347110423 rr:predicate memex:featureValue .

_:node19j16cgf4x15 rr:column "[\"posts\",\"Unfold: label\",\"city, state:\",\"clean_address\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x15 .

km-dev:PredicateObjectMap_751b0653-2e8b-4ca0-8146-a60347110423 rr:objectMap _:node19j16cgf4x15 .

km-dev:TriplesMap_2e259e7d-00c6-47a9-89e7-206506d513c5 rr:predicateObjectMap km-dev:PredicateObjectMap_751b0653-2e8b-4ca0-8146-a60347110423 .

km-dev:PredicateObjectMap_751b0653-2e8b-4ca0-8146-a60347110423 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_751b0653-2e8b-4ca0-8146-a60347110423 .

km-dev:PredicateObjectMap_a4e6d739-5904-4471-9d37-8d1e95a8435a rr:predicate memex:place_postalAddress .

_:node19j16cgf4x16 rr:column "[\"posts\",\"Unfold: label\",\"city, state:\",\"clean_address\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x16 .

km-dev:PredicateObjectMap_a4e6d739-5904-4471-9d37-8d1e95a8435a rr:objectMap _:node19j16cgf4x16 .

km-dev:TriplesMap_2e259e7d-00c6-47a9-89e7-206506d513c5 rr:predicateObjectMap km-dev:PredicateObjectMap_a4e6d739-5904-4471-9d37-8d1e95a8435a .

km-dev:PredicateObjectMap_a4e6d739-5904-4471-9d37-8d1e95a8435a a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_a4e6d739-5904-4471-9d37-8d1e95a8435a .

km-dev:TriplesMap_bd04a7de-93d9-4fad-9a09-bf282883043a a rr:TriplesMap .

_:node19j16cgf4x1 km-dev:hasTriplesMap km-dev:TriplesMap_bd04a7de-93d9-4fad-9a09-bf282883043a .

km-dev:TriplesMap_bd04a7de-93d9-4fad-9a09-bf282883043a km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x17 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasLogicalTable _:node19j16cgf4x17 .

km-dev:TriplesMap_bd04a7de-93d9-4fad-9a09-bf282883043a rr:logicalTable _:node19j16cgf4x17 ;
	rr:subjectMap _:node19j16cgf4x18 .

_:node19j16cgf4x1 km-dev:hasSubjectMap _:node19j16cgf4x18 .

_:node19j16cgf4x18 km-dev:isPartOfMapping _:node19j16cgf4x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature4" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature4" .

km-dev:PredicateObjectMap_7a53f5a8-7d5a-4f46-bd17-afda5c174b22 rr:predicate memex:featureName .

_:node19j16cgf4x19 rr:constant "person_postCount" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x19 .

km-dev:PredicateObjectMap_7a53f5a8-7d5a-4f46-bd17-afda5c174b22 rr:objectMap _:node19j16cgf4x19 .

km-dev:TriplesMap_bd04a7de-93d9-4fad-9a09-bf282883043a rr:predicateObjectMap km-dev:PredicateObjectMap_7a53f5a8-7d5a-4f46-bd17-afda5c174b22 .

km-dev:PredicateObjectMap_7a53f5a8-7d5a-4f46-bd17-afda5c174b22 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_7a53f5a8-7d5a-4f46-bd17-afda5c174b22 .

km-dev:PredicateObjectMap_ef79ad82-06b9-4ff7-b37b-9da537c03890 rr:predicate memex:featureValue .

_:node19j16cgf4x20 rr:column "[\"posts\",\"Unfold: label\",\"posts:\",\"clean_post_count\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x20 .

km-dev:PredicateObjectMap_ef79ad82-06b9-4ff7-b37b-9da537c03890 rr:objectMap _:node19j16cgf4x20 .

km-dev:TriplesMap_bd04a7de-93d9-4fad-9a09-bf282883043a rr:predicateObjectMap km-dev:PredicateObjectMap_ef79ad82-06b9-4ff7-b37b-9da537c03890 .

km-dev:PredicateObjectMap_ef79ad82-06b9-4ff7-b37b-9da537c03890 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_ef79ad82-06b9-4ff7-b37b-9da537c03890 .

km-dev:PredicateObjectMap_2f804a08-ce36-4084-ad0e-929abd73a2d9 rr:predicate memex:person_postCount .

_:node19j16cgf4x21 rr:column "[\"posts\",\"Unfold: label\",\"posts:\",\"clean_post_count\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x21 .

km-dev:PredicateObjectMap_2f804a08-ce36-4084-ad0e-929abd73a2d9 rr:objectMap _:node19j16cgf4x21 .

km-dev:TriplesMap_bd04a7de-93d9-4fad-9a09-bf282883043a rr:predicateObjectMap km-dev:PredicateObjectMap_2f804a08-ce36-4084-ad0e-929abd73a2d9 .

km-dev:PredicateObjectMap_2f804a08-ce36-4084-ad0e-929abd73a2d9 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_2f804a08-ce36-4084-ad0e-929abd73a2d9 .

km-dev:TriplesMap_78eb7f67-2f46-47c5-8bb9-62f20943238a a rr:TriplesMap .

_:node19j16cgf4x1 km-dev:hasTriplesMap km-dev:TriplesMap_78eb7f67-2f46-47c5-8bb9-62f20943238a .

km-dev:TriplesMap_78eb7f67-2f46-47c5-8bb9-62f20943238a km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x22 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasLogicalTable _:node19j16cgf4x22 .

km-dev:TriplesMap_78eb7f67-2f46-47c5-8bb9-62f20943238a rr:logicalTable _:node19j16cgf4x22 ;
	rr:subjectMap _:node19j16cgf4x23 .

_:node19j16cgf4x1 km-dev:hasSubjectMap _:node19j16cgf4x23 .

_:node19j16cgf4x23 km-dev:isPartOfMapping _:node19j16cgf4x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature5" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature5" .

km-dev:PredicateObjectMap_380f17c2-bdb2-444f-8799-a3d44b8a461c rr:predicate memex:featureName .

_:node19j16cgf4x24 rr:constant "weaponsMentioned" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x24 .

km-dev:PredicateObjectMap_380f17c2-bdb2-444f-8799-a3d44b8a461c rr:objectMap _:node19j16cgf4x24 .

km-dev:TriplesMap_78eb7f67-2f46-47c5-8bb9-62f20943238a rr:predicateObjectMap km-dev:PredicateObjectMap_380f17c2-bdb2-444f-8799-a3d44b8a461c .

km-dev:PredicateObjectMap_380f17c2-bdb2-444f-8799-a3d44b8a461c a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_380f17c2-bdb2-444f-8799-a3d44b8a461c .

km-dev:PredicateObjectMap_b090eba6-fb50-431a-bb98-6554c88ffd7e rr:predicate memex:featureValue .

_:node19j16cgf4x25 rr:column "[\"posts\",\"Unfold: label\",\"Glue_1\",\"weapons\",\"Values\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x25 .

km-dev:PredicateObjectMap_b090eba6-fb50-431a-bb98-6554c88ffd7e rr:objectMap _:node19j16cgf4x25 .

km-dev:TriplesMap_78eb7f67-2f46-47c5-8bb9-62f20943238a rr:predicateObjectMap km-dev:PredicateObjectMap_b090eba6-fb50-431a-bb98-6554c88ffd7e .

km-dev:PredicateObjectMap_b090eba6-fb50-431a-bb98-6554c88ffd7e a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_b090eba6-fb50-431a-bb98-6554c88ffd7e .

km-dev:PredicateObjectMap_73adff84-380e-4a8a-919c-3018709ecbe7 rr:predicate memex:weaponsMentioned .

_:node19j16cgf4x26 rr:column "[\"posts\",\"Unfold: label\",\"Glue_1\",\"weapons\",\"Values\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x26 .

km-dev:PredicateObjectMap_73adff84-380e-4a8a-919c-3018709ecbe7 rr:objectMap _:node19j16cgf4x26 .

km-dev:TriplesMap_78eb7f67-2f46-47c5-8bb9-62f20943238a rr:predicateObjectMap km-dev:PredicateObjectMap_73adff84-380e-4a8a-919c-3018709ecbe7 .

km-dev:PredicateObjectMap_73adff84-380e-4a8a-919c-3018709ecbe7 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_73adff84-380e-4a8a-919c-3018709ecbe7 .

km-dev:TriplesMap_1f4d8665-b434-4642-83c1-07ee491b052c a rr:TriplesMap .

_:node19j16cgf4x1 km-dev:hasTriplesMap km-dev:TriplesMap_1f4d8665-b434-4642-83c1-07ee491b052c .

km-dev:TriplesMap_1f4d8665-b434-4642-83c1-07ee491b052c km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x27 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasLogicalTable _:node19j16cgf4x27 .

km-dev:TriplesMap_1f4d8665-b434-4642-83c1-07ee491b052c rr:logicalTable _:node19j16cgf4x27 ;
	rr:subjectMap _:node19j16cgf4x28 .

_:node19j16cgf4x1 km-dev:hasSubjectMap _:node19j16cgf4x28 .

_:node19j16cgf4x28 km-dev:isPartOfMapping _:node19j16cgf4x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature6" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature6" .

km-dev:PredicateObjectMap_eace99d3-ad04-43c2-84fa-471814619a2b rr:predicate memex:featureName .

_:node19j16cgf4x29 rr:constant "pricesMentioned" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x29 .

km-dev:PredicateObjectMap_eace99d3-ad04-43c2-84fa-471814619a2b rr:objectMap _:node19j16cgf4x29 .

km-dev:TriplesMap_1f4d8665-b434-4642-83c1-07ee491b052c rr:predicateObjectMap km-dev:PredicateObjectMap_eace99d3-ad04-43c2-84fa-471814619a2b .

km-dev:PredicateObjectMap_eace99d3-ad04-43c2-84fa-471814619a2b a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_eace99d3-ad04-43c2-84fa-471814619a2b .

km-dev:PredicateObjectMap_72c68a03-fd36-415a-a38b-56ef6015032a rr:predicate memex:featureValue .

_:node19j16cgf4x30 rr:column "prices" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x30 .

km-dev:PredicateObjectMap_72c68a03-fd36-415a-a38b-56ef6015032a rr:objectMap _:node19j16cgf4x30 .

km-dev:TriplesMap_1f4d8665-b434-4642-83c1-07ee491b052c rr:predicateObjectMap km-dev:PredicateObjectMap_72c68a03-fd36-415a-a38b-56ef6015032a .

km-dev:PredicateObjectMap_72c68a03-fd36-415a-a38b-56ef6015032a a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_72c68a03-fd36-415a-a38b-56ef6015032a .

km-dev:PredicateObjectMap_eb7f6490-cf35-4c7a-816d-e481e52c7342 rr:predicate memex:pricesMentioned .

_:node19j16cgf4x31 rr:column "prices" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x31 .

km-dev:PredicateObjectMap_eb7f6490-cf35-4c7a-816d-e481e52c7342 rr:objectMap _:node19j16cgf4x31 .

km-dev:TriplesMap_1f4d8665-b434-4642-83c1-07ee491b052c rr:predicateObjectMap km-dev:PredicateObjectMap_eb7f6490-cf35-4c7a-816d-e481e52c7342 .

km-dev:PredicateObjectMap_eb7f6490-cf35-4c7a-816d-e481e52c7342 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_eb7f6490-cf35-4c7a-816d-e481e52c7342 .

km-dev:TriplesMap_59177e5e-747a-4de0-b554-dff9678f1393 a rr:TriplesMap .

_:node19j16cgf4x1 km-dev:hasTriplesMap km-dev:TriplesMap_59177e5e-747a-4de0-b554-dff9678f1393 .

km-dev:TriplesMap_59177e5e-747a-4de0-b554-dff9678f1393 km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x32 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasLogicalTable _:node19j16cgf4x32 .

km-dev:TriplesMap_59177e5e-747a-4de0-b554-dff9678f1393 rr:logicalTable _:node19j16cgf4x32 ;
	rr:subjectMap _:node19j16cgf4x33 .

_:node19j16cgf4x1 km-dev:hasSubjectMap _:node19j16cgf4x33 .

_:node19j16cgf4x33 km-dev:isPartOfMapping _:node19j16cgf4x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/FeatureCollection1" ;
	rr:class memex:FeatureCollection ;
	rr:template "{[\"posts\",\"fc_uri\"]}" .

km-dev:PredicateObjectMap_c407d9a1-67b2-4d34-bb6b-7acf1b20e3b2 rr:predicate memex:enrollment_date_feature .

km-dev:RefObjectMap_dcee6988-d1ef-4dcc-9df5-e1aac1aafcba a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_fc407542-e99d-4241-8eae-f06cedcaefc7 ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap km-dev:RefObjectMap_dcee6988-d1ef-4dcc-9df5-e1aac1aafcba .

km-dev:PredicateObjectMap_c407d9a1-67b2-4d34-bb6b-7acf1b20e3b2 rr:objectMap km-dev:RefObjectMap_dcee6988-d1ef-4dcc-9df5-e1aac1aafcba .

km-dev:TriplesMap_59177e5e-747a-4de0-b554-dff9678f1393 rr:predicateObjectMap km-dev:PredicateObjectMap_c407d9a1-67b2-4d34-bb6b-7acf1b20e3b2 .

km-dev:PredicateObjectMap_c407d9a1-67b2-4d34-bb6b-7acf1b20e3b2 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_c407d9a1-67b2-4d34-bb6b-7acf1b20e3b2 .

km-dev:PredicateObjectMap_0d01e4c1-617f-48ad-9d26-85072c945a88 rr:predicate memex:person_postCount_feature .

km-dev:RefObjectMap_589095ef-8ba3-4dc5-a25f-b60622bf3a3c a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_bd04a7de-93d9-4fad-9a09-bf282883043a ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap km-dev:RefObjectMap_589095ef-8ba3-4dc5-a25f-b60622bf3a3c .

km-dev:PredicateObjectMap_0d01e4c1-617f-48ad-9d26-85072c945a88 rr:objectMap km-dev:RefObjectMap_589095ef-8ba3-4dc5-a25f-b60622bf3a3c .

km-dev:TriplesMap_59177e5e-747a-4de0-b554-dff9678f1393 rr:predicateObjectMap km-dev:PredicateObjectMap_0d01e4c1-617f-48ad-9d26-85072c945a88 .

km-dev:PredicateObjectMap_0d01e4c1-617f-48ad-9d26-85072c945a88 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_0d01e4c1-617f-48ad-9d26-85072c945a88 .

km-dev:PredicateObjectMap_294833b0-b575-4973-a0b3-dba116d761e3 rr:predicate memex:person_username_feature .

km-dev:RefObjectMap_5372a6b3-dfbc-443d-83ad-0ebd7c94af60 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_15c9e44f-724e-4fb0-8929-b3d7c8a63b1f ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap km-dev:RefObjectMap_5372a6b3-dfbc-443d-83ad-0ebd7c94af60 .

km-dev:PredicateObjectMap_294833b0-b575-4973-a0b3-dba116d761e3 rr:objectMap km-dev:RefObjectMap_5372a6b3-dfbc-443d-83ad-0ebd7c94af60 .

km-dev:TriplesMap_59177e5e-747a-4de0-b554-dff9678f1393 rr:predicateObjectMap km-dev:PredicateObjectMap_294833b0-b575-4973-a0b3-dba116d761e3 .

km-dev:PredicateObjectMap_294833b0-b575-4973-a0b3-dba116d761e3 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_294833b0-b575-4973-a0b3-dba116d761e3 .

km-dev:PredicateObjectMap_10fa9443-eaec-41f4-8dac-a50e4e4b0d78 rr:predicate memex:place_postalAddress_feature .

km-dev:RefObjectMap_7ea05d8d-3ff6-4b02-83a5-43e45a1c04db a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_2e259e7d-00c6-47a9-89e7-206506d513c5 ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap km-dev:RefObjectMap_7ea05d8d-3ff6-4b02-83a5-43e45a1c04db .

km-dev:PredicateObjectMap_10fa9443-eaec-41f4-8dac-a50e4e4b0d78 rr:objectMap km-dev:RefObjectMap_7ea05d8d-3ff6-4b02-83a5-43e45a1c04db .

km-dev:TriplesMap_59177e5e-747a-4de0-b554-dff9678f1393 rr:predicateObjectMap km-dev:PredicateObjectMap_10fa9443-eaec-41f4-8dac-a50e4e4b0d78 .

km-dev:PredicateObjectMap_10fa9443-eaec-41f4-8dac-a50e4e4b0d78 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_10fa9443-eaec-41f4-8dac-a50e4e4b0d78 .

km-dev:PredicateObjectMap_58ff6fc6-6b03-45a0-a1ed-a991efaa8218 rr:predicate memex:pricesMentioned_feature .

km-dev:RefObjectMap_7588dbe6-a1de-4e57-b2ed-f1013513154b a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_1f4d8665-b434-4642-83c1-07ee491b052c ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap km-dev:RefObjectMap_7588dbe6-a1de-4e57-b2ed-f1013513154b .

km-dev:PredicateObjectMap_58ff6fc6-6b03-45a0-a1ed-a991efaa8218 rr:objectMap km-dev:RefObjectMap_7588dbe6-a1de-4e57-b2ed-f1013513154b .

km-dev:TriplesMap_59177e5e-747a-4de0-b554-dff9678f1393 rr:predicateObjectMap km-dev:PredicateObjectMap_58ff6fc6-6b03-45a0-a1ed-a991efaa8218 .

km-dev:PredicateObjectMap_58ff6fc6-6b03-45a0-a1ed-a991efaa8218 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_58ff6fc6-6b03-45a0-a1ed-a991efaa8218 .

km-dev:PredicateObjectMap_86726ed7-8f2b-4106-b666-3b482d9e5b11 rr:predicate memex:weaponsMentioned_feature .

km-dev:RefObjectMap_7f9ac74f-fa6a-42b0-830e-01a71c539d25 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_78eb7f67-2f46-47c5-8bb9-62f20943238a ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap km-dev:RefObjectMap_7f9ac74f-fa6a-42b0-830e-01a71c539d25 .

km-dev:PredicateObjectMap_86726ed7-8f2b-4106-b666-3b482d9e5b11 rr:objectMap km-dev:RefObjectMap_7f9ac74f-fa6a-42b0-830e-01a71c539d25 .

km-dev:TriplesMap_59177e5e-747a-4de0-b554-dff9678f1393 rr:predicateObjectMap km-dev:PredicateObjectMap_86726ed7-8f2b-4106-b666-3b482d9e5b11 .

km-dev:PredicateObjectMap_86726ed7-8f2b-4106-b666-3b482d9e5b11 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_86726ed7-8f2b-4106-b666-3b482d9e5b11 .

km-dev:TriplesMap_f01a99e8-1976-4969-bba3-8857bf44c49b a rr:TriplesMap .

_:node19j16cgf4x1 km-dev:hasTriplesMap km-dev:TriplesMap_f01a99e8-1976-4969-bba3-8857bf44c49b .

km-dev:TriplesMap_f01a99e8-1976-4969-bba3-8857bf44c49b km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x34 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasLogicalTable _:node19j16cgf4x34 .

km-dev:TriplesMap_f01a99e8-1976-4969-bba3-8857bf44c49b rr:logicalTable _:node19j16cgf4x34 ;
	rr:subjectMap _:node19j16cgf4x35 .

_:node19j16cgf4x1 km-dev:hasSubjectMap _:node19j16cgf4x35 .

_:node19j16cgf4x35 km-dev:isPartOfMapping _:node19j16cgf4x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Identifier1" ;
	rr:class memex:Identifier ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Identifier1" .

km-dev:PredicateObjectMap_d1f7112d-ae9c-4729-9f0b-12cce31bc59a rr:predicate memex:hasType .

_:node19j16cgf4x36 rr:constant <http://dig.isi.edu/data/thesauri/identifiertype/postid> ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x36 .

km-dev:PredicateObjectMap_d1f7112d-ae9c-4729-9f0b-12cce31bc59a rr:objectMap _:node19j16cgf4x36 .

km-dev:TriplesMap_f01a99e8-1976-4969-bba3-8857bf44c49b rr:predicateObjectMap km-dev:PredicateObjectMap_d1f7112d-ae9c-4729-9f0b-12cce31bc59a .

km-dev:PredicateObjectMap_d1f7112d-ae9c-4729-9f0b-12cce31bc59a a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_d1f7112d-ae9c-4729-9f0b-12cce31bc59a .

km-dev:PredicateObjectMap_a2654488-2739-46b6-992c-de542a280b56 rr:predicate rdfs:label .

_:node19j16cgf4x37 rr:column "[\"posts\",\"post_id\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x37 .

km-dev:PredicateObjectMap_a2654488-2739-46b6-992c-de542a280b56 rr:objectMap _:node19j16cgf4x37 .

km-dev:TriplesMap_f01a99e8-1976-4969-bba3-8857bf44c49b rr:predicateObjectMap km-dev:PredicateObjectMap_a2654488-2739-46b6-992c-de542a280b56 .

km-dev:PredicateObjectMap_a2654488-2739-46b6-992c-de542a280b56 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_a2654488-2739-46b6-992c-de542a280b56 .

km-dev:TriplesMap_61ec8835-e5db-4bf4-9334-a47e9d5af575 a rr:TriplesMap .

_:node19j16cgf4x1 km-dev:hasTriplesMap km-dev:TriplesMap_61ec8835-e5db-4bf4-9334-a47e9d5af575 .

km-dev:TriplesMap_61ec8835-e5db-4bf4-9334-a47e9d5af575 km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x38 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasLogicalTable _:node19j16cgf4x38 .

km-dev:TriplesMap_61ec8835-e5db-4bf4-9334-a47e9d5af575 rr:logicalTable _:node19j16cgf4x38 ;
	rr:subjectMap _:node19j16cgf4x39 .

_:node19j16cgf4x1 km-dev:hasSubjectMap _:node19j16cgf4x39 .

_:node19j16cgf4x39 km-dev:isPartOfMapping _:node19j16cgf4x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Identifier2" ;
	rr:class memex:Identifier ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Identifier2" .

km-dev:PredicateObjectMap_22e2545e-8013-4e53-b964-b5ed144203e1 rr:predicate memex:hasType .

_:node19j16cgf4x40 rr:constant <http://dig.isi.edu/data/thesauri/identifiertype/postid> ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x40 .

km-dev:PredicateObjectMap_22e2545e-8013-4e53-b964-b5ed144203e1 rr:objectMap _:node19j16cgf4x40 .

km-dev:TriplesMap_61ec8835-e5db-4bf4-9334-a47e9d5af575 rr:predicateObjectMap km-dev:PredicateObjectMap_22e2545e-8013-4e53-b964-b5ed144203e1 .

km-dev:PredicateObjectMap_22e2545e-8013-4e53-b964-b5ed144203e1 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_22e2545e-8013-4e53-b964-b5ed144203e1 .

km-dev:PredicateObjectMap_5cb56056-f2fc-4e2b-a26a-39c21de90652 rr:predicate rdfs:label .

_:node19j16cgf4x41 rr:column "topic_id" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x41 .

km-dev:PredicateObjectMap_5cb56056-f2fc-4e2b-a26a-39c21de90652 rr:objectMap _:node19j16cgf4x41 .

km-dev:TriplesMap_61ec8835-e5db-4bf4-9334-a47e9d5af575 rr:predicateObjectMap km-dev:PredicateObjectMap_5cb56056-f2fc-4e2b-a26a-39c21de90652 .

km-dev:PredicateObjectMap_5cb56056-f2fc-4e2b-a26a-39c21de90652 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_5cb56056-f2fc-4e2b-a26a-39c21de90652 .

km-dev:TriplesMap_d4afaf74-c717-47ba-aa65-176e68e6a9f3 a rr:TriplesMap .

_:node19j16cgf4x1 km-dev:hasTriplesMap km-dev:TriplesMap_d4afaf74-c717-47ba-aa65-176e68e6a9f3 .

km-dev:TriplesMap_d4afaf74-c717-47ba-aa65-176e68e6a9f3 km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x42 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasLogicalTable _:node19j16cgf4x42 .

km-dev:TriplesMap_d4afaf74-c717-47ba-aa65-176e68e6a9f3 rr:logicalTable _:node19j16cgf4x42 ;
	rr:subjectMap _:node19j16cgf4x43 .

_:node19j16cgf4x1 km-dev:hasSubjectMap _:node19j16cgf4x43 .

_:node19j16cgf4x43 km-dev:isPartOfMapping _:node19j16cgf4x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/Article1" ;
	rr:class schema:Article ;
	rr:template "{[\"posts\",\"article_uri\"]}" ;
	a km-dev:steinerTreeRootNode .

km-dev:PredicateObjectMap_a8e99384-1d9b-4041-a809-603d82611a52 rr:predicate memex:hasBodyPart .

km-dev:RefObjectMap_451e1557-fe66-45bd-a49f-6f09271535f0 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_005137c3-83f5-4692-ab94-d5e3ffd50b76 ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap km-dev:RefObjectMap_451e1557-fe66-45bd-a49f-6f09271535f0 .

km-dev:PredicateObjectMap_a8e99384-1d9b-4041-a809-603d82611a52 rr:objectMap km-dev:RefObjectMap_451e1557-fe66-45bd-a49f-6f09271535f0 .

km-dev:TriplesMap_d4afaf74-c717-47ba-aa65-176e68e6a9f3 rr:predicateObjectMap km-dev:PredicateObjectMap_a8e99384-1d9b-4041-a809-603d82611a52 .

km-dev:PredicateObjectMap_a8e99384-1d9b-4041-a809-603d82611a52 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_a8e99384-1d9b-4041-a809-603d82611a52 .

km-dev:PredicateObjectMap_797caeee-f5e4-4813-8767-7f7a2fdb5b5f rr:predicate memex:hasFeatureCollection .

km-dev:RefObjectMap_b49280ba-cd5c-4ec8-9e32-1e01315bf3e6 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_59177e5e-747a-4de0-b554-dff9678f1393 ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap km-dev:RefObjectMap_b49280ba-cd5c-4ec8-9e32-1e01315bf3e6 .

km-dev:PredicateObjectMap_797caeee-f5e4-4813-8767-7f7a2fdb5b5f rr:objectMap km-dev:RefObjectMap_b49280ba-cd5c-4ec8-9e32-1e01315bf3e6 .

km-dev:TriplesMap_d4afaf74-c717-47ba-aa65-176e68e6a9f3 rr:predicateObjectMap km-dev:PredicateObjectMap_797caeee-f5e4-4813-8767-7f7a2fdb5b5f .

km-dev:PredicateObjectMap_797caeee-f5e4-4813-8767-7f7a2fdb5b5f a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_797caeee-f5e4-4813-8767-7f7a2fdb5b5f .

km-dev:PredicateObjectMap_4da42b2d-9026-4844-b531-cf9ca85265cc rr:predicate memex:hasSignaturePart .

km-dev:RefObjectMap_f9bada35-e813-4432-8999-f96a1c42deca a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_efb7e36f-8ab1-42f7-b297-d08f2e631365 ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap km-dev:RefObjectMap_f9bada35-e813-4432-8999-f96a1c42deca .

km-dev:PredicateObjectMap_4da42b2d-9026-4844-b531-cf9ca85265cc rr:objectMap km-dev:RefObjectMap_f9bada35-e813-4432-8999-f96a1c42deca .

km-dev:TriplesMap_d4afaf74-c717-47ba-aa65-176e68e6a9f3 rr:predicateObjectMap km-dev:PredicateObjectMap_4da42b2d-9026-4844-b531-cf9ca85265cc .

km-dev:PredicateObjectMap_4da42b2d-9026-4844-b531-cf9ca85265cc a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_4da42b2d-9026-4844-b531-cf9ca85265cc .

km-dev:PredicateObjectMap_af1c7c11-3a49-466e-ab65-e9880333c6d6 rr:predicate memex:hasTitlePart .

km-dev:RefObjectMap_53c972e7-bc36-439e-9e79-6c1256419667 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_73860a67-87d7-4e9f-80a9-701e27c9166f ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap km-dev:RefObjectMap_53c972e7-bc36-439e-9e79-6c1256419667 .

km-dev:PredicateObjectMap_af1c7c11-3a49-466e-ab65-e9880333c6d6 rr:objectMap km-dev:RefObjectMap_53c972e7-bc36-439e-9e79-6c1256419667 .

km-dev:TriplesMap_d4afaf74-c717-47ba-aa65-176e68e6a9f3 rr:predicateObjectMap km-dev:PredicateObjectMap_af1c7c11-3a49-466e-ab65-e9880333c6d6 .

km-dev:PredicateObjectMap_af1c7c11-3a49-466e-ab65-e9880333c6d6 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_af1c7c11-3a49-466e-ab65-e9880333c6d6 .

km-dev:PredicateObjectMap_5de96233-ff39-40bf-bf42-44ad93ebcd80 rr:predicate schema:dateCreated .

_:node19j16cgf4x44 rr:column "[\"posts\",\"dateCreated\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x44 .

km-dev:PredicateObjectMap_5de96233-ff39-40bf-bf42-44ad93ebcd80 rr:objectMap _:node19j16cgf4x44 .

km-dev:TriplesMap_d4afaf74-c717-47ba-aa65-176e68e6a9f3 rr:predicateObjectMap km-dev:PredicateObjectMap_5de96233-ff39-40bf-bf42-44ad93ebcd80 .

km-dev:PredicateObjectMap_5de96233-ff39-40bf-bf42-44ad93ebcd80 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_5de96233-ff39-40bf-bf42-44ad93ebcd80 .

km-dev:PredicateObjectMap_9a5ac1c7-52b9-4532-911f-cf09ef6124c3 rr:predicate schema:isPartOf .

km-dev:RefObjectMap_bc705b8a-8a64-49c1-8657-12cf8f42520a a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_a376de09-9ac3-4e86-b5c2-5de9e0481739 ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap km-dev:RefObjectMap_bc705b8a-8a64-49c1-8657-12cf8f42520a .

km-dev:PredicateObjectMap_9a5ac1c7-52b9-4532-911f-cf09ef6124c3 rr:objectMap km-dev:RefObjectMap_bc705b8a-8a64-49c1-8657-12cf8f42520a .

km-dev:TriplesMap_d4afaf74-c717-47ba-aa65-176e68e6a9f3 rr:predicateObjectMap km-dev:PredicateObjectMap_9a5ac1c7-52b9-4532-911f-cf09ef6124c3 .

km-dev:PredicateObjectMap_9a5ac1c7-52b9-4532-911f-cf09ef6124c3 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_9a5ac1c7-52b9-4532-911f-cf09ef6124c3 .

km-dev:PredicateObjectMap_8528974f-7d30-4b8e-bb66-c747fd926bb8 rr:predicate memex:hasIdentifier .

km-dev:RefObjectMap_81e92979-168d-4b7d-a5f6-83732ab221c8 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_f01a99e8-1976-4969-bba3-8857bf44c49b ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap km-dev:RefObjectMap_81e92979-168d-4b7d-a5f6-83732ab221c8 .

km-dev:PredicateObjectMap_8528974f-7d30-4b8e-bb66-c747fd926bb8 rr:objectMap km-dev:RefObjectMap_81e92979-168d-4b7d-a5f6-83732ab221c8 .

km-dev:TriplesMap_d4afaf74-c717-47ba-aa65-176e68e6a9f3 rr:predicateObjectMap km-dev:PredicateObjectMap_8528974f-7d30-4b8e-bb66-c747fd926bb8 .

km-dev:PredicateObjectMap_8528974f-7d30-4b8e-bb66-c747fd926bb8 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_8528974f-7d30-4b8e-bb66-c747fd926bb8 .

km-dev:TriplesMap_005137c3-83f5-4692-ab94-d5e3ffd50b76 a rr:TriplesMap .

_:node19j16cgf4x1 km-dev:hasTriplesMap km-dev:TriplesMap_005137c3-83f5-4692-ab94-d5e3ffd50b76 .

km-dev:TriplesMap_005137c3-83f5-4692-ab94-d5e3ffd50b76 km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x45 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasLogicalTable _:node19j16cgf4x45 .

km-dev:TriplesMap_005137c3-83f5-4692-ab94-d5e3ffd50b76 rr:logicalTable _:node19j16cgf4x45 ;
	rr:subjectMap _:node19j16cgf4x46 .

_:node19j16cgf4x1 km-dev:hasSubjectMap _:node19j16cgf4x46 .

_:node19j16cgf4x46 km-dev:isPartOfMapping _:node19j16cgf4x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPageElement2" ;
	rr:class schema:WebPageElement ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:WebPageElement2" .

km-dev:PredicateObjectMap_2a34030b-de16-4de6-8a3b-ee9eb813c91d rr:predicate schema:text .

_:node19j16cgf4x47 rr:column "[\"posts\",\"content\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x47 .

km-dev:PredicateObjectMap_2a34030b-de16-4de6-8a3b-ee9eb813c91d rr:objectMap _:node19j16cgf4x47 .

km-dev:TriplesMap_005137c3-83f5-4692-ab94-d5e3ffd50b76 rr:predicateObjectMap km-dev:PredicateObjectMap_2a34030b-de16-4de6-8a3b-ee9eb813c91d .

km-dev:PredicateObjectMap_2a34030b-de16-4de6-8a3b-ee9eb813c91d a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_2a34030b-de16-4de6-8a3b-ee9eb813c91d .

km-dev:TriplesMap_efb7e36f-8ab1-42f7-b297-d08f2e631365 a rr:TriplesMap .

_:node19j16cgf4x1 km-dev:hasTriplesMap km-dev:TriplesMap_efb7e36f-8ab1-42f7-b297-d08f2e631365 .

km-dev:TriplesMap_efb7e36f-8ab1-42f7-b297-d08f2e631365 km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x48 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasLogicalTable _:node19j16cgf4x48 .

km-dev:TriplesMap_efb7e36f-8ab1-42f7-b297-d08f2e631365 rr:logicalTable _:node19j16cgf4x48 ;
	rr:subjectMap _:node19j16cgf4x49 .

_:node19j16cgf4x1 km-dev:hasSubjectMap _:node19j16cgf4x49 .

_:node19j16cgf4x49 km-dev:isPartOfMapping _:node19j16cgf4x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPageElement3" ;
	rr:class schema:WebPageElement ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:WebPageElement3" .

km-dev:PredicateObjectMap_d21a2769-7c07-4284-8020-c1bec9857bd4 rr:predicate schema:text .

_:node19j16cgf4x50 rr:column "[\"posts\",\"signature_clean\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x50 .

km-dev:PredicateObjectMap_d21a2769-7c07-4284-8020-c1bec9857bd4 rr:objectMap _:node19j16cgf4x50 .

km-dev:TriplesMap_efb7e36f-8ab1-42f7-b297-d08f2e631365 rr:predicateObjectMap km-dev:PredicateObjectMap_d21a2769-7c07-4284-8020-c1bec9857bd4 .

km-dev:PredicateObjectMap_d21a2769-7c07-4284-8020-c1bec9857bd4 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_d21a2769-7c07-4284-8020-c1bec9857bd4 .

km-dev:TriplesMap_73860a67-87d7-4e9f-80a9-701e27c9166f a rr:TriplesMap .

_:node19j16cgf4x1 km-dev:hasTriplesMap km-dev:TriplesMap_73860a67-87d7-4e9f-80a9-701e27c9166f .

km-dev:TriplesMap_73860a67-87d7-4e9f-80a9-701e27c9166f km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x51 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasLogicalTable _:node19j16cgf4x51 .

km-dev:TriplesMap_73860a67-87d7-4e9f-80a9-701e27c9166f rr:logicalTable _:node19j16cgf4x51 ;
	rr:subjectMap _:node19j16cgf4x52 .

_:node19j16cgf4x1 km-dev:hasSubjectMap _:node19j16cgf4x52 .

_:node19j16cgf4x52 km-dev:isPartOfMapping _:node19j16cgf4x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPageElement1" ;
	rr:class schema:WebPageElement ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:WebPageElement1" .

km-dev:PredicateObjectMap_0e2246cf-fe2e-4a39-ab96-c283bc9061ba rr:predicate schema:text .

_:node19j16cgf4x53 rr:column "[\"posts\",\"title\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x53 .

km-dev:PredicateObjectMap_0e2246cf-fe2e-4a39-ab96-c283bc9061ba rr:objectMap _:node19j16cgf4x53 .

km-dev:TriplesMap_73860a67-87d7-4e9f-80a9-701e27c9166f rr:predicateObjectMap km-dev:PredicateObjectMap_0e2246cf-fe2e-4a39-ab96-c283bc9061ba .

km-dev:PredicateObjectMap_0e2246cf-fe2e-4a39-ab96-c283bc9061ba a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_0e2246cf-fe2e-4a39-ab96-c283bc9061ba .

km-dev:TriplesMap_a376de09-9ac3-4e86-b5c2-5de9e0481739 a rr:TriplesMap .

_:node19j16cgf4x1 km-dev:hasTriplesMap km-dev:TriplesMap_a376de09-9ac3-4e86-b5c2-5de9e0481739 .

km-dev:TriplesMap_a376de09-9ac3-4e86-b5c2-5de9e0481739 km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x54 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasLogicalTable _:node19j16cgf4x54 .

km-dev:TriplesMap_a376de09-9ac3-4e86-b5c2-5de9e0481739 rr:logicalTable _:node19j16cgf4x54 ;
	rr:subjectMap _:node19j16cgf4x55 .

_:node19j16cgf4x1 km-dev:hasSubjectMap _:node19j16cgf4x55 .

_:node19j16cgf4x55 km-dev:isPartOfMapping _:node19j16cgf4x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/Article2" ;
	rr:class schema:Article ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:Article2" .

km-dev:PredicateObjectMap_69aa7d7f-a95b-4c70-90e6-5ad5a89d79a8 rr:predicate memex:hasIdentifier .

km-dev:RefObjectMap_a4e405b9-a870-4643-a7a8-6b3f7c9b0718 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_61ec8835-e5db-4bf4-9334-a47e9d5af575 ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap km-dev:RefObjectMap_a4e405b9-a870-4643-a7a8-6b3f7c9b0718 .

km-dev:PredicateObjectMap_69aa7d7f-a95b-4c70-90e6-5ad5a89d79a8 rr:objectMap km-dev:RefObjectMap_a4e405b9-a870-4643-a7a8-6b3f7c9b0718 .

km-dev:TriplesMap_a376de09-9ac3-4e86-b5c2-5de9e0481739 rr:predicateObjectMap km-dev:PredicateObjectMap_69aa7d7f-a95b-4c70-90e6-5ad5a89d79a8 .

km-dev:PredicateObjectMap_69aa7d7f-a95b-4c70-90e6-5ad5a89d79a8 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_69aa7d7f-a95b-4c70-90e6-5ad5a89d79a8 .

km-dev:PredicateObjectMap_41f3c1c6-7099-4ade-9c1f-dc94f2004974 rr:predicate memex:hasTitlePart .

km-dev:RefObjectMap_0f4f006d-8587-4176-98f0-38696ad06cd8 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_a5f43a21-c12b-4ae8-9ea6-62c7d8a8b724 ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap km-dev:RefObjectMap_0f4f006d-8587-4176-98f0-38696ad06cd8 .

km-dev:PredicateObjectMap_41f3c1c6-7099-4ade-9c1f-dc94f2004974 rr:objectMap km-dev:RefObjectMap_0f4f006d-8587-4176-98f0-38696ad06cd8 .

km-dev:TriplesMap_a376de09-9ac3-4e86-b5c2-5de9e0481739 rr:predicateObjectMap km-dev:PredicateObjectMap_41f3c1c6-7099-4ade-9c1f-dc94f2004974 .

km-dev:PredicateObjectMap_41f3c1c6-7099-4ade-9c1f-dc94f2004974 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_41f3c1c6-7099-4ade-9c1f-dc94f2004974 .

km-dev:PredicateObjectMap_77964555-7d4b-4064-a339-d6eb86006361 rr:predicate schema:url .

_:node19j16cgf4x56 rr:column "url" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x56 .

km-dev:PredicateObjectMap_77964555-7d4b-4064-a339-d6eb86006361 rr:objectMap _:node19j16cgf4x56 .

km-dev:TriplesMap_a376de09-9ac3-4e86-b5c2-5de9e0481739 rr:predicateObjectMap km-dev:PredicateObjectMap_77964555-7d4b-4064-a339-d6eb86006361 .

km-dev:PredicateObjectMap_77964555-7d4b-4064-a339-d6eb86006361 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_77964555-7d4b-4064-a339-d6eb86006361 .

km-dev:TriplesMap_a5f43a21-c12b-4ae8-9ea6-62c7d8a8b724 a rr:TriplesMap .

_:node19j16cgf4x1 km-dev:hasTriplesMap km-dev:TriplesMap_a5f43a21-c12b-4ae8-9ea6-62c7d8a8b724 .

km-dev:TriplesMap_a5f43a21-c12b-4ae8-9ea6-62c7d8a8b724 km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x57 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasLogicalTable _:node19j16cgf4x57 .

km-dev:TriplesMap_a5f43a21-c12b-4ae8-9ea6-62c7d8a8b724 rr:logicalTable _:node19j16cgf4x57 ;
	rr:subjectMap _:node19j16cgf4x58 .

_:node19j16cgf4x1 km-dev:hasSubjectMap _:node19j16cgf4x58 .

_:node19j16cgf4x58 km-dev:isPartOfMapping _:node19j16cgf4x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPageElement4" ;
	rr:class schema:WebPageElement ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:WebPageElement4" .

km-dev:PredicateObjectMap_935428ec-217b-4558-8db7-e213bfbcd2fb rr:predicate schema:text .

_:node19j16cgf4x59 rr:column "topic_title" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasObjectMap _:node19j16cgf4x59 .

km-dev:PredicateObjectMap_935428ec-217b-4558-8db7-e213bfbcd2fb rr:objectMap _:node19j16cgf4x59 .

km-dev:TriplesMap_a5f43a21-c12b-4ae8-9ea6-62c7d8a8b724 rr:predicateObjectMap km-dev:PredicateObjectMap_935428ec-217b-4558-8db7-e213bfbcd2fb .

km-dev:PredicateObjectMap_935428ec-217b-4558-8db7-e213bfbcd2fb a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j16cgf4x1 .

_:node19j16cgf4x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_935428ec-217b-4558-8db7-e213bfbcd2fb .
