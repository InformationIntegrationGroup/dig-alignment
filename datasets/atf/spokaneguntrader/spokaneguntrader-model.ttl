@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix dgeo: <http://dig.isi.edu/ontology/dgeo/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix schemax: <http://topbraid.org/schemax/> .
@prefix crm: <http://www.cidoc-crm.org/rdfs/cidoc_crm_v6.0-draft-2015January.rdfs> .
@prefix schema: <http://schema.org/> .
@prefix geo: <http://www.opengis.net/ont/geosparql#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix memex: <http://memexproxy.com/ontology/> .
@prefix ht: <http://memexproxy.com/ontology/human-trafficking/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix km-dev: <http://isi.edu/integration/karma/dev#> .

_:node19j1gt7phx1 a km-dev:R2RMLMapping ;
	km-dev:sourceName "spokaneguntrader-sample.json" ;
	km-dev:modelPublicationTime "1429201657650"^^xsd:long ;
	km-dev:modelVersion "1.7" ;
	km-dev:hasInputColumns "[[{\"columnName\":\"posts\"},{\"columnName\":\"post_id\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"signature\"}],[{\"columnName\":\"topic_title\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"user_attributes\"},{\"columnName\":\"value\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"title\"}],[{\"columnName\":\"topic_id\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"user_attributes\"},{\"columnName\":\"label\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"weapons\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"url\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"username\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"content\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"date_posted\"}]]" ;
	km-dev:hasOutputColumns "[[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"posts:\"},{\"columnName\":\"clean_post_count\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"post_id\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"title\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Column_1\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"content\"}],[{\"columnName\":\"prices2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"joined:\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"joined:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"clean_address\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"username\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"next firearm:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"signature_clean\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Column_1\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"sgt supporter:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"sgt supporter:\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"provider_name\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"provider_name2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"posts:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"state\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"location:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"location:\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"weapons\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"next firearm:\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"dateCreated\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"posts:\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"joined:\"},{\"columnName\":\"joined_iso2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"favorite firearm:\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"joined_weapons\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"favorite firearm:\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"address_uri\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"joined:\"},{\"columnName\":\"joined_iso\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"clean_address2\"}],[{\"columnName\":\"prices\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"username2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"fc_uri\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"Values_1\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"country\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"url\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"posts:\"},{\"columnName\":\"clean_post_count2\"}],[{\"columnName\":\"topic_title\"}],[{\"columnName\":\"topic_id\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"Glue_1\"},{\"columnName\":\"weapons\"},{\"columnName\":\"weapons2\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"Unfold: label\"},{\"columnName\":\"city, state:\"},{\"columnName\":\"city\"}],[{\"columnName\":\"posts\"},{\"columnName\":\"article_uri\"}]]" ;
	km-dev:hasModelLabel "spokaneguntrader" ;
	km-dev:hasBaseURI "http://dig.isi.edu/atf/data/page/" ;
	km-dev:hasWorksheetHistory """[
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"date_posted\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"dateCreated\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_date_created(getValue(\\\"date_posted\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"date_posted\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"dateCreated\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"signature\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"signature_clean\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return signature_clean(getValue(\\\"signature\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"post_id\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"article_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_article_uri(getValue(\\\"url\\\"), getValue(\\\"post_id\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_id\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"article_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"username\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"username2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"username\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"article_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/Article\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/Article1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:Article1 (add)\",
                    \"DomainId\": \"http://schema.org/Article1\",
                    \"DomainUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"article_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"article_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"dateCreated\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/dateCreated\",
                    \"DomainLabel\": \"schema:Article1\",
                    \"DomainId\": \"http://schema.org/Article1\",
                    \"DomainUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"dateCreated\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"dateCreated\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"title\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/WebPageElement\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/WebPageElement1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:WebPageElement1 (add)\",
                    \"DomainId\": \"http://schema.org/WebPageElement1 (add)\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/exampleOfWork\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/Article\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasBodyPart\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\",
                    \"edgeSourceUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://memexproxy.com/ontology/hasBodyPart\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/exampleOfWork\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/exampleOfWork\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/exampleOfWork\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/exampleOfWork\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/WebPageElement1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/Article\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasTitlePart\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://memexproxy.com/ontology/hasTitlePart\",
                    \"edgeTargetId\": \"http://schema.org/Article1\",
                    \"edgeSourceId\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPageElement\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasTitlePart\",
                    \"edgeTargetId\": \"http://schema.org/WebPageElement1\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"content\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/WebPageElement\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/WebPageElement2 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:WebPageElement2 (add)\",
                    \"DomainId\": \"http://schema.org/WebPageElement2\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"signature_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/WebPageElement\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/WebPageElement3 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:WebPageElement3 (add)\",
                    \"DomainId\": \"http://schema.org/WebPageElement3\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPageElement\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasSignaturePart\",
                    \"edgeTargetId\": \"http://schema.org/WebPageElement3\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPageElement\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasBodyPart\",
                    \"edgeTargetId\": \"http://schema.org/WebPageElement2\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"username\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature1 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"username2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/person_username\",
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"username2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"username2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"fc_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_fc_uri(getValue(\\\"article_uri\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"article_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"fc_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"fc_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/FeatureCollection\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/FeatureCollection1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"memex:FeatureCollection1 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"fc_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"fc_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/FeatureCollection\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasFeatureCollection\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/person_username_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"properties\",
                \"value\": {
                    \"hasServiceProperties\": false,
                    \"hasPrefix\": false,
                    \"graphLabel\": \"\",
                    \"hasBaseURI\": true,
                    \"baseURI\": \"http://dig.isi.edu/atf/data/page/\"
                },
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetWorksheetPropertiesCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"person_username\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"person_username\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"person_username1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"keyhNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"user_attributes\"},
                    {\"columnName\": \"label\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"valuehNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"user_attributes\"},
                    {\"columnName\": \"value\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"notOtherColumn\",
                \"value\": \"true\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"user_attributes\\\"},{\\\"columnName\\\":\\\"value\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"user_attributes\\\"},{\\\"columnName\\\":\\\"label\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"next firearm:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Column_1\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"sgt supporter:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Column_1\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"favorite firearm:\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"favorite firearm:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"sgt supporter:\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"location:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"location:\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"next firearm:\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"UnfoldCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"city\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_get_city(getValue(\\\"Values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"city\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"city\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"state\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_get_state(getValue(\\\"Values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"state\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"content\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/text\",
                    \"DomainLabel\": \"schema:WebPageElement2\",
                    \"DomainId\": \"http://schema.org/WebPageElement2\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"signature_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/text\",
                    \"DomainLabel\": \"schema:WebPageElement3\",
                    \"DomainId\": \"http://schema.org/WebPageElement3\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"title\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/text\",
                    \"DomainLabel\": \"schema:WebPageElement1\",
                    \"DomainId\": \"http://schema.org/WebPageElement1\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"joined:\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"joined_iso\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_joined_date(getValue(\\\"Values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"joined:\"},
                    {\"columnName\": \"joined_iso\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"joined_iso2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"joined_iso\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"joined:\"},
                    {\"columnName\": \"joined_iso\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/enrollment_date\",
                    \"DomainLabel\": \"memex:Feature2 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature2 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"joined:\"},
                    {\"columnName\": \"joined_iso2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature2\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature2\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"joined:\\\"},{\\\"columnName\\\":\\\"joined_iso2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"enrollment_date\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"enrollment_date\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"enrollment_date1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature2\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/enrollment_date_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature2\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"properties\",
                \"value\": {
                    \"hasServiceProperties\": false,
                    \"hasPrefix\": false,
                    \"graphLabel\": \"spokaneguntrader\",
                    \"hasBaseURI\": false
                },
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetWorksheetPropertiesCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"state\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"country\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return \\\"US\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"country\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"country\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"address_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_address_uri(getValue(\\\"city\\\"), getValue(\\\"state\\\"), getValue(\\\"country\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"state\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"city\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"country\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"address_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"country\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_address\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_address(getValue(\\\"city\\\"), getValue(\\\"state\\\"), getValue(\\\"country\\\"), \\\",\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"state\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"city\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"country\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"clean_address\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature3 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature3 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature3\",
                    \"edgeId\": \"http://memexproxy.com/ontology/place_postalAddress_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature3\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"clean_address\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_address2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"clean_address\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"city, state:\"},
                    {\"columnName\": \"clean_address2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/place_postalAddress\",
                    \"DomainLabel\": \"memex:Feature3\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature3\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"city, state:\\\"},{\\\"columnName\\\":\\\"clean_address2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"place_postalAddress\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"place_postalAddress\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"place_postalAddress1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature3\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts:\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_post_count\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_clean_post_count(getValue(\\\"Values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts:\"},
                    {\"columnName\": \"clean_post_count\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_post_count2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"clean_post_count\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts:\"},
                    {\"columnName\": \"clean_post_count\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature4 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"posts:\"},
                    {\"columnName\": \"clean_post_count2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/person_postCount\",
                    \"DomainLabel\": \"memex:Feature4\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"posts:\\\"},{\\\"columnName\\\":\\\"clean_post_count2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/person_postCount_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"person_postCount\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"person_postCount\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"person_postCount1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"next firearm:\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"values\",
                \"value\": [
                    {
                        \"name\": \"checked\",
                        \"value\": [
                            {\"columnName\": \"posts\"},
                            {\"columnName\": \"Unfold: label\"},
                            {\"columnName\": \"next firearm:\"}
                        ],
                        \"type\": \"hNodeId\"
                    },
                    {
                        \"name\": \"checked\",
                        \"value\": [
                            {\"columnName\": \"posts\"},
                            {\"columnName\": \"Unfold: label\"},
                            {\"columnName\": \"favorite firearm:\"}
                        ],
                        \"type\": \"hNodeId\"
                    }
                ],
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"ImplMethod\",
                \"value\": \"Longest\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"Values_1\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"GlueCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"Values_1\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"joined_weapons\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return get_weapons(getValue(\\\"Values\\\"), getValue(\\\"Values_1\\\"), getValue(\\\"topic_title\\\"), getValue(\\\"title\\\"), getValue(\\\"signature_clean\\\"), getValue(\\\"content\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"signature_clean\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"title\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"Values_1\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"Values\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"content\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"joined_weapons\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"joined_weapons\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"delimiter\",
                \"value\": \"|\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColName\",
                \"value\": \"weapons\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newHNodeId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SplitValuesCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"weapons\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/weaponsMentioned\",
                    \"DomainLabel\": \"memex:Feature5 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"weapons\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"weapons2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"Values\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"weapons2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"Unfold: label\"},
                    {\"columnName\": \"Glue_1\"},
                    {\"columnName\": \"weapons\"},
                    {\"columnName\": \"weapons2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature5\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"weapons2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"Unfold: label\\\"},{\\\"columnName\\\":\\\"Glue_1\\\"},{\\\"columnName\\\":\\\"weapons\\\"},{\\\"columnName\\\":\\\"weapons2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/weaponsMentioned_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"weaponsMentioned_feature\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"weaponsMentioned_feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"weaponsMentioned_feature1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"post_id\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://www.w3.org/2000/01/rdf-schema#label\",
                    \"DomainLabel\": \"memex:Identifier1 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Identifier1 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Identifier\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"post_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Identifier1\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasIdentifier\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Identifier1\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"http://dig.isi.edu/data/thesauri/identifiertype/postid\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://dig.isi.edu/data/thesauri/identifiertype/postid1\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasType\",
                    \"edgeTargetId\": \"http://dig.isi.edu/data/thesauri/identifiertype/postid1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Identifier1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Identifier\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"topic_title\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/text\",
                    \"DomainLabel\": \"schema:WebPageElement4 (add)\",
                    \"DomainId\": \"http://schema.org/WebPageElement4\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPageElement4\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasTitlePart\",
                    \"edgeTargetId\": \"http://schema.org/WebPageElement4\",
                    \"edgeSourceId\": \"http://schema.org/Article2 (add)\",
                    \"edgeSourceUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/Article\",
                    \"edgeId\": \"http://schema.org/isPartOf\",
                    \"edgeTargetId\": \"http://schema.org/Article2\",
                    \"edgeSourceId\": \"http://schema.org/Article1\",
                    \"edgeSourceUri\": \"http://schema.org/Article1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"url\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/url\",
                    \"DomainLabel\": \"schema:Article2\",
                    \"DomainId\": \"http://schema.org/Article2\",
                    \"DomainUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"topic_id\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://www.w3.org/2000/01/rdf-schema#label\",
                    \"DomainLabel\": \"memex:Identifier2 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Identifier2 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Identifier\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Identifier2\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasIdentifier\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Identifier2\",
                    \"edgeSourceId\": \"http://schema.org/Article2\",
                    \"edgeSourceUri\": \"http://schema.org/Article\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP8:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://dig.isi.edu/data/thesauri/identifiertype/postid1\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasType\",
                    \"edgeTargetId\": \"http://dig.isi.edu/data/thesauri/identifiertype/postid1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Identifier2\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Identifier\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"url\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"prices\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return get_prices(getValue(\\\"topic_title\\\"), getValue(\\\"title\\\"), getValue(\\\"content\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"url\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return get_prices(getValue(\\\"topic_title\\\"), getValue(\\\"title\\\"), getValue(\\\"content\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"previousCommandId\",
                \"value\": \"C7318\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"targetHNodeId\",
                \"value\": [{\"columnName\": \"prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"topic_title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitEditPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"prices2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"prices\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"prices2\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature6 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://memexproxy.com/ontology/organization_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP5:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/pricesMentioned_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"prices\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/pricesMentioned\",
                    \"DomainLabel\": \"memex:Feature6\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"prices\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"pricesMentioned\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"pricesMentioned\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"pricesMentioned1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"weaponsMentioned\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"nodeId\",
                \"value\": \"weaponsMentioned_feature1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"article_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"provider_name\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_provider_name(getValue(\\\"url\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"article_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"provider_name\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"previousCommandId\",
                \"value\": \"C8469\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"targetHNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"provider_name\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitEditPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"article_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return atf_provider_name(getValue(\\\"url\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"previousCommandId\",
                \"value\": \"C8556\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"targetHNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"provider_name\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitEditPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"provider_name\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"provider_name2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"provider_name\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"provider_name\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature7 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature7 (add)\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"posts\"},
                    {\"columnName\": \"provider_name2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/provider_name\",
                    \"DomainLabel\": \"memex:Feature7\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature7\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"posts\\\"},{\\\"columnName\\\":\\\"provider_name2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"provider_name\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"provider_name\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"provider_name1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature7\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature7\",
                    \"edgeId\": \"http://memexproxy.com/ontology/provider_name_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature7\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    }
]""" .

km-dev:TriplesMap_7f730acf-bfbc-47af-a83e-a4e58ee110e9 a rr:TriplesMap .

_:node19j1gt7phx1 km-dev:hasTriplesMap km-dev:TriplesMap_7f730acf-bfbc-47af-a83e-a4e58ee110e9 .

km-dev:TriplesMap_7f730acf-bfbc-47af-a83e-a4e58ee110e9 km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx2 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasLogicalTable _:node19j1gt7phx2 .

km-dev:TriplesMap_7f730acf-bfbc-47af-a83e-a4e58ee110e9 rr:logicalTable _:node19j1gt7phx2 ;
	rr:subjectMap _:node19j1gt7phx3 .

_:node19j1gt7phx1 km-dev:hasSubjectMap _:node19j1gt7phx3 .

_:node19j1gt7phx3 km-dev:isPartOfMapping _:node19j1gt7phx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature1" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature1" .

km-dev:PredicateObjectMap_6392b136-3421-47cf-a906-66ca4452b591 rr:predicate memex:featureName .

_:node19j1gt7phx4 rr:constant "person_username" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx4 .

km-dev:PredicateObjectMap_6392b136-3421-47cf-a906-66ca4452b591 rr:objectMap _:node19j1gt7phx4 .

km-dev:TriplesMap_7f730acf-bfbc-47af-a83e-a4e58ee110e9 rr:predicateObjectMap km-dev:PredicateObjectMap_6392b136-3421-47cf-a906-66ca4452b591 .

km-dev:PredicateObjectMap_6392b136-3421-47cf-a906-66ca4452b591 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_6392b136-3421-47cf-a906-66ca4452b591 .

km-dev:PredicateObjectMap_3d149232-c2c1-48f5-aad4-2ede19e32502 rr:predicate memex:featureValue .

_:node19j1gt7phx5 rr:column "[\"posts\",\"username\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx5 .

km-dev:PredicateObjectMap_3d149232-c2c1-48f5-aad4-2ede19e32502 rr:objectMap _:node19j1gt7phx5 .

km-dev:TriplesMap_7f730acf-bfbc-47af-a83e-a4e58ee110e9 rr:predicateObjectMap km-dev:PredicateObjectMap_3d149232-c2c1-48f5-aad4-2ede19e32502 .

km-dev:PredicateObjectMap_3d149232-c2c1-48f5-aad4-2ede19e32502 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_3d149232-c2c1-48f5-aad4-2ede19e32502 .

km-dev:PredicateObjectMap_aae3551d-eb19-4f88-815c-0062a13fa159 rr:predicate memex:person_username .

_:node19j1gt7phx6 rr:column "[\"posts\",\"username\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx6 .

km-dev:PredicateObjectMap_aae3551d-eb19-4f88-815c-0062a13fa159 rr:objectMap _:node19j1gt7phx6 .

km-dev:TriplesMap_7f730acf-bfbc-47af-a83e-a4e58ee110e9 rr:predicateObjectMap km-dev:PredicateObjectMap_aae3551d-eb19-4f88-815c-0062a13fa159 .

km-dev:PredicateObjectMap_aae3551d-eb19-4f88-815c-0062a13fa159 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_aae3551d-eb19-4f88-815c-0062a13fa159 .

km-dev:TriplesMap_54f09e62-9361-4526-b6f3-af414a4e8485 a rr:TriplesMap .

_:node19j1gt7phx1 km-dev:hasTriplesMap km-dev:TriplesMap_54f09e62-9361-4526-b6f3-af414a4e8485 .

km-dev:TriplesMap_54f09e62-9361-4526-b6f3-af414a4e8485 km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx7 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasLogicalTable _:node19j1gt7phx7 .

km-dev:TriplesMap_54f09e62-9361-4526-b6f3-af414a4e8485 rr:logicalTable _:node19j1gt7phx7 ;
	rr:subjectMap _:node19j1gt7phx8 .

_:node19j1gt7phx1 km-dev:hasSubjectMap _:node19j1gt7phx8 .

_:node19j1gt7phx8 km-dev:isPartOfMapping _:node19j1gt7phx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature2" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature2" .

km-dev:PredicateObjectMap_005b3d72-c334-4d75-8913-7129b507a277 rr:predicate memex:enrollment_date .

_:node19j1gt7phx9 rr:column "[\"posts\",\"Unfold: label\",\"joined:\",\"joined_iso\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx9 .

km-dev:PredicateObjectMap_005b3d72-c334-4d75-8913-7129b507a277 rr:objectMap _:node19j1gt7phx9 .

km-dev:TriplesMap_54f09e62-9361-4526-b6f3-af414a4e8485 rr:predicateObjectMap km-dev:PredicateObjectMap_005b3d72-c334-4d75-8913-7129b507a277 .

km-dev:PredicateObjectMap_005b3d72-c334-4d75-8913-7129b507a277 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_005b3d72-c334-4d75-8913-7129b507a277 .

km-dev:PredicateObjectMap_a518d135-897b-4f71-b20c-8b66a7837a81 rr:predicate memex:featureName .

_:node19j1gt7phx10 rr:constant "enrollment_date" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx10 .

km-dev:PredicateObjectMap_a518d135-897b-4f71-b20c-8b66a7837a81 rr:objectMap _:node19j1gt7phx10 .

km-dev:TriplesMap_54f09e62-9361-4526-b6f3-af414a4e8485 rr:predicateObjectMap km-dev:PredicateObjectMap_a518d135-897b-4f71-b20c-8b66a7837a81 .

km-dev:PredicateObjectMap_a518d135-897b-4f71-b20c-8b66a7837a81 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_a518d135-897b-4f71-b20c-8b66a7837a81 .

km-dev:PredicateObjectMap_be7add66-8812-4f07-9da8-0b4b2c9d29e6 rr:predicate memex:featureValue .

_:node19j1gt7phx11 rr:column "[\"posts\",\"Unfold: label\",\"joined:\",\"joined_iso\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx11 .

km-dev:PredicateObjectMap_be7add66-8812-4f07-9da8-0b4b2c9d29e6 rr:objectMap _:node19j1gt7phx11 .

km-dev:TriplesMap_54f09e62-9361-4526-b6f3-af414a4e8485 rr:predicateObjectMap km-dev:PredicateObjectMap_be7add66-8812-4f07-9da8-0b4b2c9d29e6 .

km-dev:PredicateObjectMap_be7add66-8812-4f07-9da8-0b4b2c9d29e6 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_be7add66-8812-4f07-9da8-0b4b2c9d29e6 .

km-dev:TriplesMap_b28b6b4d-f4d1-43a6-8336-ff4d21bc87e3 a rr:TriplesMap .

_:node19j1gt7phx1 km-dev:hasTriplesMap km-dev:TriplesMap_b28b6b4d-f4d1-43a6-8336-ff4d21bc87e3 .

km-dev:TriplesMap_b28b6b4d-f4d1-43a6-8336-ff4d21bc87e3 km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx12 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasLogicalTable _:node19j1gt7phx12 .

km-dev:TriplesMap_b28b6b4d-f4d1-43a6-8336-ff4d21bc87e3 rr:logicalTable _:node19j1gt7phx12 ;
	rr:subjectMap _:node19j1gt7phx13 .

_:node19j1gt7phx1 km-dev:hasSubjectMap _:node19j1gt7phx13 .

_:node19j1gt7phx13 km-dev:isPartOfMapping _:node19j1gt7phx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature3" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature3" .

km-dev:PredicateObjectMap_df5f448a-c5b7-4e64-9855-de91f9e6a0a3 rr:predicate memex:featureName .

_:node19j1gt7phx14 rr:constant "place_postalAddress" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx14 .

km-dev:PredicateObjectMap_df5f448a-c5b7-4e64-9855-de91f9e6a0a3 rr:objectMap _:node19j1gt7phx14 .

km-dev:TriplesMap_b28b6b4d-f4d1-43a6-8336-ff4d21bc87e3 rr:predicateObjectMap km-dev:PredicateObjectMap_df5f448a-c5b7-4e64-9855-de91f9e6a0a3 .

km-dev:PredicateObjectMap_df5f448a-c5b7-4e64-9855-de91f9e6a0a3 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_df5f448a-c5b7-4e64-9855-de91f9e6a0a3 .

km-dev:PredicateObjectMap_1e8b258a-995d-4007-ba94-773a66a35dc6 rr:predicate memex:featureValue .

_:node19j1gt7phx15 rr:column "[\"posts\",\"Unfold: label\",\"city, state:\",\"clean_address\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx15 .

km-dev:PredicateObjectMap_1e8b258a-995d-4007-ba94-773a66a35dc6 rr:objectMap _:node19j1gt7phx15 .

km-dev:TriplesMap_b28b6b4d-f4d1-43a6-8336-ff4d21bc87e3 rr:predicateObjectMap km-dev:PredicateObjectMap_1e8b258a-995d-4007-ba94-773a66a35dc6 .

km-dev:PredicateObjectMap_1e8b258a-995d-4007-ba94-773a66a35dc6 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_1e8b258a-995d-4007-ba94-773a66a35dc6 .

km-dev:PredicateObjectMap_e92add92-3b47-4bbb-acdc-7047671e913e rr:predicate memex:place_postalAddress .

_:node19j1gt7phx16 rr:column "[\"posts\",\"Unfold: label\",\"city, state:\",\"clean_address\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx16 .

km-dev:PredicateObjectMap_e92add92-3b47-4bbb-acdc-7047671e913e rr:objectMap _:node19j1gt7phx16 .

km-dev:TriplesMap_b28b6b4d-f4d1-43a6-8336-ff4d21bc87e3 rr:predicateObjectMap km-dev:PredicateObjectMap_e92add92-3b47-4bbb-acdc-7047671e913e .

km-dev:PredicateObjectMap_e92add92-3b47-4bbb-acdc-7047671e913e a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_e92add92-3b47-4bbb-acdc-7047671e913e .

km-dev:TriplesMap_3b294265-435d-438a-ac79-44f7ec97147a a rr:TriplesMap .

_:node19j1gt7phx1 km-dev:hasTriplesMap km-dev:TriplesMap_3b294265-435d-438a-ac79-44f7ec97147a .

km-dev:TriplesMap_3b294265-435d-438a-ac79-44f7ec97147a km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx17 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasLogicalTable _:node19j1gt7phx17 .

km-dev:TriplesMap_3b294265-435d-438a-ac79-44f7ec97147a rr:logicalTable _:node19j1gt7phx17 ;
	rr:subjectMap _:node19j1gt7phx18 .

_:node19j1gt7phx1 km-dev:hasSubjectMap _:node19j1gt7phx18 .

_:node19j1gt7phx18 km-dev:isPartOfMapping _:node19j1gt7phx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature4" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature4" .

km-dev:PredicateObjectMap_ee699371-4d5d-43d1-a539-e2907c158973 rr:predicate memex:featureName .

_:node19j1gt7phx19 rr:constant "person_postCount" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx19 .

km-dev:PredicateObjectMap_ee699371-4d5d-43d1-a539-e2907c158973 rr:objectMap _:node19j1gt7phx19 .

km-dev:TriplesMap_3b294265-435d-438a-ac79-44f7ec97147a rr:predicateObjectMap km-dev:PredicateObjectMap_ee699371-4d5d-43d1-a539-e2907c158973 .

km-dev:PredicateObjectMap_ee699371-4d5d-43d1-a539-e2907c158973 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_ee699371-4d5d-43d1-a539-e2907c158973 .

km-dev:PredicateObjectMap_2313a000-37fb-4307-a4a0-976b3fa16f14 rr:predicate memex:featureValue .

_:node19j1gt7phx20 rr:column "[\"posts\",\"Unfold: label\",\"posts:\",\"clean_post_count\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx20 .

km-dev:PredicateObjectMap_2313a000-37fb-4307-a4a0-976b3fa16f14 rr:objectMap _:node19j1gt7phx20 .

km-dev:TriplesMap_3b294265-435d-438a-ac79-44f7ec97147a rr:predicateObjectMap km-dev:PredicateObjectMap_2313a000-37fb-4307-a4a0-976b3fa16f14 .

km-dev:PredicateObjectMap_2313a000-37fb-4307-a4a0-976b3fa16f14 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_2313a000-37fb-4307-a4a0-976b3fa16f14 .

km-dev:PredicateObjectMap_030d5226-db1d-4997-abd8-ae85255a9387 rr:predicate memex:person_postCount .

_:node19j1gt7phx21 rr:column "[\"posts\",\"Unfold: label\",\"posts:\",\"clean_post_count\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx21 .

km-dev:PredicateObjectMap_030d5226-db1d-4997-abd8-ae85255a9387 rr:objectMap _:node19j1gt7phx21 .

km-dev:TriplesMap_3b294265-435d-438a-ac79-44f7ec97147a rr:predicateObjectMap km-dev:PredicateObjectMap_030d5226-db1d-4997-abd8-ae85255a9387 .

km-dev:PredicateObjectMap_030d5226-db1d-4997-abd8-ae85255a9387 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_030d5226-db1d-4997-abd8-ae85255a9387 .

km-dev:TriplesMap_dd8b4b17-1636-4de9-9d40-10d730f6eb85 a rr:TriplesMap .

_:node19j1gt7phx1 km-dev:hasTriplesMap km-dev:TriplesMap_dd8b4b17-1636-4de9-9d40-10d730f6eb85 .

km-dev:TriplesMap_dd8b4b17-1636-4de9-9d40-10d730f6eb85 km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx22 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasLogicalTable _:node19j1gt7phx22 .

km-dev:TriplesMap_dd8b4b17-1636-4de9-9d40-10d730f6eb85 rr:logicalTable _:node19j1gt7phx22 ;
	rr:subjectMap _:node19j1gt7phx23 .

_:node19j1gt7phx1 km-dev:hasSubjectMap _:node19j1gt7phx23 .

_:node19j1gt7phx23 km-dev:isPartOfMapping _:node19j1gt7phx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature5" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature5" .

km-dev:PredicateObjectMap_7ce0c00d-668c-48bc-a8fc-ed08d483d0ef rr:predicate memex:featureName .

_:node19j1gt7phx24 rr:constant "weaponsMentioned" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx24 .

km-dev:PredicateObjectMap_7ce0c00d-668c-48bc-a8fc-ed08d483d0ef rr:objectMap _:node19j1gt7phx24 .

km-dev:TriplesMap_dd8b4b17-1636-4de9-9d40-10d730f6eb85 rr:predicateObjectMap km-dev:PredicateObjectMap_7ce0c00d-668c-48bc-a8fc-ed08d483d0ef .

km-dev:PredicateObjectMap_7ce0c00d-668c-48bc-a8fc-ed08d483d0ef a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_7ce0c00d-668c-48bc-a8fc-ed08d483d0ef .

km-dev:PredicateObjectMap_473f21b3-f038-469d-bcf5-e60361be2f4f rr:predicate memex:featureValue .

_:node19j1gt7phx25 rr:column "[\"posts\",\"Unfold: label\",\"Glue_1\",\"weapons\",\"Values\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx25 .

km-dev:PredicateObjectMap_473f21b3-f038-469d-bcf5-e60361be2f4f rr:objectMap _:node19j1gt7phx25 .

km-dev:TriplesMap_dd8b4b17-1636-4de9-9d40-10d730f6eb85 rr:predicateObjectMap km-dev:PredicateObjectMap_473f21b3-f038-469d-bcf5-e60361be2f4f .

km-dev:PredicateObjectMap_473f21b3-f038-469d-bcf5-e60361be2f4f a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_473f21b3-f038-469d-bcf5-e60361be2f4f .

km-dev:PredicateObjectMap_8f7dd841-e3ef-4531-9701-8a88ecc8928e rr:predicate memex:weaponsMentioned .

_:node19j1gt7phx26 rr:column "[\"posts\",\"Unfold: label\",\"Glue_1\",\"weapons\",\"Values\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx26 .

km-dev:PredicateObjectMap_8f7dd841-e3ef-4531-9701-8a88ecc8928e rr:objectMap _:node19j1gt7phx26 .

km-dev:TriplesMap_dd8b4b17-1636-4de9-9d40-10d730f6eb85 rr:predicateObjectMap km-dev:PredicateObjectMap_8f7dd841-e3ef-4531-9701-8a88ecc8928e .

km-dev:PredicateObjectMap_8f7dd841-e3ef-4531-9701-8a88ecc8928e a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_8f7dd841-e3ef-4531-9701-8a88ecc8928e .

km-dev:TriplesMap_7df19903-6a4d-4963-b5eb-83ac89418684 a rr:TriplesMap .

_:node19j1gt7phx1 km-dev:hasTriplesMap km-dev:TriplesMap_7df19903-6a4d-4963-b5eb-83ac89418684 .

km-dev:TriplesMap_7df19903-6a4d-4963-b5eb-83ac89418684 km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx27 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasLogicalTable _:node19j1gt7phx27 .

km-dev:TriplesMap_7df19903-6a4d-4963-b5eb-83ac89418684 rr:logicalTable _:node19j1gt7phx27 ;
	rr:subjectMap _:node19j1gt7phx28 .

_:node19j1gt7phx1 km-dev:hasSubjectMap _:node19j1gt7phx28 .

_:node19j1gt7phx28 km-dev:isPartOfMapping _:node19j1gt7phx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature6" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature6" .

km-dev:PredicateObjectMap_7c446b14-cd61-423e-9286-275dbe11f7a4 rr:predicate memex:featureName .

_:node19j1gt7phx29 rr:constant "pricesMentioned" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx29 .

km-dev:PredicateObjectMap_7c446b14-cd61-423e-9286-275dbe11f7a4 rr:objectMap _:node19j1gt7phx29 .

km-dev:TriplesMap_7df19903-6a4d-4963-b5eb-83ac89418684 rr:predicateObjectMap km-dev:PredicateObjectMap_7c446b14-cd61-423e-9286-275dbe11f7a4 .

km-dev:PredicateObjectMap_7c446b14-cd61-423e-9286-275dbe11f7a4 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_7c446b14-cd61-423e-9286-275dbe11f7a4 .

km-dev:PredicateObjectMap_6d7a783a-bca5-4724-b54a-efa759d594f9 rr:predicate memex:featureValue .

_:node19j1gt7phx30 rr:column "prices" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx30 .

km-dev:PredicateObjectMap_6d7a783a-bca5-4724-b54a-efa759d594f9 rr:objectMap _:node19j1gt7phx30 .

km-dev:TriplesMap_7df19903-6a4d-4963-b5eb-83ac89418684 rr:predicateObjectMap km-dev:PredicateObjectMap_6d7a783a-bca5-4724-b54a-efa759d594f9 .

km-dev:PredicateObjectMap_6d7a783a-bca5-4724-b54a-efa759d594f9 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_6d7a783a-bca5-4724-b54a-efa759d594f9 .

km-dev:PredicateObjectMap_5f6d34b2-308f-44c1-923b-f5fc58e558f5 rr:predicate memex:pricesMentioned .

_:node19j1gt7phx31 rr:column "prices" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx31 .

km-dev:PredicateObjectMap_5f6d34b2-308f-44c1-923b-f5fc58e558f5 rr:objectMap _:node19j1gt7phx31 .

km-dev:TriplesMap_7df19903-6a4d-4963-b5eb-83ac89418684 rr:predicateObjectMap km-dev:PredicateObjectMap_5f6d34b2-308f-44c1-923b-f5fc58e558f5 .

km-dev:PredicateObjectMap_5f6d34b2-308f-44c1-923b-f5fc58e558f5 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_5f6d34b2-308f-44c1-923b-f5fc58e558f5 .

km-dev:TriplesMap_1cd4c18c-6e2b-4725-b3e9-e064e634eb47 a rr:TriplesMap .

_:node19j1gt7phx1 km-dev:hasTriplesMap km-dev:TriplesMap_1cd4c18c-6e2b-4725-b3e9-e064e634eb47 .

km-dev:TriplesMap_1cd4c18c-6e2b-4725-b3e9-e064e634eb47 km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx32 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasLogicalTable _:node19j1gt7phx32 .

km-dev:TriplesMap_1cd4c18c-6e2b-4725-b3e9-e064e634eb47 rr:logicalTable _:node19j1gt7phx32 ;
	rr:subjectMap _:node19j1gt7phx33 .

_:node19j1gt7phx1 km-dev:hasSubjectMap _:node19j1gt7phx33 .

_:node19j1gt7phx33 km-dev:isPartOfMapping _:node19j1gt7phx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature7" ;
	rr:class memex:Feature ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Feature7" .

km-dev:PredicateObjectMap_f2a828aa-41d9-42a7-8f38-08cf243b9ed9 rr:predicate memex:featureName .

_:node19j1gt7phx34 rr:constant "provider_name" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx34 .

km-dev:PredicateObjectMap_f2a828aa-41d9-42a7-8f38-08cf243b9ed9 rr:objectMap _:node19j1gt7phx34 .

km-dev:TriplesMap_1cd4c18c-6e2b-4725-b3e9-e064e634eb47 rr:predicateObjectMap km-dev:PredicateObjectMap_f2a828aa-41d9-42a7-8f38-08cf243b9ed9 .

km-dev:PredicateObjectMap_f2a828aa-41d9-42a7-8f38-08cf243b9ed9 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_f2a828aa-41d9-42a7-8f38-08cf243b9ed9 .

km-dev:PredicateObjectMap_30685046-5f95-4500-8aff-8de5a9d39c43 rr:predicate memex:featureValue .

_:node19j1gt7phx35 rr:column "[\"posts\",\"provider_name\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx35 .

km-dev:PredicateObjectMap_30685046-5f95-4500-8aff-8de5a9d39c43 rr:objectMap _:node19j1gt7phx35 .

km-dev:TriplesMap_1cd4c18c-6e2b-4725-b3e9-e064e634eb47 rr:predicateObjectMap km-dev:PredicateObjectMap_30685046-5f95-4500-8aff-8de5a9d39c43 .

km-dev:PredicateObjectMap_30685046-5f95-4500-8aff-8de5a9d39c43 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_30685046-5f95-4500-8aff-8de5a9d39c43 .

km-dev:PredicateObjectMap_847a112c-0a6b-4689-ba5a-260ee9d84ae7 rr:predicate memex:provider_name .

_:node19j1gt7phx36 rr:column "[\"posts\",\"provider_name\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx36 .

km-dev:PredicateObjectMap_847a112c-0a6b-4689-ba5a-260ee9d84ae7 rr:objectMap _:node19j1gt7phx36 .

km-dev:TriplesMap_1cd4c18c-6e2b-4725-b3e9-e064e634eb47 rr:predicateObjectMap km-dev:PredicateObjectMap_847a112c-0a6b-4689-ba5a-260ee9d84ae7 .

km-dev:PredicateObjectMap_847a112c-0a6b-4689-ba5a-260ee9d84ae7 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_847a112c-0a6b-4689-ba5a-260ee9d84ae7 .

km-dev:TriplesMap_1a9698b2-1a9d-4d34-8eb0-fff65e8a9c50 a rr:TriplesMap .

_:node19j1gt7phx1 km-dev:hasTriplesMap km-dev:TriplesMap_1a9698b2-1a9d-4d34-8eb0-fff65e8a9c50 .

km-dev:TriplesMap_1a9698b2-1a9d-4d34-8eb0-fff65e8a9c50 km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx37 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasLogicalTable _:node19j1gt7phx37 .

km-dev:TriplesMap_1a9698b2-1a9d-4d34-8eb0-fff65e8a9c50 rr:logicalTable _:node19j1gt7phx37 ;
	rr:subjectMap _:node19j1gt7phx38 .

_:node19j1gt7phx1 km-dev:hasSubjectMap _:node19j1gt7phx38 .

_:node19j1gt7phx38 km-dev:isPartOfMapping _:node19j1gt7phx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/FeatureCollection1" ;
	rr:class memex:FeatureCollection ;
	rr:template "{[\"posts\",\"fc_uri\"]}" .

km-dev:PredicateObjectMap_37dc008d-e1c2-412a-b9fb-cff37fdcefdc rr:predicate memex:enrollment_date_feature .

km-dev:RefObjectMap_5e20bf3d-a44c-4d93-b233-cb012672b52f a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_54f09e62-9361-4526-b6f3-af414a4e8485 ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap km-dev:RefObjectMap_5e20bf3d-a44c-4d93-b233-cb012672b52f .

km-dev:PredicateObjectMap_37dc008d-e1c2-412a-b9fb-cff37fdcefdc rr:objectMap km-dev:RefObjectMap_5e20bf3d-a44c-4d93-b233-cb012672b52f .

km-dev:TriplesMap_1a9698b2-1a9d-4d34-8eb0-fff65e8a9c50 rr:predicateObjectMap km-dev:PredicateObjectMap_37dc008d-e1c2-412a-b9fb-cff37fdcefdc .

km-dev:PredicateObjectMap_37dc008d-e1c2-412a-b9fb-cff37fdcefdc a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_37dc008d-e1c2-412a-b9fb-cff37fdcefdc .

km-dev:PredicateObjectMap_fbcdc44b-14c6-44cb-9561-0a080dfff475 rr:predicate memex:person_postCount_feature .

km-dev:RefObjectMap_8c0697c6-5f74-4508-9f5d-8be667340d6b a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_3b294265-435d-438a-ac79-44f7ec97147a ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap km-dev:RefObjectMap_8c0697c6-5f74-4508-9f5d-8be667340d6b .

km-dev:PredicateObjectMap_fbcdc44b-14c6-44cb-9561-0a080dfff475 rr:objectMap km-dev:RefObjectMap_8c0697c6-5f74-4508-9f5d-8be667340d6b .

km-dev:TriplesMap_1a9698b2-1a9d-4d34-8eb0-fff65e8a9c50 rr:predicateObjectMap km-dev:PredicateObjectMap_fbcdc44b-14c6-44cb-9561-0a080dfff475 .

km-dev:PredicateObjectMap_fbcdc44b-14c6-44cb-9561-0a080dfff475 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_fbcdc44b-14c6-44cb-9561-0a080dfff475 .

km-dev:PredicateObjectMap_1b1b5110-bb1a-4c86-8d0e-5e7faf0e282d rr:predicate memex:person_username_feature .

km-dev:RefObjectMap_322972a0-fe54-41f7-a1fc-3b5590f45d6f a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_7f730acf-bfbc-47af-a83e-a4e58ee110e9 ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap km-dev:RefObjectMap_322972a0-fe54-41f7-a1fc-3b5590f45d6f .

km-dev:PredicateObjectMap_1b1b5110-bb1a-4c86-8d0e-5e7faf0e282d rr:objectMap km-dev:RefObjectMap_322972a0-fe54-41f7-a1fc-3b5590f45d6f .

km-dev:TriplesMap_1a9698b2-1a9d-4d34-8eb0-fff65e8a9c50 rr:predicateObjectMap km-dev:PredicateObjectMap_1b1b5110-bb1a-4c86-8d0e-5e7faf0e282d .

km-dev:PredicateObjectMap_1b1b5110-bb1a-4c86-8d0e-5e7faf0e282d a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_1b1b5110-bb1a-4c86-8d0e-5e7faf0e282d .

km-dev:PredicateObjectMap_0d25a90f-b644-4bc1-96e3-66ba7f50d75b rr:predicate memex:place_postalAddress_feature .

km-dev:RefObjectMap_592531cd-a6e6-4874-8f55-5292d445fe78 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_b28b6b4d-f4d1-43a6-8336-ff4d21bc87e3 ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap km-dev:RefObjectMap_592531cd-a6e6-4874-8f55-5292d445fe78 .

km-dev:PredicateObjectMap_0d25a90f-b644-4bc1-96e3-66ba7f50d75b rr:objectMap km-dev:RefObjectMap_592531cd-a6e6-4874-8f55-5292d445fe78 .

km-dev:TriplesMap_1a9698b2-1a9d-4d34-8eb0-fff65e8a9c50 rr:predicateObjectMap km-dev:PredicateObjectMap_0d25a90f-b644-4bc1-96e3-66ba7f50d75b .

km-dev:PredicateObjectMap_0d25a90f-b644-4bc1-96e3-66ba7f50d75b a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_0d25a90f-b644-4bc1-96e3-66ba7f50d75b .

km-dev:PredicateObjectMap_586b6063-dd9b-496a-8b89-47e7f43a3772 rr:predicate memex:pricesMentioned_feature .

km-dev:RefObjectMap_584123e5-c22d-41ee-a747-fede2e132ea0 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_7df19903-6a4d-4963-b5eb-83ac89418684 ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap km-dev:RefObjectMap_584123e5-c22d-41ee-a747-fede2e132ea0 .

km-dev:PredicateObjectMap_586b6063-dd9b-496a-8b89-47e7f43a3772 rr:objectMap km-dev:RefObjectMap_584123e5-c22d-41ee-a747-fede2e132ea0 .

km-dev:TriplesMap_1a9698b2-1a9d-4d34-8eb0-fff65e8a9c50 rr:predicateObjectMap km-dev:PredicateObjectMap_586b6063-dd9b-496a-8b89-47e7f43a3772 .

km-dev:PredicateObjectMap_586b6063-dd9b-496a-8b89-47e7f43a3772 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_586b6063-dd9b-496a-8b89-47e7f43a3772 .

km-dev:PredicateObjectMap_0c616afc-389d-4f63-ad62-9dff326648f5 rr:predicate memex:provider_name_feature .

km-dev:RefObjectMap_4c69e027-5e2e-49b9-8fcf-a08ee3bc10db a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_1cd4c18c-6e2b-4725-b3e9-e064e634eb47 ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap km-dev:RefObjectMap_4c69e027-5e2e-49b9-8fcf-a08ee3bc10db .

km-dev:PredicateObjectMap_0c616afc-389d-4f63-ad62-9dff326648f5 rr:objectMap km-dev:RefObjectMap_4c69e027-5e2e-49b9-8fcf-a08ee3bc10db .

km-dev:TriplesMap_1a9698b2-1a9d-4d34-8eb0-fff65e8a9c50 rr:predicateObjectMap km-dev:PredicateObjectMap_0c616afc-389d-4f63-ad62-9dff326648f5 .

km-dev:PredicateObjectMap_0c616afc-389d-4f63-ad62-9dff326648f5 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_0c616afc-389d-4f63-ad62-9dff326648f5 .

km-dev:PredicateObjectMap_fbba67e2-6ec3-497a-af1e-5e2cc91409d2 rr:predicate memex:weaponsMentioned_feature .

km-dev:RefObjectMap_9974f5d9-f705-41e6-bd29-a6128a603416 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_dd8b4b17-1636-4de9-9d40-10d730f6eb85 ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap km-dev:RefObjectMap_9974f5d9-f705-41e6-bd29-a6128a603416 .

km-dev:PredicateObjectMap_fbba67e2-6ec3-497a-af1e-5e2cc91409d2 rr:objectMap km-dev:RefObjectMap_9974f5d9-f705-41e6-bd29-a6128a603416 .

km-dev:TriplesMap_1a9698b2-1a9d-4d34-8eb0-fff65e8a9c50 rr:predicateObjectMap km-dev:PredicateObjectMap_fbba67e2-6ec3-497a-af1e-5e2cc91409d2 .

km-dev:PredicateObjectMap_fbba67e2-6ec3-497a-af1e-5e2cc91409d2 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_fbba67e2-6ec3-497a-af1e-5e2cc91409d2 .

km-dev:TriplesMap_07096736-dd0e-4945-92fc-463e04674e6d a rr:TriplesMap .

_:node19j1gt7phx1 km-dev:hasTriplesMap km-dev:TriplesMap_07096736-dd0e-4945-92fc-463e04674e6d .

km-dev:TriplesMap_07096736-dd0e-4945-92fc-463e04674e6d km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx39 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasLogicalTable _:node19j1gt7phx39 .

km-dev:TriplesMap_07096736-dd0e-4945-92fc-463e04674e6d rr:logicalTable _:node19j1gt7phx39 ;
	rr:subjectMap _:node19j1gt7phx40 .

_:node19j1gt7phx1 km-dev:hasSubjectMap _:node19j1gt7phx40 .

_:node19j1gt7phx40 km-dev:isPartOfMapping _:node19j1gt7phx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Identifier1" ;
	rr:class memex:Identifier ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Identifier1" .

km-dev:PredicateObjectMap_0056090f-07a0-455f-bfd1-efda76ddfa54 rr:predicate memex:hasType .

_:node19j1gt7phx41 rr:constant <http://dig.isi.edu/data/thesauri/identifiertype/postid> ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx41 .

km-dev:PredicateObjectMap_0056090f-07a0-455f-bfd1-efda76ddfa54 rr:objectMap _:node19j1gt7phx41 .

km-dev:TriplesMap_07096736-dd0e-4945-92fc-463e04674e6d rr:predicateObjectMap km-dev:PredicateObjectMap_0056090f-07a0-455f-bfd1-efda76ddfa54 .

km-dev:PredicateObjectMap_0056090f-07a0-455f-bfd1-efda76ddfa54 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_0056090f-07a0-455f-bfd1-efda76ddfa54 .

km-dev:PredicateObjectMap_ab949758-3820-4c59-85c9-523c4de2256f rr:predicate rdfs:label .

_:node19j1gt7phx42 rr:column "[\"posts\",\"post_id\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx42 .

km-dev:PredicateObjectMap_ab949758-3820-4c59-85c9-523c4de2256f rr:objectMap _:node19j1gt7phx42 .

km-dev:TriplesMap_07096736-dd0e-4945-92fc-463e04674e6d rr:predicateObjectMap km-dev:PredicateObjectMap_ab949758-3820-4c59-85c9-523c4de2256f .

km-dev:PredicateObjectMap_ab949758-3820-4c59-85c9-523c4de2256f a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_ab949758-3820-4c59-85c9-523c4de2256f .

km-dev:TriplesMap_71ab55fd-6b83-4e7e-b0dc-7bfef59886ae a rr:TriplesMap .

_:node19j1gt7phx1 km-dev:hasTriplesMap km-dev:TriplesMap_71ab55fd-6b83-4e7e-b0dc-7bfef59886ae .

km-dev:TriplesMap_71ab55fd-6b83-4e7e-b0dc-7bfef59886ae km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx43 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasLogicalTable _:node19j1gt7phx43 .

km-dev:TriplesMap_71ab55fd-6b83-4e7e-b0dc-7bfef59886ae rr:logicalTable _:node19j1gt7phx43 ;
	rr:subjectMap _:node19j1gt7phx44 .

_:node19j1gt7phx1 km-dev:hasSubjectMap _:node19j1gt7phx44 .

_:node19j1gt7phx44 km-dev:isPartOfMapping _:node19j1gt7phx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Identifier2" ;
	rr:class memex:Identifier ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "memex:Identifier2" .

km-dev:PredicateObjectMap_8b75a5a5-d129-4b98-8a67-52a73b95add1 rr:predicate memex:hasType .

_:node19j1gt7phx45 rr:constant <http://dig.isi.edu/data/thesauri/identifiertype/postid> ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx45 .

km-dev:PredicateObjectMap_8b75a5a5-d129-4b98-8a67-52a73b95add1 rr:objectMap _:node19j1gt7phx45 .

km-dev:TriplesMap_71ab55fd-6b83-4e7e-b0dc-7bfef59886ae rr:predicateObjectMap km-dev:PredicateObjectMap_8b75a5a5-d129-4b98-8a67-52a73b95add1 .

km-dev:PredicateObjectMap_8b75a5a5-d129-4b98-8a67-52a73b95add1 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_8b75a5a5-d129-4b98-8a67-52a73b95add1 .

km-dev:PredicateObjectMap_babfbfa8-e26c-43c7-b75a-6e64493c8b11 rr:predicate rdfs:label .

_:node19j1gt7phx46 rr:column "topic_id" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx46 .

km-dev:PredicateObjectMap_babfbfa8-e26c-43c7-b75a-6e64493c8b11 rr:objectMap _:node19j1gt7phx46 .

km-dev:TriplesMap_71ab55fd-6b83-4e7e-b0dc-7bfef59886ae rr:predicateObjectMap km-dev:PredicateObjectMap_babfbfa8-e26c-43c7-b75a-6e64493c8b11 .

km-dev:PredicateObjectMap_babfbfa8-e26c-43c7-b75a-6e64493c8b11 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_babfbfa8-e26c-43c7-b75a-6e64493c8b11 .

km-dev:TriplesMap_9a90ab68-a249-41c8-8d06-9503c3a2f3da a rr:TriplesMap .

_:node19j1gt7phx1 km-dev:hasTriplesMap km-dev:TriplesMap_9a90ab68-a249-41c8-8d06-9503c3a2f3da .

km-dev:TriplesMap_9a90ab68-a249-41c8-8d06-9503c3a2f3da km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx47 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasLogicalTable _:node19j1gt7phx47 .

km-dev:TriplesMap_9a90ab68-a249-41c8-8d06-9503c3a2f3da rr:logicalTable _:node19j1gt7phx47 ;
	rr:subjectMap _:node19j1gt7phx48 .

_:node19j1gt7phx1 km-dev:hasSubjectMap _:node19j1gt7phx48 .

_:node19j1gt7phx48 km-dev:isPartOfMapping _:node19j1gt7phx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/Article1" ;
	rr:class schema:Article ;
	rr:template "{[\"posts\",\"article_uri\"]}" ;
	a km-dev:steinerTreeRootNode .

km-dev:PredicateObjectMap_a12a253e-d6d5-40b2-b31a-be7db24f2ea4 rr:predicate memex:hasBodyPart .

km-dev:RefObjectMap_a2ef7e86-e39a-422c-ad06-ab378b0f18d5 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_e350ba89-31ec-42e7-a0c8-7a26627c2b21 ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap km-dev:RefObjectMap_a2ef7e86-e39a-422c-ad06-ab378b0f18d5 .

km-dev:PredicateObjectMap_a12a253e-d6d5-40b2-b31a-be7db24f2ea4 rr:objectMap km-dev:RefObjectMap_a2ef7e86-e39a-422c-ad06-ab378b0f18d5 .

km-dev:TriplesMap_9a90ab68-a249-41c8-8d06-9503c3a2f3da rr:predicateObjectMap km-dev:PredicateObjectMap_a12a253e-d6d5-40b2-b31a-be7db24f2ea4 .

km-dev:PredicateObjectMap_a12a253e-d6d5-40b2-b31a-be7db24f2ea4 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_a12a253e-d6d5-40b2-b31a-be7db24f2ea4 .

km-dev:PredicateObjectMap_b9b90014-9335-4d49-9e9f-ec6d3b4f8659 rr:predicate memex:hasFeatureCollection .

km-dev:RefObjectMap_e7f9b101-4c32-457d-88de-0ad475458e17 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_1a9698b2-1a9d-4d34-8eb0-fff65e8a9c50 ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap km-dev:RefObjectMap_e7f9b101-4c32-457d-88de-0ad475458e17 .

km-dev:PredicateObjectMap_b9b90014-9335-4d49-9e9f-ec6d3b4f8659 rr:objectMap km-dev:RefObjectMap_e7f9b101-4c32-457d-88de-0ad475458e17 .

km-dev:TriplesMap_9a90ab68-a249-41c8-8d06-9503c3a2f3da rr:predicateObjectMap km-dev:PredicateObjectMap_b9b90014-9335-4d49-9e9f-ec6d3b4f8659 .

km-dev:PredicateObjectMap_b9b90014-9335-4d49-9e9f-ec6d3b4f8659 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_b9b90014-9335-4d49-9e9f-ec6d3b4f8659 .

km-dev:PredicateObjectMap_f10d9a68-7a4f-43ec-a3ff-618bd7c28248 rr:predicate memex:hasSignaturePart .

km-dev:RefObjectMap_1732cb27-a899-4cce-a10b-646f5bfedbe4 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_9ff2ec5a-10ed-4ea7-b859-b4c044d32331 ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap km-dev:RefObjectMap_1732cb27-a899-4cce-a10b-646f5bfedbe4 .

km-dev:PredicateObjectMap_f10d9a68-7a4f-43ec-a3ff-618bd7c28248 rr:objectMap km-dev:RefObjectMap_1732cb27-a899-4cce-a10b-646f5bfedbe4 .

km-dev:TriplesMap_9a90ab68-a249-41c8-8d06-9503c3a2f3da rr:predicateObjectMap km-dev:PredicateObjectMap_f10d9a68-7a4f-43ec-a3ff-618bd7c28248 .

km-dev:PredicateObjectMap_f10d9a68-7a4f-43ec-a3ff-618bd7c28248 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_f10d9a68-7a4f-43ec-a3ff-618bd7c28248 .

km-dev:PredicateObjectMap_ca773608-e5f7-4592-8741-f27c74fadc0f rr:predicate memex:hasTitlePart .

km-dev:RefObjectMap_4f6a61e2-c3ba-4c96-8c93-c84fc4223e8f a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_930d17a7-6905-4c69-8d8b-29edfd017867 ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap km-dev:RefObjectMap_4f6a61e2-c3ba-4c96-8c93-c84fc4223e8f .

km-dev:PredicateObjectMap_ca773608-e5f7-4592-8741-f27c74fadc0f rr:objectMap km-dev:RefObjectMap_4f6a61e2-c3ba-4c96-8c93-c84fc4223e8f .

km-dev:TriplesMap_9a90ab68-a249-41c8-8d06-9503c3a2f3da rr:predicateObjectMap km-dev:PredicateObjectMap_ca773608-e5f7-4592-8741-f27c74fadc0f .

km-dev:PredicateObjectMap_ca773608-e5f7-4592-8741-f27c74fadc0f a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_ca773608-e5f7-4592-8741-f27c74fadc0f .

km-dev:PredicateObjectMap_40ef3afd-d66f-47b3-8e83-f54cb5fbb349 rr:predicate schema:dateCreated .

_:node19j1gt7phx49 rr:column "[\"posts\",\"dateCreated\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx49 .

km-dev:PredicateObjectMap_40ef3afd-d66f-47b3-8e83-f54cb5fbb349 rr:objectMap _:node19j1gt7phx49 .

km-dev:TriplesMap_9a90ab68-a249-41c8-8d06-9503c3a2f3da rr:predicateObjectMap km-dev:PredicateObjectMap_40ef3afd-d66f-47b3-8e83-f54cb5fbb349 .

km-dev:PredicateObjectMap_40ef3afd-d66f-47b3-8e83-f54cb5fbb349 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_40ef3afd-d66f-47b3-8e83-f54cb5fbb349 .

km-dev:PredicateObjectMap_7b0dc280-ecd4-4a70-b83f-0a904a4d9bc1 rr:predicate schema:isPartOf .

km-dev:RefObjectMap_1b561600-3739-4ee9-a9e2-52d790785089 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_916ecbcd-16b7-4b6a-822c-a6443d955e65 ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap km-dev:RefObjectMap_1b561600-3739-4ee9-a9e2-52d790785089 .

km-dev:PredicateObjectMap_7b0dc280-ecd4-4a70-b83f-0a904a4d9bc1 rr:objectMap km-dev:RefObjectMap_1b561600-3739-4ee9-a9e2-52d790785089 .

km-dev:TriplesMap_9a90ab68-a249-41c8-8d06-9503c3a2f3da rr:predicateObjectMap km-dev:PredicateObjectMap_7b0dc280-ecd4-4a70-b83f-0a904a4d9bc1 .

km-dev:PredicateObjectMap_7b0dc280-ecd4-4a70-b83f-0a904a4d9bc1 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_7b0dc280-ecd4-4a70-b83f-0a904a4d9bc1 .

km-dev:PredicateObjectMap_0c8559d8-1d52-41b7-8bf4-2822e5feda09 rr:predicate memex:hasIdentifier .

km-dev:RefObjectMap_494ee1ba-0259-45a2-b285-20af7e22e7c9 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_07096736-dd0e-4945-92fc-463e04674e6d ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap km-dev:RefObjectMap_494ee1ba-0259-45a2-b285-20af7e22e7c9 .

km-dev:PredicateObjectMap_0c8559d8-1d52-41b7-8bf4-2822e5feda09 rr:objectMap km-dev:RefObjectMap_494ee1ba-0259-45a2-b285-20af7e22e7c9 .

km-dev:TriplesMap_9a90ab68-a249-41c8-8d06-9503c3a2f3da rr:predicateObjectMap km-dev:PredicateObjectMap_0c8559d8-1d52-41b7-8bf4-2822e5feda09 .

km-dev:PredicateObjectMap_0c8559d8-1d52-41b7-8bf4-2822e5feda09 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_0c8559d8-1d52-41b7-8bf4-2822e5feda09 .

km-dev:TriplesMap_e350ba89-31ec-42e7-a0c8-7a26627c2b21 a rr:TriplesMap .

_:node19j1gt7phx1 km-dev:hasTriplesMap km-dev:TriplesMap_e350ba89-31ec-42e7-a0c8-7a26627c2b21 .

km-dev:TriplesMap_e350ba89-31ec-42e7-a0c8-7a26627c2b21 km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx50 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasLogicalTable _:node19j1gt7phx50 .

km-dev:TriplesMap_e350ba89-31ec-42e7-a0c8-7a26627c2b21 rr:logicalTable _:node19j1gt7phx50 ;
	rr:subjectMap _:node19j1gt7phx51 .

_:node19j1gt7phx1 km-dev:hasSubjectMap _:node19j1gt7phx51 .

_:node19j1gt7phx51 km-dev:isPartOfMapping _:node19j1gt7phx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPageElement2" ;
	rr:class schema:WebPageElement ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:WebPageElement2" .

km-dev:PredicateObjectMap_6fd3f976-a827-4376-a6a7-4588fb03028d rr:predicate schema:text .

_:node19j1gt7phx52 rr:column "[\"posts\",\"content\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx52 .

km-dev:PredicateObjectMap_6fd3f976-a827-4376-a6a7-4588fb03028d rr:objectMap _:node19j1gt7phx52 .

km-dev:TriplesMap_e350ba89-31ec-42e7-a0c8-7a26627c2b21 rr:predicateObjectMap km-dev:PredicateObjectMap_6fd3f976-a827-4376-a6a7-4588fb03028d .

km-dev:PredicateObjectMap_6fd3f976-a827-4376-a6a7-4588fb03028d a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_6fd3f976-a827-4376-a6a7-4588fb03028d .

km-dev:TriplesMap_9ff2ec5a-10ed-4ea7-b859-b4c044d32331 a rr:TriplesMap .

_:node19j1gt7phx1 km-dev:hasTriplesMap km-dev:TriplesMap_9ff2ec5a-10ed-4ea7-b859-b4c044d32331 .

km-dev:TriplesMap_9ff2ec5a-10ed-4ea7-b859-b4c044d32331 km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx53 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasLogicalTable _:node19j1gt7phx53 .

km-dev:TriplesMap_9ff2ec5a-10ed-4ea7-b859-b4c044d32331 rr:logicalTable _:node19j1gt7phx53 ;
	rr:subjectMap _:node19j1gt7phx54 .

_:node19j1gt7phx1 km-dev:hasSubjectMap _:node19j1gt7phx54 .

_:node19j1gt7phx54 km-dev:isPartOfMapping _:node19j1gt7phx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPageElement3" ;
	rr:class schema:WebPageElement ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:WebPageElement3" .

km-dev:PredicateObjectMap_b9804647-dc2f-4718-907d-6a2a5a100b50 rr:predicate schema:text .

_:node19j1gt7phx55 rr:column "[\"posts\",\"signature_clean\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx55 .

km-dev:PredicateObjectMap_b9804647-dc2f-4718-907d-6a2a5a100b50 rr:objectMap _:node19j1gt7phx55 .

km-dev:TriplesMap_9ff2ec5a-10ed-4ea7-b859-b4c044d32331 rr:predicateObjectMap km-dev:PredicateObjectMap_b9804647-dc2f-4718-907d-6a2a5a100b50 .

km-dev:PredicateObjectMap_b9804647-dc2f-4718-907d-6a2a5a100b50 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_b9804647-dc2f-4718-907d-6a2a5a100b50 .

km-dev:TriplesMap_930d17a7-6905-4c69-8d8b-29edfd017867 a rr:TriplesMap .

_:node19j1gt7phx1 km-dev:hasTriplesMap km-dev:TriplesMap_930d17a7-6905-4c69-8d8b-29edfd017867 .

km-dev:TriplesMap_930d17a7-6905-4c69-8d8b-29edfd017867 km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx56 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasLogicalTable _:node19j1gt7phx56 .

km-dev:TriplesMap_930d17a7-6905-4c69-8d8b-29edfd017867 rr:logicalTable _:node19j1gt7phx56 ;
	rr:subjectMap _:node19j1gt7phx57 .

_:node19j1gt7phx1 km-dev:hasSubjectMap _:node19j1gt7phx57 .

_:node19j1gt7phx57 km-dev:isPartOfMapping _:node19j1gt7phx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPageElement1" ;
	rr:class schema:WebPageElement ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:WebPageElement1" .

km-dev:PredicateObjectMap_e71883d1-6f3c-499c-b13d-06f0f835c337 rr:predicate schema:text .

_:node19j1gt7phx58 rr:column "[\"posts\",\"title\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx58 .

km-dev:PredicateObjectMap_e71883d1-6f3c-499c-b13d-06f0f835c337 rr:objectMap _:node19j1gt7phx58 .

km-dev:TriplesMap_930d17a7-6905-4c69-8d8b-29edfd017867 rr:predicateObjectMap km-dev:PredicateObjectMap_e71883d1-6f3c-499c-b13d-06f0f835c337 .

km-dev:PredicateObjectMap_e71883d1-6f3c-499c-b13d-06f0f835c337 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_e71883d1-6f3c-499c-b13d-06f0f835c337 .

km-dev:TriplesMap_916ecbcd-16b7-4b6a-822c-a6443d955e65 a rr:TriplesMap .

_:node19j1gt7phx1 km-dev:hasTriplesMap km-dev:TriplesMap_916ecbcd-16b7-4b6a-822c-a6443d955e65 .

km-dev:TriplesMap_916ecbcd-16b7-4b6a-822c-a6443d955e65 km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx59 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasLogicalTable _:node19j1gt7phx59 .

km-dev:TriplesMap_916ecbcd-16b7-4b6a-822c-a6443d955e65 rr:logicalTable _:node19j1gt7phx59 ;
	rr:subjectMap _:node19j1gt7phx60 .

_:node19j1gt7phx1 km-dev:hasSubjectMap _:node19j1gt7phx60 .

_:node19j1gt7phx60 km-dev:isPartOfMapping _:node19j1gt7phx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/Article2" ;
	rr:class schema:Article ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:Article2" .

km-dev:PredicateObjectMap_57681f6b-c29c-422e-89e8-e5ce651d706b rr:predicate memex:hasIdentifier .

km-dev:RefObjectMap_f6a2f1b6-a062-49a2-a748-0fa57f15316e a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_71ab55fd-6b83-4e7e-b0dc-7bfef59886ae ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap km-dev:RefObjectMap_f6a2f1b6-a062-49a2-a748-0fa57f15316e .

km-dev:PredicateObjectMap_57681f6b-c29c-422e-89e8-e5ce651d706b rr:objectMap km-dev:RefObjectMap_f6a2f1b6-a062-49a2-a748-0fa57f15316e .

km-dev:TriplesMap_916ecbcd-16b7-4b6a-822c-a6443d955e65 rr:predicateObjectMap km-dev:PredicateObjectMap_57681f6b-c29c-422e-89e8-e5ce651d706b .

km-dev:PredicateObjectMap_57681f6b-c29c-422e-89e8-e5ce651d706b a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_57681f6b-c29c-422e-89e8-e5ce651d706b .

km-dev:PredicateObjectMap_2d85ff75-53c6-48e6-abf7-8765e8f87b70 rr:predicate memex:hasTitlePart .

km-dev:RefObjectMap_fe17b76b-76f2-4a38-b198-abb1278558ba a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_3c08d82e-e5d4-4ad1-815e-80753571ab9b ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap km-dev:RefObjectMap_fe17b76b-76f2-4a38-b198-abb1278558ba .

km-dev:PredicateObjectMap_2d85ff75-53c6-48e6-abf7-8765e8f87b70 rr:objectMap km-dev:RefObjectMap_fe17b76b-76f2-4a38-b198-abb1278558ba .

km-dev:TriplesMap_916ecbcd-16b7-4b6a-822c-a6443d955e65 rr:predicateObjectMap km-dev:PredicateObjectMap_2d85ff75-53c6-48e6-abf7-8765e8f87b70 .

km-dev:PredicateObjectMap_2d85ff75-53c6-48e6-abf7-8765e8f87b70 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_2d85ff75-53c6-48e6-abf7-8765e8f87b70 .

km-dev:PredicateObjectMap_dbff04f0-8279-46af-b93b-90418a8b106b rr:predicate schema:url .

_:node19j1gt7phx61 rr:column "url" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx61 .

km-dev:PredicateObjectMap_dbff04f0-8279-46af-b93b-90418a8b106b rr:objectMap _:node19j1gt7phx61 .

km-dev:TriplesMap_916ecbcd-16b7-4b6a-822c-a6443d955e65 rr:predicateObjectMap km-dev:PredicateObjectMap_dbff04f0-8279-46af-b93b-90418a8b106b .

km-dev:PredicateObjectMap_dbff04f0-8279-46af-b93b-90418a8b106b a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_dbff04f0-8279-46af-b93b-90418a8b106b .

km-dev:TriplesMap_3c08d82e-e5d4-4ad1-815e-80753571ab9b a rr:TriplesMap .

_:node19j1gt7phx1 km-dev:hasTriplesMap km-dev:TriplesMap_3c08d82e-e5d4-4ad1-815e-80753571ab9b .

km-dev:TriplesMap_3c08d82e-e5d4-4ad1-815e-80753571ab9b km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx62 rr:tableName "spokaneguntrader-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasLogicalTable _:node19j1gt7phx62 .

km-dev:TriplesMap_3c08d82e-e5d4-4ad1-815e-80753571ab9b rr:logicalTable _:node19j1gt7phx62 ;
	rr:subjectMap _:node19j1gt7phx63 .

_:node19j1gt7phx1 km-dev:hasSubjectMap _:node19j1gt7phx63 .

_:node19j1gt7phx63 km-dev:isPartOfMapping _:node19j1gt7phx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPageElement4" ;
	rr:class schema:WebPageElement ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "schema:WebPageElement4" .

km-dev:PredicateObjectMap_cc61a125-a798-4dd3-803e-f9ca90a19c16 rr:predicate schema:text .

_:node19j1gt7phx64 rr:column "topic_title" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasObjectMap _:node19j1gt7phx64 .

km-dev:PredicateObjectMap_cc61a125-a798-4dd3-803e-f9ca90a19c16 rr:objectMap _:node19j1gt7phx64 .

km-dev:TriplesMap_3c08d82e-e5d4-4ad1-815e-80753571ab9b rr:predicateObjectMap km-dev:PredicateObjectMap_cc61a125-a798-4dd3-803e-f9ca90a19c16 .

km-dev:PredicateObjectMap_cc61a125-a798-4dd3-803e-f9ca90a19c16 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19j1gt7phx1 .

_:node19j1gt7phx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_cc61a125-a798-4dd3-803e-f9ca90a19c16 .
