@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix schemax: <http://topbraid.org/schemax/> .
@prefix schema: <http://schema.org/> .
@prefix memex: <http://memexproxy.com/ontology/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix ht: <http://memexproxy.com/ontology/human-trafficking/> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix km-dev: <http://isi.edu/integration/karma/dev#> .

_:node19hm157ffx1 a km-dev:R2RMLMapping ;
	km-dev:sourceName "mrs-patent-data-sample2.json" ;
	km-dev:modelPublicationTime "1427742301679"^^xsd:long ;
	km-dev:modelVersion "1.7" ;
	km-dev:hasInputColumns "[[{\"columnName\":\"Publication Number\"}],[{\"columnName\":\"Inventors\"},{\"columnName\":\"values\"}]]" ;
	km-dev:hasOutputColumns "[[{\"columnName\":\"Inventors\"},{\"columnName\":\"inventor_clean3\"}],[{\"columnName\":\"uri\"}],[{\"columnName\":\"Inventors\"},{\"columnName\":\"inventor_clean\"}],[{\"columnName\":\"Inventors\"},{\"columnName\":\"person_uri\"}],[{\"columnName\":\"Inventors\"},{\"columnName\":\"inventor_uri\"}],[{\"columnName\":\"Inventors\"},{\"columnName\":\"inventor_clean2\"}],[{\"columnName\":\"featurecollection_uri\"}]]" ;
	km-dev:hasModelLabel "mrs-patent-data-sample2.json" ;
	km-dev:hasBaseURI "http://localhost:8080/source/" ;
	km-dev:hasWorksheetHistory """[
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"label\",
                \"value\": \"schema:WebPage1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"uri\",
                \"value\": \"http://schema.org/WebPage\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddNodeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"Publication Number\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"publicationNumber = getValue(\\\"Publication Number\\\")\\npublicationNumber = ''.join(publicationNumber.split())\\nreturn \\\"page/\\\" + publicationNumber + \\\"/processed\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Publication Number\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/WebPage\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/WebPage1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:WebPage1\",
                    \"DomainId\": \"http://schema.org/WebPage1\",
                    \"DomainUri\": \"http://schema.org/WebPage\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP3:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/FeatureCollection\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasFeatureCollection\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/FeatureCollection1 (add)\",
                    \"edgeSourceId\": \"http://schema.org/WebPage1\",
                    \"edgeSourceUri\": \"http://schema.org/WebPage1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"featurecollection_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"featurecollection_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"featurecollection_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"uri\\\") + \\\"/featurecollection\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"featurecollection_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/FeatureCollection\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"memex:FeatureCollection1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP3:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/author_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature1 (add)\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP3:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPage\",
                    \"edgeId\": \"http://www.w3.org/ns/prov#wasDerivedFrom\",
                    \"edgeTargetId\": \"http://schema.org/WebPage1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"Inventors\"},
                    {\"columnName\": \"values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"inventor_clean\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"Inventors\"},
                    {\"columnName\": \"inventor_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"inventor_clean\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_name(getValue(\\\"values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Inventors\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Inventors\\\"},{\\\"columnName\\\":\\\"inventor_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP3:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/PersonName\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureObject\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/PersonName1 (add)\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"Inventors\"},
                    {\"columnName\": \"inventor_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Inventors\\\"},{\\\"columnName\\\":\\\"inventor_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Inventors\\\"},{\\\"columnName\\\":\\\"inventor_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"Inventors\"},
                    {\"columnName\": \"inventor_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"inventor_clean2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"Inventors\"},
                    {\"columnName\": \"inventor_clean2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"inventor_clean2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"inventor_clean\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Inventors\\\"},{\\\"columnName\\\":\\\"inventor_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Inventors\\\"},{\\\"columnName\\\":\\\"inventor_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"Inventors\"},
                    {\"columnName\": \"inventor_clean2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/author\",
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Inventors\\\"},{\\\"columnName\\\":\\\"inventor_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Inventors\\\"},{\\\"columnName\\\":\\\"inventor_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"Inventors\"},
                    {\"columnName\": \"inventor_clean2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"inventor_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"Inventors\"},
                    {\"columnName\": \"inventor_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"inventor_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"uri = author_uri(getValue(\\\"inventor_clean\\\"))\\nif uri:\\n  return getValue(\\\"featurecollection_uri\\\") + \\\"/\\\" + uri\\nreturn ''\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Inventors\\\"},{\\\"columnName\\\":\\\"inventor_clean\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Inventors\\\"},{\\\"columnName\\\":\\\"inventor_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"Inventors\"},
                    {\"columnName\": \"inventor_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/Feature\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/Feature1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Inventors\\\"},{\\\"columnName\\\":\\\"inventor_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Inventors\\\"},{\\\"columnName\\\":\\\"inventor_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"Inventors\"},
                    {\"columnName\": \"inventor_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"inventor_clean3\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"Inventors\"},
                    {\"columnName\": \"inventor_clean3\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"inventor_clean3\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"inventor_clean\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Inventors\\\"},{\\\"columnName\\\":\\\"inventor_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Inventors\\\"},{\\\"columnName\\\":\\\"inventor_clean3\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"Inventors\"},
                    {\"columnName\": \"inventor_clean3\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"person_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"Inventors\"},
                    {\"columnName\": \"inventor_clean3\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/person_name\",
                    \"DomainLabel\": \"memex:PersonName1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/PersonName1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/PersonName\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Inventors\\\"},{\\\"columnName\\\":\\\"inventor_clean3\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Inventors\\\"},{\\\"columnName\\\":\\\"inventor_clean3\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"Inventors\"},
                    {\"columnName\": \"person_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"person_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return person_name_uri(getValue(\\\"inventor_clean\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Inventors\\\"},{\\\"columnName\\\":\\\"inventor_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Inventors\\\"},{\\\"columnName\\\":\\\"person_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"Inventors\"},
                    {\"columnName\": \"person_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/PersonName\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/PersonName1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"memex:PersonName1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/PersonName1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/PersonName\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Inventors\\\"},{\\\"columnName\\\":\\\"person_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Inventors\\\"},{\\\"columnName\\\":\\\"person_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP3:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://www.w3.org/ns/prov#Activity\",
                    \"edgeId\": \"http://www.w3.org/ns/prov#wasGeneratedBy\",
                    \"edgeTargetId\": \"http://www.w3.org/ns/prov#Activity1 (add)\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"http://dig.isi.edu/mrs/data/api/google\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"xsd:string\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://dig.isi.edu/mrs/data/api/google\",
                    \"edgeId\": \"http://www.w3.org/ns/prov#wasAttributedTo\",
                    \"edgeTargetId\": \"http://dig.isi.edu/mrs/data/api/google1\",
                    \"edgeSourceId\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"edgeSourceUri\": \"http://www.w3.org/ns/prov#Activity\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    }
]""" .

km-dev:TriplesMap_0804b1d9-ac55-4450-b46c-e4b999d6bd82 a rr:TriplesMap .

_:node19hm157ffx1 km-dev:hasTriplesMap km-dev:TriplesMap_0804b1d9-ac55-4450-b46c-e4b999d6bd82 .

km-dev:TriplesMap_0804b1d9-ac55-4450-b46c-e4b999d6bd82 km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx2 rr:tableName "mrs-patent-data-sample2.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasLogicalTable _:node19hm157ffx2 .

km-dev:TriplesMap_0804b1d9-ac55-4450-b46c-e4b999d6bd82 rr:logicalTable _:node19hm157ffx2 ;
	rr:subjectMap _:node19hm157ffx3 .

_:node19hm157ffx1 km-dev:hasSubjectMap _:node19hm157ffx3 .

_:node19hm157ffx3 km-dev:isPartOfMapping _:node19hm157ffx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature1" ;
	rr:class memex:Feature ;
	rr:template "{[\"Inventors\",\"inventor_uri\"]}" ;
	a km-dev:steinerTreeRootNode .

km-dev:PredicateObjectMap_abfcf3d4-7c8b-48ef-8827-ba83d24d213e rr:predicate memex:author .

_:node19hm157ffx4 rr:column "[\"Inventors\",\"inventor_clean\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasObjectMap _:node19hm157ffx4 .

km-dev:PredicateObjectMap_abfcf3d4-7c8b-48ef-8827-ba83d24d213e rr:objectMap _:node19hm157ffx4 .

km-dev:TriplesMap_0804b1d9-ac55-4450-b46c-e4b999d6bd82 rr:predicateObjectMap km-dev:PredicateObjectMap_abfcf3d4-7c8b-48ef-8827-ba83d24d213e .

km-dev:PredicateObjectMap_abfcf3d4-7c8b-48ef-8827-ba83d24d213e a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_abfcf3d4-7c8b-48ef-8827-ba83d24d213e .

km-dev:PredicateObjectMap_9fc61155-4dd7-4e99-93db-282036bc8a72 rr:predicate memex:featureObject .

km-dev:RefObjectMap_e1a91050-a670-468c-b4a1-3017b7f1880c a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_e221e7e3-c3be-46a5-a02f-fcd351497df6 ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasObjectMap km-dev:RefObjectMap_e1a91050-a670-468c-b4a1-3017b7f1880c .

km-dev:PredicateObjectMap_9fc61155-4dd7-4e99-93db-282036bc8a72 rr:objectMap km-dev:RefObjectMap_e1a91050-a670-468c-b4a1-3017b7f1880c .

km-dev:TriplesMap_0804b1d9-ac55-4450-b46c-e4b999d6bd82 rr:predicateObjectMap km-dev:PredicateObjectMap_9fc61155-4dd7-4e99-93db-282036bc8a72 .

km-dev:PredicateObjectMap_9fc61155-4dd7-4e99-93db-282036bc8a72 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_9fc61155-4dd7-4e99-93db-282036bc8a72 .

km-dev:PredicateObjectMap_13bbc13b-c0bd-4b2d-8f4f-f973b003bdb7 rr:predicate memex:featureValue .

_:node19hm157ffx5 rr:column "[\"Inventors\",\"inventor_clean\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasObjectMap _:node19hm157ffx5 .

km-dev:PredicateObjectMap_13bbc13b-c0bd-4b2d-8f4f-f973b003bdb7 rr:objectMap _:node19hm157ffx5 .

km-dev:TriplesMap_0804b1d9-ac55-4450-b46c-e4b999d6bd82 rr:predicateObjectMap km-dev:PredicateObjectMap_13bbc13b-c0bd-4b2d-8f4f-f973b003bdb7 .

km-dev:PredicateObjectMap_13bbc13b-c0bd-4b2d-8f4f-f973b003bdb7 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_13bbc13b-c0bd-4b2d-8f4f-f973b003bdb7 .

km-dev:PredicateObjectMap_71ac1444-cb83-4fae-855b-1ccab1d68ece rr:predicate prov:wasGeneratedBy .

km-dev:RefObjectMap_d7e3a9c8-b721-4eaa-ac1a-9d9d598b9ffe a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_ccf0f079-70a7-49bb-b862-91d1fa505334 ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasObjectMap km-dev:RefObjectMap_d7e3a9c8-b721-4eaa-ac1a-9d9d598b9ffe .

km-dev:PredicateObjectMap_71ac1444-cb83-4fae-855b-1ccab1d68ece rr:objectMap km-dev:RefObjectMap_d7e3a9c8-b721-4eaa-ac1a-9d9d598b9ffe .

km-dev:TriplesMap_0804b1d9-ac55-4450-b46c-e4b999d6bd82 rr:predicateObjectMap km-dev:PredicateObjectMap_71ac1444-cb83-4fae-855b-1ccab1d68ece .

km-dev:PredicateObjectMap_71ac1444-cb83-4fae-855b-1ccab1d68ece a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_71ac1444-cb83-4fae-855b-1ccab1d68ece .

km-dev:PredicateObjectMap_31553df7-4105-42bf-a111-e9603c2a0f49 rr:predicate prov:wasDerivedFrom .

km-dev:RefObjectMap_3a536b84-d889-4160-9120-2f452764e346 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_ed6725d1-e0d3-46b2-972e-6809ad4d769d ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasObjectMap km-dev:RefObjectMap_3a536b84-d889-4160-9120-2f452764e346 .

km-dev:PredicateObjectMap_31553df7-4105-42bf-a111-e9603c2a0f49 rr:objectMap km-dev:RefObjectMap_3a536b84-d889-4160-9120-2f452764e346 .

km-dev:TriplesMap_0804b1d9-ac55-4450-b46c-e4b999d6bd82 rr:predicateObjectMap km-dev:PredicateObjectMap_31553df7-4105-42bf-a111-e9603c2a0f49 .

km-dev:PredicateObjectMap_31553df7-4105-42bf-a111-e9603c2a0f49 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_31553df7-4105-42bf-a111-e9603c2a0f49 .

km-dev:TriplesMap_e221e7e3-c3be-46a5-a02f-fcd351497df6 a rr:TriplesMap .

_:node19hm157ffx1 km-dev:hasTriplesMap km-dev:TriplesMap_e221e7e3-c3be-46a5-a02f-fcd351497df6 .

km-dev:TriplesMap_e221e7e3-c3be-46a5-a02f-fcd351497df6 km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx6 rr:tableName "mrs-patent-data-sample2.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasLogicalTable _:node19hm157ffx6 .

km-dev:TriplesMap_e221e7e3-c3be-46a5-a02f-fcd351497df6 rr:logicalTable _:node19hm157ffx6 ;
	rr:subjectMap _:node19hm157ffx7 .

_:node19hm157ffx1 km-dev:hasSubjectMap _:node19hm157ffx7 .

_:node19hm157ffx7 km-dev:isPartOfMapping _:node19hm157ffx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/PersonName1" ;
	rr:class memex:PersonName ;
	rr:template "{[\"Inventors\",\"person_uri\"]}" .

km-dev:PredicateObjectMap_1db3254b-9844-4b6c-b334-d83cc03ce70d rr:predicate memex:person_name .

_:node19hm157ffx8 rr:column "[\"Inventors\",\"inventor_clean\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasObjectMap _:node19hm157ffx8 .

km-dev:PredicateObjectMap_1db3254b-9844-4b6c-b334-d83cc03ce70d rr:objectMap _:node19hm157ffx8 .

km-dev:TriplesMap_e221e7e3-c3be-46a5-a02f-fcd351497df6 rr:predicateObjectMap km-dev:PredicateObjectMap_1db3254b-9844-4b6c-b334-d83cc03ce70d .

km-dev:PredicateObjectMap_1db3254b-9844-4b6c-b334-d83cc03ce70d a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_1db3254b-9844-4b6c-b334-d83cc03ce70d .

km-dev:TriplesMap_ccf0f079-70a7-49bb-b862-91d1fa505334 a rr:TriplesMap .

_:node19hm157ffx1 km-dev:hasTriplesMap km-dev:TriplesMap_ccf0f079-70a7-49bb-b862-91d1fa505334 .

km-dev:TriplesMap_ccf0f079-70a7-49bb-b862-91d1fa505334 km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx9 rr:tableName "mrs-patent-data-sample2.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasLogicalTable _:node19hm157ffx9 .

km-dev:TriplesMap_ccf0f079-70a7-49bb-b862-91d1fa505334 rr:logicalTable _:node19hm157ffx9 ;
	rr:subjectMap _:node19hm157ffx10 .

_:node19hm157ffx1 km-dev:hasSubjectMap _:node19hm157ffx10 .

_:node19hm157ffx10 km-dev:isPartOfMapping _:node19hm157ffx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://www.w3.org/ns/prov#Activity1" ;
	rr:class prov:Activity ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "prov:Activity1" .

km-dev:PredicateObjectMap_0419f9d6-8ba7-44a7-8fb3-ac31fb4a794d rr:predicate prov:wasAttributedTo .

_:node19hm157ffx11 rr:constant <http://dig.isi.edu/mrs/data/api/google> ;
	rr:datatype "http://www.w3.org/2001/XMLSchema#string" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasObjectMap _:node19hm157ffx11 .

km-dev:PredicateObjectMap_0419f9d6-8ba7-44a7-8fb3-ac31fb4a794d rr:objectMap _:node19hm157ffx11 .

km-dev:TriplesMap_ccf0f079-70a7-49bb-b862-91d1fa505334 rr:predicateObjectMap km-dev:PredicateObjectMap_0419f9d6-8ba7-44a7-8fb3-ac31fb4a794d .

km-dev:PredicateObjectMap_0419f9d6-8ba7-44a7-8fb3-ac31fb4a794d a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_0419f9d6-8ba7-44a7-8fb3-ac31fb4a794d .

km-dev:TriplesMap_45c0ada7-939a-4010-b4b6-be28dae27900 a rr:TriplesMap .

_:node19hm157ffx1 km-dev:hasTriplesMap km-dev:TriplesMap_45c0ada7-939a-4010-b4b6-be28dae27900 .

km-dev:TriplesMap_45c0ada7-939a-4010-b4b6-be28dae27900 km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx12 rr:tableName "mrs-patent-data-sample2.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasLogicalTable _:node19hm157ffx12 .

km-dev:TriplesMap_45c0ada7-939a-4010-b4b6-be28dae27900 rr:logicalTable _:node19hm157ffx12 ;
	rr:subjectMap _:node19hm157ffx13 .

_:node19hm157ffx1 km-dev:hasSubjectMap _:node19hm157ffx13 .

_:node19hm157ffx13 km-dev:isPartOfMapping _:node19hm157ffx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/FeatureCollection1" ;
	rr:class memex:FeatureCollection ;
	rr:template "{uri}/featurecollection" .

km-dev:PredicateObjectMap_444263d5-134a-4865-aaf3-3aefa22092db rr:predicate memex:author_feature .

km-dev:RefObjectMap_9941147c-9721-4cb3-80f2-eaf2bb01459e a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_0804b1d9-ac55-4450-b46c-e4b999d6bd82 ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasObjectMap km-dev:RefObjectMap_9941147c-9721-4cb3-80f2-eaf2bb01459e .

km-dev:PredicateObjectMap_444263d5-134a-4865-aaf3-3aefa22092db rr:objectMap km-dev:RefObjectMap_9941147c-9721-4cb3-80f2-eaf2bb01459e .

km-dev:TriplesMap_45c0ada7-939a-4010-b4b6-be28dae27900 rr:predicateObjectMap km-dev:PredicateObjectMap_444263d5-134a-4865-aaf3-3aefa22092db .

km-dev:PredicateObjectMap_444263d5-134a-4865-aaf3-3aefa22092db a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_444263d5-134a-4865-aaf3-3aefa22092db .

km-dev:TriplesMap_ed6725d1-e0d3-46b2-972e-6809ad4d769d a rr:TriplesMap .

_:node19hm157ffx1 km-dev:hasTriplesMap km-dev:TriplesMap_ed6725d1-e0d3-46b2-972e-6809ad4d769d .

km-dev:TriplesMap_ed6725d1-e0d3-46b2-972e-6809ad4d769d km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx14 rr:tableName "mrs-patent-data-sample2.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasLogicalTable _:node19hm157ffx14 .

km-dev:TriplesMap_ed6725d1-e0d3-46b2-972e-6809ad4d769d rr:logicalTable _:node19hm157ffx14 ;
	rr:subjectMap _:node19hm157ffx15 .

_:node19hm157ffx1 km-dev:hasSubjectMap _:node19hm157ffx15 .

_:node19hm157ffx15 km-dev:isPartOfMapping _:node19hm157ffx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPage1" ;
	rr:class schema:WebPage ;
	rr:template "{uri}" .

km-dev:PredicateObjectMap_a2682471-1723-464e-a66d-a66f5dc20746 rr:predicate memex:hasFeatureCollection .

km-dev:RefObjectMap_e66458ba-fc26-481a-977a-ebf6985ba4b1 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_45c0ada7-939a-4010-b4b6-be28dae27900 ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasObjectMap km-dev:RefObjectMap_e66458ba-fc26-481a-977a-ebf6985ba4b1 .

km-dev:PredicateObjectMap_a2682471-1723-464e-a66d-a66f5dc20746 rr:objectMap km-dev:RefObjectMap_e66458ba-fc26-481a-977a-ebf6985ba4b1 .

km-dev:TriplesMap_ed6725d1-e0d3-46b2-972e-6809ad4d769d rr:predicateObjectMap km-dev:PredicateObjectMap_a2682471-1723-464e-a66d-a66f5dc20746 .

km-dev:PredicateObjectMap_a2682471-1723-464e-a66d-a66f5dc20746 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19hm157ffx1 .

_:node19hm157ffx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_a2682471-1723-464e-a66d-a66f5dc20746 .
