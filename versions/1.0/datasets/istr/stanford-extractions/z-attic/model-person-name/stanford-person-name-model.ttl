@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix schemax: <http://topbraid.org/schemax/> .
@prefix schema: <http://schema.org/> .
@prefix memex: <http://memexproxy.com/ontology/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix ht: <http://memexproxy.com/ontology/human-trafficking/> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix km-dev: <http://isi.edu/integration/karma/dev#> .

_:node197ml4mncx1 a km-dev:R2RMLMapping ;
	km-dev:sourceName "stanford-features-sample.json" ;
	km-dev:modelPublicationTime "1417025837804"^^xsd:long ;
	km-dev:modelVersion "1.7" ;
	km-dev:hasInputColumns "[[{\"columnName\":\"ad_timestamp\"}],[{\"columnName\":\"url\"}],[{\"columnName\":\"names2\"},{\"columnName\":\"Values\"}],[{\"columnName\":\"ID\"}]]" ;
	km-dev:hasOutputColumns "[[{\"columnName\":\"crawl_uri\"}],[{\"columnName\":\"nameslist\"}],[{\"columnName\":\"names2\"},{\"columnName\":\"name_uri\"}],[{\"columnName\":\"names2\"},{\"columnName\":\"clean_name\"}],[{\"columnName\":\"names2\"},{\"columnName\":\"database_id\"}],[{\"columnName\":\"names2\"},{\"columnName\":\"clean_name2\"}],[{\"columnName\":\"names2\"},{\"columnName\":\"iso_stanford_modtime\"}],[{\"columnName\":\"featureCollection_uri\"}]]" ;
	km-dev:hasModelLabel "stanford-features-sample.json" ;
	km-dev:hasBaseURI "http://memex.zapto.org/data/" ;
	km-dev:hasWorksheetHistory """[
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"url\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"crawl_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getCacheBaseUrl()+\\\"page/\\\"+get_url_hash(getValue(\\\"url\\\"))+\\\"/\\\"+getValue(\\\"ad_timestamp\\\")+\\\"/processed\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"ad_timestamp\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"crawl_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"crawl_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"featureCollection_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"crawl_uri\\\")+\\\"/featurecollection\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"crawl_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featureCollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"crawl_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/WebPage\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/WebPage1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:WebPage1 (add)\",
                    \"DomainId\": \"http://schema.org/WebPage1\",
                    \"DomainUri\": \"http://schema.org/WebPage\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"crawl_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"crawl_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"featureCollection_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/FeatureCollection\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/FeatureCollection1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"memex:FeatureCollection1 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featureCollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featureCollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP3:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPage1\",
                    \"edgeId\": \"http://www.w3.org/ns/prov#wasDerivedFrom\",
                    \"edgeTargetId\": \"http://schema.org/WebPage1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1 (add)\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://memexproxy.com/ontology/hasFeatureCollection\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceId\": \"http://schema.org/WebPage1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeId\": \"http://memexproxy.com/ontology/hasFeatureCollection\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceId\": \"http://schema.org/WebPage1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP3:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://www.w3.org/ns/prov#Activity\",
                    \"edgeId\": \"http://www.w3.org/ns/prov#wasGeneratedBy\",
                    \"edgeTargetId\": \"http://www.w3.org/ns/prov#Activity1 (add)\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"names\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"nameslist\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return splitNameField(getValue(\\\"names\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"nameslist\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"nameslist\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"delimiter\",
                \"value\": \",\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColName\",
                \"value\": \"names2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newHNodeId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SplitValuesCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"Values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_name\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_name(getValue(\\\"Values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"Values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"clean_name\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"clean_name2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"clean_name\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"clean_name2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"name_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return person_name_uri(getValue(\\\"clean_name\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"name_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP6:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/person_name_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"clean_name\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/person_name\",
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"clean_name2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"name_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/Feature\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/Feature1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"name_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"name_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"person_name\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"person_name\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"person_name1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"name_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"database_id\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"if getValue(\\\"clean_name\\\"):\\n  return getValue(\\\"ID\\\")\\nreturn \\\"\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"ID\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"database_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"database_id\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/databaseId\",
                    \"DomainLabel\": \"prov:Activity1\",
                    \"DomainId\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"DomainUri\": \"http://www.w3.org/ns/prov#Activity\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"database_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"database_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"http://memex.zapto.org/data/software/extractor/stanford/version/0.1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memex.zapto.org/data/software/extractor/stanford/version/0.1\",
                    \"edgeId\": \"http://www.w3.org/ns/prov#wasAttributedTo\",
                    \"edgeTargetId\": \"http://memex.zapto.org/data/software/extractor/stanford/version/0.11\",
                    \"edgeSourceId\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"edgeSourceUri\": \"http://www.w3.org/ns/prov#Activity\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"database_id\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"stanford_modtime\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"2014-10-12\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"stanford_modtime\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"iso_stanford_modtime\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"if getValue(\\\"clean_name\\\"):\\n   return iso8601date(getValue(\\\"stanford_modtime\\\"))\\nreturn ''\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"stanford_modtime\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"iso_stanford_modtime\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"names2\"},
                    {\"columnName\": \"iso_stanford_modtime\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://www.w3.org/ns/prov#endedAtTime\",
                    \"DomainLabel\": \"prov:Activity1\",
                    \"DomainId\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"DomainUri\": \"http://www.w3.org/ns/prov#Activity\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"iso_stanford_modtime\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"iso_stanford_modtime\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"orderedColumns\",
                \"value\": [
                    {
                        \"id\": [{\"columnName\": \"modtime\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"modtime\"
                    },
                    {
                        \"id\": [{\"columnName\": \"ad_timestamp\"}],
                        \"visible\": true,
                        \"hideable\": true,
                        \"name\": \"ad_timestamp\"
                    },
                    {
                        \"id\": [{\"columnName\": \"url\"}],
                        \"visible\": true,
                        \"hideable\": true,
                        \"name\": \"url\"
                    },
                    {
                        \"id\": [{\"columnName\": \"crawl_uri\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"crawl_uri\"
                    },
                    {
                        \"id\": [{\"columnName\": \"featureCollection_uri\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"featureCollection_uri\"
                    },
                    {
                        \"id\": [{\"columnName\": \"ID\"}],
                        \"visible\": true,
                        \"hideable\": true,
                        \"name\": \"ID\"
                    },
                    {
                        \"id\": [{\"columnName\": \"names\"}],
                        \"visible\": true,
                        \"hideable\": true,
                        \"name\": \"names\"
                    },
                    {
                        \"id\": [{\"columnName\": \"nameslist\"}],
                        \"visible\": true,
                        \"hideable\": true,
                        \"name\": \"nameslist\"
                    },
                    {
                        \"id\": [{\"columnName\": \"phones\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"phones\"
                    },
                    {
                        \"id\": [{\"columnName\": \"locations\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"locations\"
                    },
                    {
                        \"id\": [{\"columnName\": \"names2\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"names2\",
                        \"children\": \"[{\\\"id\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"Values\\\"}],\\\"visible\\\":true,\\\"hideable\\\":true,\\\"name\\\":\\\"Values\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"clean_name\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"clean_name2\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"clean_name2\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"name_uri\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"name_uri\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"database_id\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"database_id\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"stanford_modtime\\\"}],\\\"visible\\\":true,\\\"hideable\\\":true,\\\"name\\\":\\\"stanford_modtime\\\"},{\\\"id\\\":[{\\\"columnName\\\":\\\"names2\\\"},{\\\"columnName\\\":\\\"iso_stanford_modtime\\\"}],\\\"visible\\\":true,\\\"hideable\\\":false,\\\"name\\\":\\\"iso_stanford_modtime\\\"}]\"
                    }
                ],
                \"type\": \"orderedColumns\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"OrganizeColumnsCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"properties\",
                \"value\": {
                    \"hasServiceProperties\": false,
                    \"hasPrefix\": false,
                    \"graphLabel\": \"\",
                    \"hasBaseURI\": true,
                    \"baseURI\": \"http://memex.zapto.org/data/\"
                },
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetWorksheetPropertiesCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"properties\",
                \"value\": {
                    \"hasServiceProperties\": false,
                    \"hasPrefix\": true,
                    \"prefix\": \"memex\",
                    \"graphLabel\": \"\",
                    \"hasBaseURI\": false
                },
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetWorksheetPropertiesCommand\"
    }
]""" .

km-dev:TriplesMap_2f2aad6b-30dc-4536-b9cb-14e3466cf420 a rr:TriplesMap .

_:node197ml4mncx1 km-dev:hasTriplesMap km-dev:TriplesMap_2f2aad6b-30dc-4536-b9cb-14e3466cf420 .

km-dev:TriplesMap_2f2aad6b-30dc-4536-b9cb-14e3466cf420 km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx2 rr:tableName "stanford-features-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasLogicalTable _:node197ml4mncx2 .

km-dev:TriplesMap_2f2aad6b-30dc-4536-b9cb-14e3466cf420 rr:logicalTable _:node197ml4mncx2 ;
	rr:subjectMap _:node197ml4mncx3 .

_:node197ml4mncx1 km-dev:hasSubjectMap _:node197ml4mncx3 .

_:node197ml4mncx3 km-dev:isPartOfMapping _:node197ml4mncx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature1" ;
	rr:class memex:Feature ;
	rr:template "{[\"names2\",\"name_uri\"]}" ;
	a km-dev:steinerTreeRootNode .

km-dev:PredicateObjectMap_ad5b300d-b71e-4bc9-9dc8-9d1606e90dbc rr:predicate memex:featureName .

_:node197ml4mncx4 rr:constant "person_name" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasObjectMap _:node197ml4mncx4 .

km-dev:PredicateObjectMap_ad5b300d-b71e-4bc9-9dc8-9d1606e90dbc rr:objectMap _:node197ml4mncx4 .

km-dev:TriplesMap_2f2aad6b-30dc-4536-b9cb-14e3466cf420 rr:predicateObjectMap km-dev:PredicateObjectMap_ad5b300d-b71e-4bc9-9dc8-9d1606e90dbc .

km-dev:PredicateObjectMap_ad5b300d-b71e-4bc9-9dc8-9d1606e90dbc a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_ad5b300d-b71e-4bc9-9dc8-9d1606e90dbc .

km-dev:PredicateObjectMap_619fccff-c500-44e8-9033-c3a885f3c9fa rr:predicate memex:featureValue .

_:node197ml4mncx5 rr:column "[\"names2\",\"clean_name\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasObjectMap _:node197ml4mncx5 .

km-dev:PredicateObjectMap_619fccff-c500-44e8-9033-c3a885f3c9fa rr:objectMap _:node197ml4mncx5 .

km-dev:TriplesMap_2f2aad6b-30dc-4536-b9cb-14e3466cf420 rr:predicateObjectMap km-dev:PredicateObjectMap_619fccff-c500-44e8-9033-c3a885f3c9fa .

km-dev:PredicateObjectMap_619fccff-c500-44e8-9033-c3a885f3c9fa a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_619fccff-c500-44e8-9033-c3a885f3c9fa .

km-dev:PredicateObjectMap_676b5c2e-895d-4f55-afb2-c2f145ff83b6 rr:predicate memex:person_name .

_:node197ml4mncx6 rr:column "[\"names2\",\"clean_name\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasObjectMap _:node197ml4mncx6 .

km-dev:PredicateObjectMap_676b5c2e-895d-4f55-afb2-c2f145ff83b6 rr:objectMap _:node197ml4mncx6 .

km-dev:TriplesMap_2f2aad6b-30dc-4536-b9cb-14e3466cf420 rr:predicateObjectMap km-dev:PredicateObjectMap_676b5c2e-895d-4f55-afb2-c2f145ff83b6 .

km-dev:PredicateObjectMap_676b5c2e-895d-4f55-afb2-c2f145ff83b6 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_676b5c2e-895d-4f55-afb2-c2f145ff83b6 .

km-dev:PredicateObjectMap_a2a308d0-5f4d-4a9d-a133-61212d559626 rr:predicate prov:wasGeneratedBy .

km-dev:RefObjectMap_546d7f66-f63f-443d-a87d-998555aef925 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_7adc4cb1-08ca-4fc4-9c50-de9d06b84120 ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasObjectMap km-dev:RefObjectMap_546d7f66-f63f-443d-a87d-998555aef925 .

km-dev:PredicateObjectMap_a2a308d0-5f4d-4a9d-a133-61212d559626 rr:objectMap km-dev:RefObjectMap_546d7f66-f63f-443d-a87d-998555aef925 .

km-dev:TriplesMap_2f2aad6b-30dc-4536-b9cb-14e3466cf420 rr:predicateObjectMap km-dev:PredicateObjectMap_a2a308d0-5f4d-4a9d-a133-61212d559626 .

km-dev:PredicateObjectMap_a2a308d0-5f4d-4a9d-a133-61212d559626 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_a2a308d0-5f4d-4a9d-a133-61212d559626 .

km-dev:PredicateObjectMap_574fb057-d3b6-41cb-8d9b-b5b245095973 rr:predicate prov:wasDerivedFrom .

km-dev:RefObjectMap_fa5b0b6b-5611-4696-aae1-79cbf78ec116 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_dfad14fe-5a1d-4b27-9733-43690a142c28 ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasObjectMap km-dev:RefObjectMap_fa5b0b6b-5611-4696-aae1-79cbf78ec116 .

km-dev:PredicateObjectMap_574fb057-d3b6-41cb-8d9b-b5b245095973 rr:objectMap km-dev:RefObjectMap_fa5b0b6b-5611-4696-aae1-79cbf78ec116 .

km-dev:TriplesMap_2f2aad6b-30dc-4536-b9cb-14e3466cf420 rr:predicateObjectMap km-dev:PredicateObjectMap_574fb057-d3b6-41cb-8d9b-b5b245095973 .

km-dev:PredicateObjectMap_574fb057-d3b6-41cb-8d9b-b5b245095973 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_574fb057-d3b6-41cb-8d9b-b5b245095973 .

km-dev:TriplesMap_7adc4cb1-08ca-4fc4-9c50-de9d06b84120 a rr:TriplesMap .

_:node197ml4mncx1 km-dev:hasTriplesMap km-dev:TriplesMap_7adc4cb1-08ca-4fc4-9c50-de9d06b84120 .

km-dev:TriplesMap_7adc4cb1-08ca-4fc4-9c50-de9d06b84120 km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx7 rr:tableName "stanford-features-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasLogicalTable _:node197ml4mncx7 .

km-dev:TriplesMap_7adc4cb1-08ca-4fc4-9c50-de9d06b84120 rr:logicalTable _:node197ml4mncx7 ;
	rr:subjectMap _:node197ml4mncx8 .

_:node197ml4mncx1 km-dev:hasSubjectMap _:node197ml4mncx8 .

_:node197ml4mncx8 km-dev:isPartOfMapping _:node197ml4mncx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://www.w3.org/ns/prov#Activity1" ;
	rr:class prov:Activity ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "prov:Activity1" .

km-dev:PredicateObjectMap_6da777d0-7320-4767-94f4-1279391808dc rr:predicate memex:databaseId .

_:node197ml4mncx9 rr:column "[\"names2\",\"database_id\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasObjectMap _:node197ml4mncx9 .

km-dev:PredicateObjectMap_6da777d0-7320-4767-94f4-1279391808dc rr:objectMap _:node197ml4mncx9 .

km-dev:TriplesMap_7adc4cb1-08ca-4fc4-9c50-de9d06b84120 rr:predicateObjectMap km-dev:PredicateObjectMap_6da777d0-7320-4767-94f4-1279391808dc .

km-dev:PredicateObjectMap_6da777d0-7320-4767-94f4-1279391808dc a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_6da777d0-7320-4767-94f4-1279391808dc .

km-dev:PredicateObjectMap_18fb089a-b2f4-4029-9631-d922ca71820a rr:predicate prov:endedAtTime .

_:node197ml4mncx10 rr:column "[\"names2\",\"iso_stanford_modtime\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasObjectMap _:node197ml4mncx10 .

km-dev:PredicateObjectMap_18fb089a-b2f4-4029-9631-d922ca71820a rr:objectMap _:node197ml4mncx10 .

km-dev:TriplesMap_7adc4cb1-08ca-4fc4-9c50-de9d06b84120 rr:predicateObjectMap km-dev:PredicateObjectMap_18fb089a-b2f4-4029-9631-d922ca71820a .

km-dev:PredicateObjectMap_18fb089a-b2f4-4029-9631-d922ca71820a a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_18fb089a-b2f4-4029-9631-d922ca71820a .

km-dev:PredicateObjectMap_3b0e728e-48ac-444e-9372-769f626ef8b6 rr:predicate prov:wasAttributedTo .

_:node197ml4mncx11 rr:constant <http://memex.zapto.org/data/software/extractor/stanford/version/0.1> ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasObjectMap _:node197ml4mncx11 .

km-dev:PredicateObjectMap_3b0e728e-48ac-444e-9372-769f626ef8b6 rr:objectMap _:node197ml4mncx11 .

km-dev:TriplesMap_7adc4cb1-08ca-4fc4-9c50-de9d06b84120 rr:predicateObjectMap km-dev:PredicateObjectMap_3b0e728e-48ac-444e-9372-769f626ef8b6 .

km-dev:PredicateObjectMap_3b0e728e-48ac-444e-9372-769f626ef8b6 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_3b0e728e-48ac-444e-9372-769f626ef8b6 .

km-dev:TriplesMap_3bd15d32-3e67-430f-9ed2-349298a9e0b1 a rr:TriplesMap .

_:node197ml4mncx1 km-dev:hasTriplesMap km-dev:TriplesMap_3bd15d32-3e67-430f-9ed2-349298a9e0b1 .

km-dev:TriplesMap_3bd15d32-3e67-430f-9ed2-349298a9e0b1 km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx12 rr:tableName "stanford-features-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasLogicalTable _:node197ml4mncx12 .

km-dev:TriplesMap_3bd15d32-3e67-430f-9ed2-349298a9e0b1 rr:logicalTable _:node197ml4mncx12 ;
	rr:subjectMap _:node197ml4mncx13 .

_:node197ml4mncx1 km-dev:hasSubjectMap _:node197ml4mncx13 .

_:node197ml4mncx13 km-dev:isPartOfMapping _:node197ml4mncx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/FeatureCollection1" ;
	rr:class memex:FeatureCollection ;
	rr:template "{crawl_uri}/featurecollection" .

km-dev:PredicateObjectMap_05ca7267-4de4-495b-aee2-d62f4b163fde rr:predicate memex:person_name_feature .

km-dev:RefObjectMap_53b9363e-c7d8-4411-8f0f-3a8324502ff9 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_2f2aad6b-30dc-4536-b9cb-14e3466cf420 ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasObjectMap km-dev:RefObjectMap_53b9363e-c7d8-4411-8f0f-3a8324502ff9 .

km-dev:PredicateObjectMap_05ca7267-4de4-495b-aee2-d62f4b163fde rr:objectMap km-dev:RefObjectMap_53b9363e-c7d8-4411-8f0f-3a8324502ff9 .

km-dev:TriplesMap_3bd15d32-3e67-430f-9ed2-349298a9e0b1 rr:predicateObjectMap km-dev:PredicateObjectMap_05ca7267-4de4-495b-aee2-d62f4b163fde .

km-dev:PredicateObjectMap_05ca7267-4de4-495b-aee2-d62f4b163fde a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_05ca7267-4de4-495b-aee2-d62f4b163fde .

km-dev:TriplesMap_dfad14fe-5a1d-4b27-9733-43690a142c28 a rr:TriplesMap .

_:node197ml4mncx1 km-dev:hasTriplesMap km-dev:TriplesMap_dfad14fe-5a1d-4b27-9733-43690a142c28 .

km-dev:TriplesMap_dfad14fe-5a1d-4b27-9733-43690a142c28 km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx14 rr:tableName "stanford-features-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasLogicalTable _:node197ml4mncx14 .

km-dev:TriplesMap_dfad14fe-5a1d-4b27-9733-43690a142c28 rr:logicalTable _:node197ml4mncx14 ;
	rr:subjectMap _:node197ml4mncx15 .

_:node197ml4mncx1 km-dev:hasSubjectMap _:node197ml4mncx15 .

_:node197ml4mncx15 km-dev:isPartOfMapping _:node197ml4mncx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPage1" ;
	rr:class schema:WebPage ;
	rr:template "{crawl_uri}" .

km-dev:PredicateObjectMap_a043dc92-32d6-4584-94b1-c3985a94baa9 rr:predicate memex:hasFeatureCollection .

km-dev:RefObjectMap_d845ccf8-6394-488c-8797-b43c55fbcb61 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_3bd15d32-3e67-430f-9ed2-349298a9e0b1 ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasObjectMap km-dev:RefObjectMap_d845ccf8-6394-488c-8797-b43c55fbcb61 .

km-dev:PredicateObjectMap_a043dc92-32d6-4584-94b1-c3985a94baa9 rr:objectMap km-dev:RefObjectMap_d845ccf8-6394-488c-8797-b43c55fbcb61 .

km-dev:TriplesMap_dfad14fe-5a1d-4b27-9733-43690a142c28 rr:predicateObjectMap km-dev:PredicateObjectMap_a043dc92-32d6-4584-94b1-c3985a94baa9 .

km-dev:PredicateObjectMap_a043dc92-32d6-4584-94b1-c3985a94baa9 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node197ml4mncx1 .

_:node197ml4mncx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_a043dc92-32d6-4584-94b1-c3985a94baa9 .
