@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix schemax: <http://topbraid.org/schemax/> .
@prefix schema: <http://schema.org/> .
@prefix memex: <http://memexproxy.com/ontology/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix ht: <http://memexproxy.com/ontology/human-trafficking/> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix km-dev: <http://isi.edu/integration/karma/dev#> .

_:node19gs3k7nfx1 a km-dev:R2RMLMapping ;
		  km-dev:sourceName "select unix_timestamp(a.importtime)*1000 as timestamp, a.* from ads a  where a.id in (27127,27887,30..." ;
		  km-dev:modelPublicationTime "1426872475375"^^xsd:long ;
		  km-dev:modelVersion "1.7" ;
		  km-dev:hasInputColumns "[]" ;
		  km-dev:hasOutputColumns "[[{\"columnName\":\"project\"}]]" ;
		  km-dev:hasModelLabel "select unix_timestamp(a.importtime)*1000 as timestamp, a.* from ads a  where a.id in (27127,27887,30..." ;
		  km-dev:hasBaseURI "http://localhost:8080/source/" ;
		  km-dev:hasWorksheetHistory """[{
    \"tags\": [\"Transformation\"],
    \"inputParameters\": [
        {
            \"name\": \"hNodeId\",
            \"value\": [{\"columnName\": \"timestamp\"}],
            \"type\": \"hNodeId\"
        },
        {
            \"name\": \"worksheetId\",
            \"value\": \"W\",
            \"type\": \"worksheetId\"
        },
        {
            \"name\": \"selectionName\",
            \"value\": \"DEFAULT_TEST\",
            \"type\": \"other\"
        },
        {
            \"name\": \"newColumnName\",
            \"value\": \"project\",
            \"type\": \"other\"
        },
        {
            \"name\": \"transformationCode\",
            \"value\": \"return dtMkt(getValue(\\\"sources_id\\\"),\\ngetValue(\\\"url\\\"),\\ngetValue(\\\"title\\\"),\\ngetValue(\\\"city\\\"),\\ngetValue(\\\"state\\\"))\",
            \"type\": \"other\"
        },
        {
            \"name\": \"errorDefaultValue\",
            \"value\": \"\",
            \"type\": \"other\"
        },
        {
            \"name\": \"isJSONOutput\",
            \"value\": \"false\",
            \"type\": \"other\"
        },
        {
            \"name\": \"inputColumns\",
            \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"title\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"sources_id\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"city\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"state\\\"}]}]\",
            \"type\": \"hNodeIdList\"
        },
        {
            \"name\": \"outputColumns\",
            \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"project\\\"}]}]\",
            \"type\": \"hNodeIdList\"
        }
    ],
    \"commandName\": \"SubmitPythonTransformationCommand\"
}]""" .
