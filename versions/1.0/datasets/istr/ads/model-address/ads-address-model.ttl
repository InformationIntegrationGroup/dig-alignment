@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix schemax: <http://topbraid.org/schemax/> .
@prefix schema: <http://schema.org/> .
@prefix memex: <http://memexproxy.com/ontology/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix ht: <http://memexproxy.com/ontology/human-trafficking/> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix km-dev: <http://isi.edu/integration/karma/dev#> .

_:node1afhh6014x1 a km-dev:R2RMLMapping ;
	km-dev:sourceName "ads-addresses-sample.json" ;
	km-dev:modelPublicationTime "1459803586596"^^xsd:long ;
	km-dev:modelVersion "1.7" ;
	km-dev:hasInputColumns "[[{\"columnName\":\"id\"}],[{\"columnName\":\"url\"}],[{\"columnName\":\"timestamp\"}],[{\"columnName\":\"region\"}],[{\"columnName\":\"country\"}],[{\"columnName\":\"state\"}],[{\"columnName\":\"city\"}]]" ;
	km-dev:hasOutputColumns "[[{\"columnName\":\"address4\"}],[{\"columnName\":\"state_clean\"}],[{\"columnName\":\"crawl_uri\"}],[{\"columnName\":\"country_clean\"}],[{\"columnName\":\"featurecollection_uri\"}],[{\"columnName\":\"state_clean3\"}],[{\"columnName\":\"city_clean\"}],[{\"columnName\":\"country_code\"}],[{\"columnName\":\"address2\"}],[{\"columnName\":\"modetime_iso8601\"}],[{\"columnName\":\"address_uri\"}],[{\"columnName\":\"state_clean2\"}],[{\"columnName\":\"feature_uri\"}],[{\"columnName\":\"address\"}],[{\"columnName\":\"country_uri\"}],[{\"columnName\":\"city_clean2\"}],[{\"columnName\":\"city_clean3\"}],[{\"columnName\":\"address3\"}],[{\"columnName\":\"database_id\"}]]" ;
	km-dev:hasModelLabel "ads-addresses-sample.json" ;
	km-dev:hasBaseURI "http://dig.isi.edu/ht/data/" ;
	km-dev:hasWorksheetHistory """[
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"properties\",
                \"value\": {
                    \"hasServiceProperties\": false,
                    \"hasPrefix\": true,
                    \"prefix\": \"memex\",
                    \"graphLabel\": \"\",
                    \"hasBaseURI\": false
                },
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetWorksheetPropertiesCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"properties\",
                \"value\": {
                    \"hasServiceProperties\": false,
                    \"hasPrefix\": false,
                    \"graphLabel\": \"\",
                    \"hasBaseURI\": true,
                    \"baseURI\": \"http://dig.isi.edu/ht/data/\"
                },
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetWorksheetPropertiesCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"url\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"crawl_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return \\\"page/\\\"+get_url_hash(getValue(\\\"url\\\"))+\\\"/\\\"+getValue(\\\"timestamp\\\")+\\\"/processed\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"timestamp\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"crawl_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"text\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"featurecollection_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"crawl_uri\\\")+\\\"/featurecollection\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"crawl_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"modtime\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"modetime_iso8601\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"if getValue(\\\"address_uri\\\"):\\n  return iso8601date(getValue(\\\"modtime\\\"))\\nreturn ''\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"modetime_iso8601\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"city\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"city_clean\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_city(getValue(\\\"city\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"city\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"city_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"country\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"country_clean\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_country(getValue(\\\"country\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"country_clean\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"country_code\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return country_code(getValue(\\\"country\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_code\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"country_clean\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"state_clean\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"country = getValue(\\\"country_code\\\")\\nstate = remove_junk(getValue(\\\"state\\\"))\\nif len(state) == 0 and (country == \\\"US\\\" or country == \\\"CA\\\"):\\n   state = getValue(\\\"region\\\")\\nreturn clean_state(state, country)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"region\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"state\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"country_code\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"state_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"country_clean\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"country_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return country_uri(getValue(\\\"country\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"state_clean\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"address\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return feature_address(getValue(\\\"city_clean3\\\"), getValue(\\\"state_clean3\\\"), getValue(\\\"country_clean\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"address\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"address2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"address\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"address2\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"address_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return address_uri(getValue(\\\"city_clean\\\"), getValue(\\\"state_clean\\\"), getValue(\\\"country_clean\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"state_clean\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"country_clean\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"city_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"address_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"feature_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"uri = getValue(\\\"address_uri\\\")\\nif(len(uri) > 0):\\n    return getValue(\\\"featurecollection_uri\\\") + \\\"/\\\" + uri\\nreturn ''\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address_uri\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"modetime_iso8601\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"database_id\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"if getValue(\\\"address_uri\\\"):\\n  return getValue(\\\"id\\\")\\nreturn ''\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"id\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"address_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"database_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"city_clean\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"city_clean2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return remove_junk(getValue(\\\"city_clean\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"city_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"city_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"city_clean2\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"city_clean3\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return get_only_city_name(getValue(\\\"city_clean2\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"city_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"city_clean3\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"state_clean\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"state_clean2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return check_if_state(getValue('city_clean2'))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"city_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"state_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"state_clean2\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"state_clean3\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"state1 = getValue(\\\"state_clean\\\")\\nstate2 = getValue(\\\"state_clean2\\\")\\nif state1 != '':\\n    return state1\\nreturn state2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"state_clean\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"state_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"state_clean3\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"address\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"address3\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return feature_address(getValue(\\\"city_clean3\\\"), getValue(\\\"state_clean3\\\"), getValue(\\\"country_clean\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_clean\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"city_clean3\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"state_clean3\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address3\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"address3\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"address4\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue('address3')\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address3\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address4\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [
            \"Transformation\",
            \"IgnoreInBatch\"
        ],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"orderedColumns\",
                \"value\": [
                    {
                        \"id\": [{\"columnName\": \"timestamp\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"timestamp\"
                    },
                    {
                        \"id\": [{\"columnName\": \"id\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"id\"
                    },
                    {
                        \"id\": [{\"columnName\": \"first_id\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"first_id\"
                    },
                    {
                        \"id\": [{\"columnName\": \"sources_id\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"sources_id\"
                    },
                    {
                        \"id\": [{\"columnName\": \"incoming_id\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"incoming_id\"
                    },
                    {
                        \"id\": [{\"columnName\": \"url\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"url\"
                    },
                    {
                        \"id\": [{\"columnName\": \"crawl_uri\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"crawl_uri\"
                    },
                    {
                        \"id\": [{\"columnName\": \"title\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"title\"
                    },
                    {
                        \"id\": [{\"columnName\": \"text\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"text\"
                    },
                    {
                        \"id\": [{\"columnName\": \"featurecollection_uri\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"featurecollection_uri\"
                    },
                    {
                        \"id\": [{\"columnName\": \"type\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"type\"
                    },
                    {
                        \"id\": [{\"columnName\": \"sid\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"sid\"
                    },
                    {
                        \"id\": [{\"columnName\": \"region\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"region\"
                    },
                    {
                        \"id\": [{\"columnName\": \"city\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"city\"
                    },
                    {
                        \"id\": [{\"columnName\": \"city_clean\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"city_clean\"
                    },
                    {
                        \"id\": [{\"columnName\": \"city_clean2\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"city_clean2\"
                    },
                    {
                        \"id\": [{\"columnName\": \"city_clean3\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"city_clean3\"
                    },
                    {
                        \"id\": [{\"columnName\": \"state\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"state\"
                    },
                    {
                        \"id\": [{\"columnName\": \"country\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"country\"
                    },
                    {
                        \"id\": [{\"columnName\": \"country_clean\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"country_clean\"
                    },
                    {
                        \"id\": [{\"columnName\": \"country_uri\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"country_uri\"
                    },
                    {
                        \"id\": [{\"columnName\": \"state_clean\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"state_clean\"
                    },
                    {
                        \"id\": [{\"columnName\": \"state_clean2\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"state_clean2\"
                    },
                    {
                        \"id\": [{\"columnName\": \"state_clean3\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"state_clean3\"
                    },
                    {
                        \"id\": [{\"columnName\": \"address\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"address\"
                    },
                    {
                        \"id\": [{\"columnName\": \"address3\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"address3\"
                    },
                    {
                        \"id\": [{\"columnName\": \"address4\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"address4\"
                    },
                    {
                        \"id\": [{\"columnName\": \"address2\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"address2\"
                    },
                    {
                        \"id\": [{\"columnName\": \"address_uri\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"address_uri\"
                    },
                    {
                        \"id\": [{\"columnName\": \"feature_uri\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"feature_uri\"
                    },
                    {
                        \"id\": [{\"columnName\": \"country_code\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"country_code\"
                    },
                    {
                        \"id\": [{\"columnName\": \"phone\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"phone\"
                    },
                    {
                        \"id\": [{\"columnName\": \"age\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"age\"
                    },
                    {
                        \"id\": [{\"columnName\": \"website\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"website\"
                    },
                    {
                        \"id\": [{\"columnName\": \"email\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"email\"
                    },
                    {
                        \"id\": [{\"columnName\": \"gender\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"gender\"
                    },
                    {
                        \"id\": [{\"columnName\": \"service\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"service\"
                    },
                    {
                        \"id\": [{\"columnName\": \"posttime\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"posttime\"
                    },
                    {
                        \"id\": [{\"columnName\": \"importtime\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"importtime\"
                    },
                    {
                        \"id\": [{\"columnName\": \"modtime\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"modtime\"
                    },
                    {
                        \"id\": [{\"columnName\": \"modetime_iso8601\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"modetime_iso8601\"
                    },
                    {
                        \"id\": [{\"columnName\": \"database_id\"}],
                        \"visible\": true,
                        \"hideable\": false,
                        \"name\": \"database_id\"
                    },
                    {
                        \"id\": [{\"columnName\": \"snapshot\"}],
                        \"visible\": false,
                        \"hideable\": true,
                        \"name\": \"snapshot\"
                    }
                ],
                \"type\": \"orderedColumns\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"OrganizeColumnsCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"crawl_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/WebPage\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/WebPage1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:WebPage1 (add)\",
                    \"DomainId\": \"http://schema.org/WebPage1\",
                    \"DomainUri\": \"http://schema.org/WebPage\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"crawl_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"crawl_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"featurecollection_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/FeatureCollection\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/FeatureCollection1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"memex:FeatureCollection1 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"modetime_iso8601\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://www.w3.org/ns/prov#endedAtTime\",
                    \"DomainLabel\": \"prov:Activity1 (add)\",
                    \"DomainId\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"DomainUri\": \"http://www.w3.org/ns/prov#Activity\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"modetime_iso8601\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"modetime_iso8601\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"http://dig.isi.edu/ht/data/software/extractor/ist/version/unknown\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"place_postalAddress\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"country_clean\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://www.w3.org/2000/01/rdf-schema#label\",
                    \"DomainLabel\": \"schema:Country1 (add)\",
                    \"DomainId\": \"http://schema.org/Country1\",
                    \"DomainUri\": \"http://schema.org/Country\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"country_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/Country\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/Country1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:Country1\",
                    \"DomainId\": \"http://schema.org/Country1\",
                    \"DomainUri\": \"http://schema.org/Country\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"address_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/PostalAddress\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/PostalAddress1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:PostalAddress1\",
                    \"DomainId\": \"http://schema.org/PostalAddress1\",
                    \"DomainUri\": \"http://schema.org/PostalAddress\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"feature_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/Feature\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/Feature1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"database_id\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/databaseId\",
                    \"DomainLabel\": \"prov:Activity1\",
                    \"DomainId\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"DomainUri\": \"http://www.w3.org/ns/prov#Activity\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"database_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"database_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"country_code\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/isoCode\",
                    \"DomainLabel\": \"schema:Country1\",
                    \"DomainId\": \"http://schema.org/Country1\",
                    \"DomainUri\": \"http://schema.org/Country\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_code\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_code\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"city_clean3\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/addressLocality\",
                    \"DomainLabel\": \"schema:PostalAddress1\",
                    \"DomainId\": \"http://schema.org/PostalAddress1\",
                    \"DomainUri\": \"http://schema.org/PostalAddress\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"city_clean3\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"city_clean3\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"state_clean3\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://schema.org/addressRegion\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"schema:PostalAddress1\",
                    \"DomainId\": \"http://schema.org/PostalAddress1\",
                    \"DomainUri\": \"http://schema.org/PostalAddress\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"state_clean3\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"state_clean3\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"address3\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address3\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address3\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"address4\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://memexproxy.com/ontology/place_postalAddress\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address4\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address4\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://memexproxy.com/ontology/hasFeatureCollection\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceId\": \"http://schema.org/WebPage1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeId\": \"http://memexproxy.com/ontology/hasFeatureCollection\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceId\": \"http://schema.org/WebPage1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://dig.isi.edu/ht/data/software/extractor/ist/version/unknown\",
                    \"edgeId\": \"http://www.w3.org/ns/prov#wasAttributedTo\",
                    \"edgeTargetId\": \"http://dig.isi.edu/ht/data/software/extractor/ist/version/unknown1\",
                    \"edgeSourceId\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"edgeSourceUri\": \"http://www.w3.org/ns/prov#Activity\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP5:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"edgeId\": \"http://www.w3.org/ns/prov#wasGeneratedBy\",
                    \"edgeTargetId\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1 (add)\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP5:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPage\",
                    \"edgeId\": \"http://www.w3.org/ns/prov#wasDerivedFrom\",
                    \"edgeTargetId\": \"http://schema.org/WebPage1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP21:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/place_postalAddress_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"place_postalAddress\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"place_postalAddress1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP21:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/PostalAddress\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureObject\",
                    \"edgeTargetId\": \"http://schema.org/PostalAddress1 (add)\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/addressCountry\",
                    \"edgeTargetId\": \"http://schema.org/Country1\",
                    \"edgeSourceId\": \"http://schema.org/PostalAddress1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/addressCountry\",
                    \"edgeTargetId\": \"http://schema.org/Country1\",
                    \"edgeSourceId\": \"http://schema.org/PostalAddress1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    }
]""" .

km-dev:TriplesMap_f840a22a-79a8-4e2c-b17a-d7a07d076143 a rr:TriplesMap .

_:node1afhh6014x1 km-dev:hasTriplesMap km-dev:TriplesMap_f840a22a-79a8-4e2c-b17a-d7a07d076143 .

km-dev:TriplesMap_f840a22a-79a8-4e2c-b17a-d7a07d076143 km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x2 rr:tableName "ads-addresses-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasLogicalTable _:node1afhh6014x2 .

km-dev:TriplesMap_f840a22a-79a8-4e2c-b17a-d7a07d076143 rr:logicalTable _:node1afhh6014x2 ;
	rr:subjectMap _:node1afhh6014x3 .

_:node1afhh6014x1 km-dev:hasSubjectMap _:node1afhh6014x3 .

_:node1afhh6014x3 km-dev:isPartOfMapping _:node1afhh6014x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature1" ;
	rr:class memex:Feature ;
	rr:template "{feature_uri}" ;
	a km-dev:steinerTreeRootNode .

km-dev:PredicateObjectMap_367f84f7-c6d8-4229-84aa-044f70de7226 rr:predicate memex:featureObject .

km-dev:RefObjectMap_ac3b8d80-79ce-4d5a-b541-0bfb7d0b74f9 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_5888eec7-31e9-41dc-8454-e09894ba8b10 ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasObjectMap km-dev:RefObjectMap_ac3b8d80-79ce-4d5a-b541-0bfb7d0b74f9 .

km-dev:PredicateObjectMap_367f84f7-c6d8-4229-84aa-044f70de7226 rr:objectMap km-dev:RefObjectMap_ac3b8d80-79ce-4d5a-b541-0bfb7d0b74f9 .

km-dev:TriplesMap_f840a22a-79a8-4e2c-b17a-d7a07d076143 rr:predicateObjectMap km-dev:PredicateObjectMap_367f84f7-c6d8-4229-84aa-044f70de7226 .

km-dev:PredicateObjectMap_367f84f7-c6d8-4229-84aa-044f70de7226 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_367f84f7-c6d8-4229-84aa-044f70de7226 .

km-dev:PredicateObjectMap_c8c6d514-d062-4f67-9686-04288267164f rr:predicate prov:wasDerivedFrom .

km-dev:RefObjectMap_e13ff7db-0d39-498e-a2ca-4927593c1707 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_4323ce34-cee1-433d-94ec-d73be9199a41 ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasObjectMap km-dev:RefObjectMap_e13ff7db-0d39-498e-a2ca-4927593c1707 .

km-dev:PredicateObjectMap_c8c6d514-d062-4f67-9686-04288267164f rr:objectMap km-dev:RefObjectMap_e13ff7db-0d39-498e-a2ca-4927593c1707 .

km-dev:TriplesMap_f840a22a-79a8-4e2c-b17a-d7a07d076143 rr:predicateObjectMap km-dev:PredicateObjectMap_c8c6d514-d062-4f67-9686-04288267164f .

km-dev:PredicateObjectMap_c8c6d514-d062-4f67-9686-04288267164f a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_c8c6d514-d062-4f67-9686-04288267164f .

km-dev:PredicateObjectMap_9a9145be-b250-482e-9f71-28091c4de5aa rr:predicate prov:wasGeneratedBy .

km-dev:RefObjectMap_6e6520fb-a7e6-4d4f-9029-6c3bf1b1c08c a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_553b2b41-5c74-4a55-86e0-3e4ad5a378e7 ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasObjectMap km-dev:RefObjectMap_6e6520fb-a7e6-4d4f-9029-6c3bf1b1c08c .

km-dev:PredicateObjectMap_9a9145be-b250-482e-9f71-28091c4de5aa rr:objectMap km-dev:RefObjectMap_6e6520fb-a7e6-4d4f-9029-6c3bf1b1c08c .

km-dev:TriplesMap_f840a22a-79a8-4e2c-b17a-d7a07d076143 rr:predicateObjectMap km-dev:PredicateObjectMap_9a9145be-b250-482e-9f71-28091c4de5aa .

km-dev:PredicateObjectMap_9a9145be-b250-482e-9f71-28091c4de5aa a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_9a9145be-b250-482e-9f71-28091c4de5aa .

km-dev:PredicateObjectMap_c9ab3ea0-1b85-4890-9cce-0c1ebfe571f1 rr:predicate memex:place_postalAddress .

_:node1afhh6014x4 rr:column "address4" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasObjectMap _:node1afhh6014x4 .

km-dev:PredicateObjectMap_c9ab3ea0-1b85-4890-9cce-0c1ebfe571f1 rr:objectMap _:node1afhh6014x4 .

km-dev:TriplesMap_f840a22a-79a8-4e2c-b17a-d7a07d076143 rr:predicateObjectMap km-dev:PredicateObjectMap_c9ab3ea0-1b85-4890-9cce-0c1ebfe571f1 .

km-dev:PredicateObjectMap_c9ab3ea0-1b85-4890-9cce-0c1ebfe571f1 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_c9ab3ea0-1b85-4890-9cce-0c1ebfe571f1 .

km-dev:PredicateObjectMap_38807dc9-535d-4f66-88b4-aecc0a4ef7ea rr:predicate memex:featureValue .

_:node1afhh6014x5 rr:column "address3" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasObjectMap _:node1afhh6014x5 .

km-dev:PredicateObjectMap_38807dc9-535d-4f66-88b4-aecc0a4ef7ea rr:objectMap _:node1afhh6014x5 .

km-dev:TriplesMap_f840a22a-79a8-4e2c-b17a-d7a07d076143 rr:predicateObjectMap km-dev:PredicateObjectMap_38807dc9-535d-4f66-88b4-aecc0a4ef7ea .

km-dev:PredicateObjectMap_38807dc9-535d-4f66-88b4-aecc0a4ef7ea a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_38807dc9-535d-4f66-88b4-aecc0a4ef7ea .

km-dev:PredicateObjectMap_aeb75384-e2cd-4d8c-ab83-f20466d5eb10 rr:predicate memex:featureName .

_:node1afhh6014x6 rr:constant "place_postalAddress" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasObjectMap _:node1afhh6014x6 .

km-dev:PredicateObjectMap_aeb75384-e2cd-4d8c-ab83-f20466d5eb10 rr:objectMap _:node1afhh6014x6 .

km-dev:TriplesMap_f840a22a-79a8-4e2c-b17a-d7a07d076143 rr:predicateObjectMap km-dev:PredicateObjectMap_aeb75384-e2cd-4d8c-ab83-f20466d5eb10 .

km-dev:PredicateObjectMap_aeb75384-e2cd-4d8c-ab83-f20466d5eb10 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_aeb75384-e2cd-4d8c-ab83-f20466d5eb10 .

km-dev:TriplesMap_5888eec7-31e9-41dc-8454-e09894ba8b10 a rr:TriplesMap .

_:node1afhh6014x1 km-dev:hasTriplesMap km-dev:TriplesMap_5888eec7-31e9-41dc-8454-e09894ba8b10 .

km-dev:TriplesMap_5888eec7-31e9-41dc-8454-e09894ba8b10 km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x7 rr:tableName "ads-addresses-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasLogicalTable _:node1afhh6014x7 .

km-dev:TriplesMap_5888eec7-31e9-41dc-8454-e09894ba8b10 rr:logicalTable _:node1afhh6014x7 ;
	rr:subjectMap _:node1afhh6014x8 .

_:node1afhh6014x1 km-dev:hasSubjectMap _:node1afhh6014x8 .

_:node1afhh6014x8 km-dev:isPartOfMapping _:node1afhh6014x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/PostalAddress1" ;
	rr:class schema:PostalAddress ;
	rr:template "{address_uri}" .

km-dev:PredicateObjectMap_95a499da-95c0-478a-986d-3f712f23e971 rr:predicate schema:addressCountry .

km-dev:RefObjectMap_888c31d0-48d8-41e7-beb5-b7a533a82a6a a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_ae466cf6-3aac-48cf-957f-3aeda62b5083 ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasObjectMap km-dev:RefObjectMap_888c31d0-48d8-41e7-beb5-b7a533a82a6a .

km-dev:PredicateObjectMap_95a499da-95c0-478a-986d-3f712f23e971 rr:objectMap km-dev:RefObjectMap_888c31d0-48d8-41e7-beb5-b7a533a82a6a .

km-dev:TriplesMap_5888eec7-31e9-41dc-8454-e09894ba8b10 rr:predicateObjectMap km-dev:PredicateObjectMap_95a499da-95c0-478a-986d-3f712f23e971 .

km-dev:PredicateObjectMap_95a499da-95c0-478a-986d-3f712f23e971 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_95a499da-95c0-478a-986d-3f712f23e971 .

km-dev:PredicateObjectMap_920a044e-e00f-47c8-842c-05339639b83e rr:predicate schema:addressRegion .

_:node1afhh6014x9 rr:column "state_clean3" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasObjectMap _:node1afhh6014x9 .

km-dev:PredicateObjectMap_920a044e-e00f-47c8-842c-05339639b83e rr:objectMap _:node1afhh6014x9 .

km-dev:TriplesMap_5888eec7-31e9-41dc-8454-e09894ba8b10 rr:predicateObjectMap km-dev:PredicateObjectMap_920a044e-e00f-47c8-842c-05339639b83e .

km-dev:PredicateObjectMap_920a044e-e00f-47c8-842c-05339639b83e a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_920a044e-e00f-47c8-842c-05339639b83e .

km-dev:PredicateObjectMap_421b206b-d0cf-4f19-a3d8-107c2b573998 rr:predicate schema:addressLocality .

_:node1afhh6014x10 rr:column "city_clean3" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasObjectMap _:node1afhh6014x10 .

km-dev:PredicateObjectMap_421b206b-d0cf-4f19-a3d8-107c2b573998 rr:objectMap _:node1afhh6014x10 .

km-dev:TriplesMap_5888eec7-31e9-41dc-8454-e09894ba8b10 rr:predicateObjectMap km-dev:PredicateObjectMap_421b206b-d0cf-4f19-a3d8-107c2b573998 .

km-dev:PredicateObjectMap_421b206b-d0cf-4f19-a3d8-107c2b573998 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_421b206b-d0cf-4f19-a3d8-107c2b573998 .

km-dev:TriplesMap_4323ce34-cee1-433d-94ec-d73be9199a41 a rr:TriplesMap .

_:node1afhh6014x1 km-dev:hasTriplesMap km-dev:TriplesMap_4323ce34-cee1-433d-94ec-d73be9199a41 .

km-dev:TriplesMap_4323ce34-cee1-433d-94ec-d73be9199a41 km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x11 rr:tableName "ads-addresses-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasLogicalTable _:node1afhh6014x11 .

km-dev:TriplesMap_4323ce34-cee1-433d-94ec-d73be9199a41 rr:logicalTable _:node1afhh6014x11 ;
	rr:subjectMap _:node1afhh6014x12 .

_:node1afhh6014x1 km-dev:hasSubjectMap _:node1afhh6014x12 .

_:node1afhh6014x12 km-dev:isPartOfMapping _:node1afhh6014x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPage1" ;
	rr:class schema:WebPage ;
	rr:template "{crawl_uri}" .

km-dev:PredicateObjectMap_4f2610b8-796b-4993-a8fd-fdb8ab23a08c rr:predicate memex:hasFeatureCollection .

km-dev:RefObjectMap_65e9b451-76ff-40f7-85d1-5277caf4e434 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_ac82fff1-c549-4f18-826b-9ff2e4618c60 ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasObjectMap km-dev:RefObjectMap_65e9b451-76ff-40f7-85d1-5277caf4e434 .

km-dev:PredicateObjectMap_4f2610b8-796b-4993-a8fd-fdb8ab23a08c rr:objectMap km-dev:RefObjectMap_65e9b451-76ff-40f7-85d1-5277caf4e434 .

km-dev:TriplesMap_4323ce34-cee1-433d-94ec-d73be9199a41 rr:predicateObjectMap km-dev:PredicateObjectMap_4f2610b8-796b-4993-a8fd-fdb8ab23a08c .

km-dev:PredicateObjectMap_4f2610b8-796b-4993-a8fd-fdb8ab23a08c a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_4f2610b8-796b-4993-a8fd-fdb8ab23a08c .

km-dev:TriplesMap_553b2b41-5c74-4a55-86e0-3e4ad5a378e7 a rr:TriplesMap .

_:node1afhh6014x1 km-dev:hasTriplesMap km-dev:TriplesMap_553b2b41-5c74-4a55-86e0-3e4ad5a378e7 .

km-dev:TriplesMap_553b2b41-5c74-4a55-86e0-3e4ad5a378e7 km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x13 rr:tableName "ads-addresses-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasLogicalTable _:node1afhh6014x13 .

km-dev:TriplesMap_553b2b41-5c74-4a55-86e0-3e4ad5a378e7 rr:logicalTable _:node1afhh6014x13 ;
	rr:subjectMap _:node1afhh6014x14 .

_:node1afhh6014x1 km-dev:hasSubjectMap _:node1afhh6014x14 .

_:node1afhh6014x14 km-dev:isPartOfMapping _:node1afhh6014x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://www.w3.org/ns/prov#Activity1" ;
	rr:class prov:Activity ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "prov:Activity1" .

km-dev:PredicateObjectMap_48e0bc12-3f77-4889-a8e2-433dc4784e9b rr:predicate prov:endedAtTime .

_:node1afhh6014x15 rr:column "modetime_iso8601" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasObjectMap _:node1afhh6014x15 .

km-dev:PredicateObjectMap_48e0bc12-3f77-4889-a8e2-433dc4784e9b rr:objectMap _:node1afhh6014x15 .

km-dev:TriplesMap_553b2b41-5c74-4a55-86e0-3e4ad5a378e7 rr:predicateObjectMap km-dev:PredicateObjectMap_48e0bc12-3f77-4889-a8e2-433dc4784e9b .

km-dev:PredicateObjectMap_48e0bc12-3f77-4889-a8e2-433dc4784e9b a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_48e0bc12-3f77-4889-a8e2-433dc4784e9b .

km-dev:PredicateObjectMap_679a3ba7-132b-44ce-a1a7-b40780c52bfd rr:predicate memex:databaseId .

_:node1afhh6014x16 rr:column "database_id" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasObjectMap _:node1afhh6014x16 .

km-dev:PredicateObjectMap_679a3ba7-132b-44ce-a1a7-b40780c52bfd rr:objectMap _:node1afhh6014x16 .

km-dev:TriplesMap_553b2b41-5c74-4a55-86e0-3e4ad5a378e7 rr:predicateObjectMap km-dev:PredicateObjectMap_679a3ba7-132b-44ce-a1a7-b40780c52bfd .

km-dev:PredicateObjectMap_679a3ba7-132b-44ce-a1a7-b40780c52bfd a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_679a3ba7-132b-44ce-a1a7-b40780c52bfd .

km-dev:PredicateObjectMap_6b2f2f44-3236-47fc-b94a-3c3ef9ff3edb rr:predicate prov:wasAttributedTo .

_:node1afhh6014x17 rr:constant <http://dig.isi.edu/ht/data/software/extractor/ist/version/unknown> ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasObjectMap _:node1afhh6014x17 .

km-dev:PredicateObjectMap_6b2f2f44-3236-47fc-b94a-3c3ef9ff3edb rr:objectMap _:node1afhh6014x17 .

km-dev:TriplesMap_553b2b41-5c74-4a55-86e0-3e4ad5a378e7 rr:predicateObjectMap km-dev:PredicateObjectMap_6b2f2f44-3236-47fc-b94a-3c3ef9ff3edb .

km-dev:PredicateObjectMap_6b2f2f44-3236-47fc-b94a-3c3ef9ff3edb a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_6b2f2f44-3236-47fc-b94a-3c3ef9ff3edb .

km-dev:TriplesMap_ae466cf6-3aac-48cf-957f-3aeda62b5083 a rr:TriplesMap .

_:node1afhh6014x1 km-dev:hasTriplesMap km-dev:TriplesMap_ae466cf6-3aac-48cf-957f-3aeda62b5083 .

km-dev:TriplesMap_ae466cf6-3aac-48cf-957f-3aeda62b5083 km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x18 rr:tableName "ads-addresses-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasLogicalTable _:node1afhh6014x18 .

km-dev:TriplesMap_ae466cf6-3aac-48cf-957f-3aeda62b5083 rr:logicalTable _:node1afhh6014x18 ;
	rr:subjectMap _:node1afhh6014x19 .

_:node1afhh6014x1 km-dev:hasSubjectMap _:node1afhh6014x19 .

_:node1afhh6014x19 km-dev:isPartOfMapping _:node1afhh6014x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/Country1" ;
	rr:class schema:Country ;
	rr:template "{country_uri}" .

km-dev:PredicateObjectMap_1f035b52-823a-42fb-8a50-a80492419957 rr:predicate rdfs:label .

_:node1afhh6014x20 rr:column "country_clean" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasObjectMap _:node1afhh6014x20 .

km-dev:PredicateObjectMap_1f035b52-823a-42fb-8a50-a80492419957 rr:objectMap _:node1afhh6014x20 .

km-dev:TriplesMap_ae466cf6-3aac-48cf-957f-3aeda62b5083 rr:predicateObjectMap km-dev:PredicateObjectMap_1f035b52-823a-42fb-8a50-a80492419957 .

km-dev:PredicateObjectMap_1f035b52-823a-42fb-8a50-a80492419957 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_1f035b52-823a-42fb-8a50-a80492419957 .

km-dev:PredicateObjectMap_aab436be-0684-47b0-96ef-cac30964e78b rr:predicate memex:isoCode .

_:node1afhh6014x21 rr:column "country_code" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasObjectMap _:node1afhh6014x21 .

km-dev:PredicateObjectMap_aab436be-0684-47b0-96ef-cac30964e78b rr:objectMap _:node1afhh6014x21 .

km-dev:TriplesMap_ae466cf6-3aac-48cf-957f-3aeda62b5083 rr:predicateObjectMap km-dev:PredicateObjectMap_aab436be-0684-47b0-96ef-cac30964e78b .

km-dev:PredicateObjectMap_aab436be-0684-47b0-96ef-cac30964e78b a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_aab436be-0684-47b0-96ef-cac30964e78b .

km-dev:TriplesMap_ac82fff1-c549-4f18-826b-9ff2e4618c60 a rr:TriplesMap .

_:node1afhh6014x1 km-dev:hasTriplesMap km-dev:TriplesMap_ac82fff1-c549-4f18-826b-9ff2e4618c60 .

km-dev:TriplesMap_ac82fff1-c549-4f18-826b-9ff2e4618c60 km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x22 rr:tableName "ads-addresses-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasLogicalTable _:node1afhh6014x22 .

km-dev:TriplesMap_ac82fff1-c549-4f18-826b-9ff2e4618c60 rr:logicalTable _:node1afhh6014x22 ;
	rr:subjectMap _:node1afhh6014x23 .

_:node1afhh6014x1 km-dev:hasSubjectMap _:node1afhh6014x23 .

_:node1afhh6014x23 km-dev:isPartOfMapping _:node1afhh6014x1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/FeatureCollection1" ;
	rr:class memex:FeatureCollection ;
	rr:template "{crawl_uri}/featurecollection" .

km-dev:PredicateObjectMap_64e35673-6e1a-447e-aa6d-68234ffab87a rr:predicate memex:place_postalAddress_feature .

km-dev:RefObjectMap_ffb86a6f-ab47-4b08-aa55-728af6c788dd a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_f840a22a-79a8-4e2c-b17a-d7a07d076143 ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasObjectMap km-dev:RefObjectMap_ffb86a6f-ab47-4b08-aa55-728af6c788dd .

km-dev:PredicateObjectMap_64e35673-6e1a-447e-aa6d-68234ffab87a rr:objectMap km-dev:RefObjectMap_ffb86a6f-ab47-4b08-aa55-728af6c788dd .

km-dev:TriplesMap_ac82fff1-c549-4f18-826b-9ff2e4618c60 rr:predicateObjectMap km-dev:PredicateObjectMap_64e35673-6e1a-447e-aa6d-68234ffab87a .

km-dev:PredicateObjectMap_64e35673-6e1a-447e-aa6d-68234ffab87a a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1afhh6014x1 .

_:node1afhh6014x1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_64e35673-6e1a-447e-aa6d-68234ffab87a .
