@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix schemax: <http://topbraid.org/schemax/> .
@prefix schema: <http://schema.org/> .
@prefix memex: <http://memexproxy.com/ontology/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix ht: <http://memexproxy.com/ontology/human-trafficking/> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix km-dev: <http://isi.edu/integration/karma/dev#> .

_:node1aellls1jx1 a km-dev:R2RMLMapping ;
	km-dev:sourceName "ads-addresses-sample.json" ;
	km-dev:modelPublicationTime "1458868777011"^^xsd:long ;
	km-dev:modelVersion "1.7" ;
	km-dev:hasInputColumns "[[{\"columnName\":\"city\"}],[{\"columnName\":\"url\"}],[{\"columnName\":\"region\"}],[{\"columnName\":\"state\"}],[{\"columnName\":\"timestamp\"}],[{\"columnName\":\"id\"}],[{\"columnName\":\"country\"}]]" ;
	km-dev:hasOutputColumns "[[{\"columnName\":\"state_clean\"}],[{\"columnName\":\"country_uri\"}],[{\"columnName\":\"city_clean2\"}],[{\"columnName\":\"crawl_uri\"}],[{\"columnName\":\"modetime_iso8601\"}],[{\"columnName\":\"address\"}],[{\"columnName\":\"country_clean\"}],[{\"columnName\":\"featurecollection_uri\"}],[{\"columnName\":\"country_code\"}],[{\"columnName\":\"state_clean2\"}],[{\"columnName\":\"state_clean3\"}],[{\"columnName\":\"address_uri\"}],[{\"columnName\":\"address2\"}],[{\"columnName\":\"feature_uri\"}],[{\"columnName\":\"city_clean\"}],[{\"columnName\":\"database_id\"}],[{\"columnName\":\"city_clean3\"}]]" ;
	km-dev:hasModelLabel "ads-addresses-sample.json" ;
	km-dev:hasBaseURI "http://dig.isi.edu/ht/data/" ;
	km-dev:hasWorksheetHistory """[
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"properties\",
                \"value\": {
                    \"hasServiceProperties\": false,
                    \"hasPrefix\": true,
                    \"prefix\": \"memex\",
                    \"graphLabel\": \"\",
                    \"hasBaseURI\": false
                },
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetWorksheetPropertiesCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"properties\",
                \"value\": {
                    \"hasServiceProperties\": false,
                    \"hasPrefix\": false,
                    \"graphLabel\": \"\",
                    \"hasBaseURI\": true,
                    \"baseURI\": \"http://dig.isi.edu/ht/data/\"
                },
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetWorksheetPropertiesCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"url\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"crawl_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return \\\"page/\\\"+get_url_hash(getValue(\\\"url\\\"))+\\\"/\\\"+getValue(\\\"timestamp\\\")+\\\"/processed\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"timestamp\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"crawl_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"text\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"featurecollection_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"crawl_uri\\\")+\\\"/featurecollection\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"crawl_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"modtime\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"modetime_iso8601\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"if getValue(\\\"address_uri\\\"):\\n  return iso8601date(getValue(\\\"modtime\\\"))\\nreturn ''\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"modetime_iso8601\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"city\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"city_clean\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_city(getValue(\\\"city\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"city\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"city_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"country\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"country_clean\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_country(getValue(\\\"country\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"country_clean\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"country_code\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return country_code(getValue(\\\"country\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_code\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"country_clean\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"state_clean\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"country = getValue(\\\"country_code\\\")\\nstate = remove_junk(getValue(\\\"state\\\"))\\nif len(state) == 0 and (country == \\\"US\\\" or country == \\\"CA\\\"):\\n   state = getValue(\\\"region\\\")\\nreturn clean_state(state, country)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"region\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"state\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"country_code\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"state_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"country_clean\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"country_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return country_uri(getValue(\\\"country\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"state_clean\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"address\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return feature_address(getValue(\\\"city_clean\\\"), getValue(\\\"state_clean\\\"), getValue(\\\"country_clean\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"state_clean\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"city_clean\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"country_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"address\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"address2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"address\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"address2\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"address_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return address_uri(getValue(\\\"city_clean\\\"), getValue(\\\"state_clean\\\"), getValue(\\\"country_clean\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"state_clean\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"city_clean\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"country_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"address_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"feature_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"uri = getValue(\\\"address_uri\\\")\\nif(len(uri) > 0):\\n    return getValue(\\\"featurecollection_uri\\\") + \\\"/\\\" + uri\\nreturn ''\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address_uri\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"modetime_iso8601\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"database_id\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"if getValue(\\\"address_uri\\\"):\\n  return getValue(\\\"id\\\")\\nreturn ''\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address_uri\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"database_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"city_clean\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"city_clean2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return remove_junk(getValue(\\\"city_clean\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"city_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"city_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"city_clean2\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"city_clean3\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return get_only_city_name(getValue(\\\"city_clean2\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"city_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"city_clean3\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"state_clean\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"state_clean2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return check_if_state(getValue('city_clean2'))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"city_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"state_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"state_clean2\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"state_clean3\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"state1 = getValue(\\\"state_clean\\\")\\nstate2 = getValue(\\\"state_clean2\\\")\\nif state1 != '':\\n    return state1\\nreturn state2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"state_clean2\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"state_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"state_clean3\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"crawl_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/WebPage\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/WebPage1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:WebPage1 (add)\",
                    \"DomainId\": \"http://schema.org/WebPage1\",
                    \"DomainUri\": \"http://schema.org/WebPage\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"crawl_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"crawl_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"featurecollection_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/FeatureCollection\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/FeatureCollection1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"memex:FeatureCollection1 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"modetime_iso8601\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://www.w3.org/ns/prov#endedAtTime\",
                    \"DomainLabel\": \"prov:Activity1 (add)\",
                    \"DomainId\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"DomainUri\": \"http://www.w3.org/ns/prov#Activity\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"modetime_iso8601\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"modetime_iso8601\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"http://dig.isi.edu/ht/data/software/extractor/ist/version/unknown\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"place_postalAddress\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"address\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"address2\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/place_postalAddress\",
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"country_clean\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://www.w3.org/2000/01/rdf-schema#label\",
                    \"DomainLabel\": \"schema:Country1 (add)\",
                    \"DomainId\": \"http://schema.org/Country1\",
                    \"DomainUri\": \"http://schema.org/Country\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"country_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/Country\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/Country1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:Country1\",
                    \"DomainId\": \"http://schema.org/Country1\",
                    \"DomainUri\": \"http://schema.org/Country\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"address_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/PostalAddress\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/PostalAddress1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:PostalAddress1\",
                    \"DomainId\": \"http://schema.org/PostalAddress1\",
                    \"DomainUri\": \"http://schema.org/PostalAddress\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"address_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"feature_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/Feature\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/Feature1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"database_id\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/databaseId\",
                    \"DomainLabel\": \"prov:Activity1\",
                    \"DomainId\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"DomainUri\": \"http://www.w3.org/ns/prov#Activity\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"database_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"database_id\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"country_code\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/isoCode\",
                    \"DomainLabel\": \"schema:Country1\",
                    \"DomainId\": \"http://schema.org/Country1\",
                    \"DomainUri\": \"http://schema.org/Country\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_code\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_code\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"city_clean3\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/addressLocality\",
                    \"DomainLabel\": \"schema:PostalAddress1\",
                    \"DomainId\": \"http://schema.org/PostalAddress1\",
                    \"DomainUri\": \"http://schema.org/PostalAddress\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"city_clean3\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"city_clean3\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"SemanticType\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"state_clean3\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://schema.org/addressRegion\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"schema:PostalAddress1\",
                    \"DomainId\": \"http://schema.org/PostalAddress1\",
                    \"DomainUri\": \"http://schema.org/PostalAddress\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"state_clean3\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"state_clean3\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://memexproxy.com/ontology/hasFeatureCollection\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceId\": \"http://schema.org/WebPage1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeId\": \"http://memexproxy.com/ontology/hasFeatureCollection\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceId\": \"http://schema.org/WebPage1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://dig.isi.edu/ht/data/software/extractor/ist/version/unknown\",
                    \"edgeId\": \"http://www.w3.org/ns/prov#wasAttributedTo\",
                    \"edgeTargetId\": \"http://dig.isi.edu/ht/data/software/extractor/ist/version/unknown1\",
                    \"edgeSourceId\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"edgeSourceUri\": \"http://www.w3.org/ns/prov#Activity\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP5:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"edgeId\": \"http://www.w3.org/ns/prov#wasGeneratedBy\",
                    \"edgeTargetId\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1 (add)\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP5:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPage\",
                    \"edgeId\": \"http://www.w3.org/ns/prov#wasDerivedFrom\",
                    \"edgeTargetId\": \"http://schema.org/WebPage1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP21:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature\",
                    \"edgeId\": \"http://memexproxy.com/ontology/place_postalAddress_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"place_postalAddress\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"place_postalAddress1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP21:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/PostalAddress\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureObject\",
                    \"edgeTargetId\": \"http://schema.org/PostalAddress1 (add)\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/addressCountry\",
                    \"edgeTargetId\": \"http://schema.org/Country1\",
                    \"edgeSourceId\": \"http://schema.org/PostalAddress1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeId\": \"http://schema.org/addressCountry\",
                    \"edgeTargetId\": \"http://schema.org/Country1\",
                    \"edgeSourceId\": \"http://schema.org/PostalAddress1\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    }
]""" .

km-dev:TriplesMap_d387a282-6cf4-4d5a-a94d-6f20859f32c6 a rr:TriplesMap .

_:node1aellls1jx1 km-dev:hasTriplesMap km-dev:TriplesMap_d387a282-6cf4-4d5a-a94d-6f20859f32c6 .

km-dev:TriplesMap_d387a282-6cf4-4d5a-a94d-6f20859f32c6 km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx2 rr:tableName "ads-addresses-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasLogicalTable _:node1aellls1jx2 .

km-dev:TriplesMap_d387a282-6cf4-4d5a-a94d-6f20859f32c6 rr:logicalTable _:node1aellls1jx2 ;
	rr:subjectMap _:node1aellls1jx3 .

_:node1aellls1jx1 km-dev:hasSubjectMap _:node1aellls1jx3 .

_:node1aellls1jx3 km-dev:isPartOfMapping _:node1aellls1jx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature1" ;
	rr:class memex:Feature ;
	rr:template "{feature_uri}" ;
	a km-dev:steinerTreeRootNode .

km-dev:PredicateObjectMap_5ce93ad0-6de8-4dc8-a0cf-b38ee5552d58 rr:predicate memex:featureObject .

km-dev:RefObjectMap_7eb0dba6-38a1-4265-ba66-d9e3033eb8a0 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_ff8ec869-386c-4069-95ed-1430af03832c ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasObjectMap km-dev:RefObjectMap_7eb0dba6-38a1-4265-ba66-d9e3033eb8a0 .

km-dev:PredicateObjectMap_5ce93ad0-6de8-4dc8-a0cf-b38ee5552d58 rr:objectMap km-dev:RefObjectMap_7eb0dba6-38a1-4265-ba66-d9e3033eb8a0 .

km-dev:TriplesMap_d387a282-6cf4-4d5a-a94d-6f20859f32c6 rr:predicateObjectMap km-dev:PredicateObjectMap_5ce93ad0-6de8-4dc8-a0cf-b38ee5552d58 .

km-dev:PredicateObjectMap_5ce93ad0-6de8-4dc8-a0cf-b38ee5552d58 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_5ce93ad0-6de8-4dc8-a0cf-b38ee5552d58 .

km-dev:PredicateObjectMap_15262d59-9dea-4218-8c98-d551411beeff rr:predicate prov:wasDerivedFrom .

km-dev:RefObjectMap_f0840619-5b59-45f9-b782-16dc1e030e96 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_1bec02b3-f08d-407c-a127-e06c1175b2a9 ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasObjectMap km-dev:RefObjectMap_f0840619-5b59-45f9-b782-16dc1e030e96 .

km-dev:PredicateObjectMap_15262d59-9dea-4218-8c98-d551411beeff rr:objectMap km-dev:RefObjectMap_f0840619-5b59-45f9-b782-16dc1e030e96 .

km-dev:TriplesMap_d387a282-6cf4-4d5a-a94d-6f20859f32c6 rr:predicateObjectMap km-dev:PredicateObjectMap_15262d59-9dea-4218-8c98-d551411beeff .

km-dev:PredicateObjectMap_15262d59-9dea-4218-8c98-d551411beeff a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_15262d59-9dea-4218-8c98-d551411beeff .

km-dev:PredicateObjectMap_d6a72883-e7c7-42b2-8294-99915d2cd7a8 rr:predicate prov:wasGeneratedBy .

km-dev:RefObjectMap_a8f40586-80c2-4f05-8054-e036d84babb5 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_d9091a1c-1f29-4982-a57b-ecef6af772ef ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasObjectMap km-dev:RefObjectMap_a8f40586-80c2-4f05-8054-e036d84babb5 .

km-dev:PredicateObjectMap_d6a72883-e7c7-42b2-8294-99915d2cd7a8 rr:objectMap km-dev:RefObjectMap_a8f40586-80c2-4f05-8054-e036d84babb5 .

km-dev:TriplesMap_d387a282-6cf4-4d5a-a94d-6f20859f32c6 rr:predicateObjectMap km-dev:PredicateObjectMap_d6a72883-e7c7-42b2-8294-99915d2cd7a8 .

km-dev:PredicateObjectMap_d6a72883-e7c7-42b2-8294-99915d2cd7a8 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_d6a72883-e7c7-42b2-8294-99915d2cd7a8 .

km-dev:PredicateObjectMap_56e0e4e7-526c-4f14-8a07-194d5376a7ba rr:predicate memex:featureValue .

_:node1aellls1jx4 rr:column "address" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasObjectMap _:node1aellls1jx4 .

km-dev:PredicateObjectMap_56e0e4e7-526c-4f14-8a07-194d5376a7ba rr:objectMap _:node1aellls1jx4 .

km-dev:TriplesMap_d387a282-6cf4-4d5a-a94d-6f20859f32c6 rr:predicateObjectMap km-dev:PredicateObjectMap_56e0e4e7-526c-4f14-8a07-194d5376a7ba .

km-dev:PredicateObjectMap_56e0e4e7-526c-4f14-8a07-194d5376a7ba a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_56e0e4e7-526c-4f14-8a07-194d5376a7ba .

km-dev:PredicateObjectMap_7e4d7b2b-62f9-4f33-8e1d-95e10688aac1 rr:predicate memex:place_postalAddress .

_:node1aellls1jx5 rr:column "address" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasObjectMap _:node1aellls1jx5 .

km-dev:PredicateObjectMap_7e4d7b2b-62f9-4f33-8e1d-95e10688aac1 rr:objectMap _:node1aellls1jx5 .

km-dev:TriplesMap_d387a282-6cf4-4d5a-a94d-6f20859f32c6 rr:predicateObjectMap km-dev:PredicateObjectMap_7e4d7b2b-62f9-4f33-8e1d-95e10688aac1 .

km-dev:PredicateObjectMap_7e4d7b2b-62f9-4f33-8e1d-95e10688aac1 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_7e4d7b2b-62f9-4f33-8e1d-95e10688aac1 .

km-dev:PredicateObjectMap_46802e01-1b57-4921-a877-ef3d77ce5d2a rr:predicate memex:featureName .

_:node1aellls1jx6 rr:constant "place_postalAddress" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasObjectMap _:node1aellls1jx6 .

km-dev:PredicateObjectMap_46802e01-1b57-4921-a877-ef3d77ce5d2a rr:objectMap _:node1aellls1jx6 .

km-dev:TriplesMap_d387a282-6cf4-4d5a-a94d-6f20859f32c6 rr:predicateObjectMap km-dev:PredicateObjectMap_46802e01-1b57-4921-a877-ef3d77ce5d2a .

km-dev:PredicateObjectMap_46802e01-1b57-4921-a877-ef3d77ce5d2a a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_46802e01-1b57-4921-a877-ef3d77ce5d2a .

km-dev:TriplesMap_ff8ec869-386c-4069-95ed-1430af03832c a rr:TriplesMap .

_:node1aellls1jx1 km-dev:hasTriplesMap km-dev:TriplesMap_ff8ec869-386c-4069-95ed-1430af03832c .

km-dev:TriplesMap_ff8ec869-386c-4069-95ed-1430af03832c km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx7 rr:tableName "ads-addresses-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasLogicalTable _:node1aellls1jx7 .

km-dev:TriplesMap_ff8ec869-386c-4069-95ed-1430af03832c rr:logicalTable _:node1aellls1jx7 ;
	rr:subjectMap _:node1aellls1jx8 .

_:node1aellls1jx1 km-dev:hasSubjectMap _:node1aellls1jx8 .

_:node1aellls1jx8 km-dev:isPartOfMapping _:node1aellls1jx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/PostalAddress1" ;
	rr:class schema:PostalAddress ;
	rr:template "{address_uri}" .

km-dev:PredicateObjectMap_3f83175b-dd50-4668-8eec-1b12a8dc678d rr:predicate schema:addressCountry .

km-dev:RefObjectMap_bce5a14f-f6a2-4b59-bd27-4fd657b93536 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_3d556fda-ae47-4a80-bd83-883b4ac8a5c6 ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasObjectMap km-dev:RefObjectMap_bce5a14f-f6a2-4b59-bd27-4fd657b93536 .

km-dev:PredicateObjectMap_3f83175b-dd50-4668-8eec-1b12a8dc678d rr:objectMap km-dev:RefObjectMap_bce5a14f-f6a2-4b59-bd27-4fd657b93536 .

km-dev:TriplesMap_ff8ec869-386c-4069-95ed-1430af03832c rr:predicateObjectMap km-dev:PredicateObjectMap_3f83175b-dd50-4668-8eec-1b12a8dc678d .

km-dev:PredicateObjectMap_3f83175b-dd50-4668-8eec-1b12a8dc678d a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_3f83175b-dd50-4668-8eec-1b12a8dc678d .

km-dev:PredicateObjectMap_10cb5aa9-28d1-44ad-8b78-55290650464f rr:predicate schema:addressRegion .

_:node1aellls1jx9 rr:column "state_clean3" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasObjectMap _:node1aellls1jx9 .

km-dev:PredicateObjectMap_10cb5aa9-28d1-44ad-8b78-55290650464f rr:objectMap _:node1aellls1jx9 .

km-dev:TriplesMap_ff8ec869-386c-4069-95ed-1430af03832c rr:predicateObjectMap km-dev:PredicateObjectMap_10cb5aa9-28d1-44ad-8b78-55290650464f .

km-dev:PredicateObjectMap_10cb5aa9-28d1-44ad-8b78-55290650464f a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_10cb5aa9-28d1-44ad-8b78-55290650464f .

km-dev:PredicateObjectMap_a2b83240-fdb8-4f46-8e76-814a556183cb rr:predicate schema:addressLocality .

_:node1aellls1jx10 rr:column "city_clean3" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasObjectMap _:node1aellls1jx10 .

km-dev:PredicateObjectMap_a2b83240-fdb8-4f46-8e76-814a556183cb rr:objectMap _:node1aellls1jx10 .

km-dev:TriplesMap_ff8ec869-386c-4069-95ed-1430af03832c rr:predicateObjectMap km-dev:PredicateObjectMap_a2b83240-fdb8-4f46-8e76-814a556183cb .

km-dev:PredicateObjectMap_a2b83240-fdb8-4f46-8e76-814a556183cb a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_a2b83240-fdb8-4f46-8e76-814a556183cb .

km-dev:TriplesMap_1bec02b3-f08d-407c-a127-e06c1175b2a9 a rr:TriplesMap .

_:node1aellls1jx1 km-dev:hasTriplesMap km-dev:TriplesMap_1bec02b3-f08d-407c-a127-e06c1175b2a9 .

km-dev:TriplesMap_1bec02b3-f08d-407c-a127-e06c1175b2a9 km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx11 rr:tableName "ads-addresses-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasLogicalTable _:node1aellls1jx11 .

km-dev:TriplesMap_1bec02b3-f08d-407c-a127-e06c1175b2a9 rr:logicalTable _:node1aellls1jx11 ;
	rr:subjectMap _:node1aellls1jx12 .

_:node1aellls1jx1 km-dev:hasSubjectMap _:node1aellls1jx12 .

_:node1aellls1jx12 km-dev:isPartOfMapping _:node1aellls1jx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPage1" ;
	rr:class schema:WebPage ;
	rr:template "{crawl_uri}" .

km-dev:PredicateObjectMap_9a442c8a-2b9a-4b99-8b92-d9fc23383fe6 rr:predicate memex:hasFeatureCollection .

km-dev:RefObjectMap_4a8a63ff-8190-4b3f-ac61-53db21289415 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_5f14ff3c-ee85-48df-ac69-ef70ec643f4a ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasObjectMap km-dev:RefObjectMap_4a8a63ff-8190-4b3f-ac61-53db21289415 .

km-dev:PredicateObjectMap_9a442c8a-2b9a-4b99-8b92-d9fc23383fe6 rr:objectMap km-dev:RefObjectMap_4a8a63ff-8190-4b3f-ac61-53db21289415 .

km-dev:TriplesMap_1bec02b3-f08d-407c-a127-e06c1175b2a9 rr:predicateObjectMap km-dev:PredicateObjectMap_9a442c8a-2b9a-4b99-8b92-d9fc23383fe6 .

km-dev:PredicateObjectMap_9a442c8a-2b9a-4b99-8b92-d9fc23383fe6 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_9a442c8a-2b9a-4b99-8b92-d9fc23383fe6 .

km-dev:TriplesMap_d9091a1c-1f29-4982-a57b-ecef6af772ef a rr:TriplesMap .

_:node1aellls1jx1 km-dev:hasTriplesMap km-dev:TriplesMap_d9091a1c-1f29-4982-a57b-ecef6af772ef .

km-dev:TriplesMap_d9091a1c-1f29-4982-a57b-ecef6af772ef km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx13 rr:tableName "ads-addresses-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasLogicalTable _:node1aellls1jx13 .

km-dev:TriplesMap_d9091a1c-1f29-4982-a57b-ecef6af772ef rr:logicalTable _:node1aellls1jx13 ;
	rr:subjectMap _:node1aellls1jx14 .

_:node1aellls1jx1 km-dev:hasSubjectMap _:node1aellls1jx14 .

_:node1aellls1jx14 km-dev:isPartOfMapping _:node1aellls1jx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://www.w3.org/ns/prov#Activity1" ;
	rr:class prov:Activity ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "prov:Activity1" .

km-dev:PredicateObjectMap_5d23f429-92d7-4889-a31f-556a0de27a3c rr:predicate prov:endedAtTime .

_:node1aellls1jx15 rr:column "modetime_iso8601" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasObjectMap _:node1aellls1jx15 .

km-dev:PredicateObjectMap_5d23f429-92d7-4889-a31f-556a0de27a3c rr:objectMap _:node1aellls1jx15 .

km-dev:TriplesMap_d9091a1c-1f29-4982-a57b-ecef6af772ef rr:predicateObjectMap km-dev:PredicateObjectMap_5d23f429-92d7-4889-a31f-556a0de27a3c .

km-dev:PredicateObjectMap_5d23f429-92d7-4889-a31f-556a0de27a3c a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_5d23f429-92d7-4889-a31f-556a0de27a3c .

km-dev:PredicateObjectMap_bd42d17c-66cb-4ccb-b97c-2609211804a0 rr:predicate memex:databaseId .

_:node1aellls1jx16 rr:column "database_id" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasObjectMap _:node1aellls1jx16 .

km-dev:PredicateObjectMap_bd42d17c-66cb-4ccb-b97c-2609211804a0 rr:objectMap _:node1aellls1jx16 .

km-dev:TriplesMap_d9091a1c-1f29-4982-a57b-ecef6af772ef rr:predicateObjectMap km-dev:PredicateObjectMap_bd42d17c-66cb-4ccb-b97c-2609211804a0 .

km-dev:PredicateObjectMap_bd42d17c-66cb-4ccb-b97c-2609211804a0 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_bd42d17c-66cb-4ccb-b97c-2609211804a0 .

km-dev:PredicateObjectMap_c7b01882-e9db-49cc-96f1-f346c634d24e rr:predicate prov:wasAttributedTo .

_:node1aellls1jx17 rr:constant <http://dig.isi.edu/ht/data/software/extractor/ist/version/unknown> ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasObjectMap _:node1aellls1jx17 .

km-dev:PredicateObjectMap_c7b01882-e9db-49cc-96f1-f346c634d24e rr:objectMap _:node1aellls1jx17 .

km-dev:TriplesMap_d9091a1c-1f29-4982-a57b-ecef6af772ef rr:predicateObjectMap km-dev:PredicateObjectMap_c7b01882-e9db-49cc-96f1-f346c634d24e .

km-dev:PredicateObjectMap_c7b01882-e9db-49cc-96f1-f346c634d24e a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_c7b01882-e9db-49cc-96f1-f346c634d24e .

km-dev:TriplesMap_3d556fda-ae47-4a80-bd83-883b4ac8a5c6 a rr:TriplesMap .

_:node1aellls1jx1 km-dev:hasTriplesMap km-dev:TriplesMap_3d556fda-ae47-4a80-bd83-883b4ac8a5c6 .

km-dev:TriplesMap_3d556fda-ae47-4a80-bd83-883b4ac8a5c6 km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx18 rr:tableName "ads-addresses-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasLogicalTable _:node1aellls1jx18 .

km-dev:TriplesMap_3d556fda-ae47-4a80-bd83-883b4ac8a5c6 rr:logicalTable _:node1aellls1jx18 ;
	rr:subjectMap _:node1aellls1jx19 .

_:node1aellls1jx1 km-dev:hasSubjectMap _:node1aellls1jx19 .

_:node1aellls1jx19 km-dev:isPartOfMapping _:node1aellls1jx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/Country1" ;
	rr:class schema:Country ;
	rr:template "{country_uri}" .

km-dev:PredicateObjectMap_b3c2d1d5-d8ea-4313-be48-aaf703e18406 rr:predicate rdfs:label .

_:node1aellls1jx20 rr:column "country_clean" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasObjectMap _:node1aellls1jx20 .

km-dev:PredicateObjectMap_b3c2d1d5-d8ea-4313-be48-aaf703e18406 rr:objectMap _:node1aellls1jx20 .

km-dev:TriplesMap_3d556fda-ae47-4a80-bd83-883b4ac8a5c6 rr:predicateObjectMap km-dev:PredicateObjectMap_b3c2d1d5-d8ea-4313-be48-aaf703e18406 .

km-dev:PredicateObjectMap_b3c2d1d5-d8ea-4313-be48-aaf703e18406 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_b3c2d1d5-d8ea-4313-be48-aaf703e18406 .

km-dev:PredicateObjectMap_f826e511-bfbf-4f54-949d-f560ab658b8d rr:predicate memex:isoCode .

_:node1aellls1jx21 rr:column "country_code" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasObjectMap _:node1aellls1jx21 .

km-dev:PredicateObjectMap_f826e511-bfbf-4f54-949d-f560ab658b8d rr:objectMap _:node1aellls1jx21 .

km-dev:TriplesMap_3d556fda-ae47-4a80-bd83-883b4ac8a5c6 rr:predicateObjectMap km-dev:PredicateObjectMap_f826e511-bfbf-4f54-949d-f560ab658b8d .

km-dev:PredicateObjectMap_f826e511-bfbf-4f54-949d-f560ab658b8d a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_f826e511-bfbf-4f54-949d-f560ab658b8d .

km-dev:TriplesMap_5f14ff3c-ee85-48df-ac69-ef70ec643f4a a rr:TriplesMap .

_:node1aellls1jx1 km-dev:hasTriplesMap km-dev:TriplesMap_5f14ff3c-ee85-48df-ac69-ef70ec643f4a .

km-dev:TriplesMap_5f14ff3c-ee85-48df-ac69-ef70ec643f4a km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx22 rr:tableName "ads-addresses-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasLogicalTable _:node1aellls1jx22 .

km-dev:TriplesMap_5f14ff3c-ee85-48df-ac69-ef70ec643f4a rr:logicalTable _:node1aellls1jx22 ;
	rr:subjectMap _:node1aellls1jx23 .

_:node1aellls1jx1 km-dev:hasSubjectMap _:node1aellls1jx23 .

_:node1aellls1jx23 km-dev:isPartOfMapping _:node1aellls1jx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/FeatureCollection1" ;
	rr:class memex:FeatureCollection ;
	rr:template "{crawl_uri}/featurecollection" .

km-dev:PredicateObjectMap_3aecafe9-575e-4b74-a3d7-e3b5424e68f0 rr:predicate memex:place_postalAddress_feature .

km-dev:RefObjectMap_d45cc824-0336-4960-a3b5-5e9304275d7a a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_d387a282-6cf4-4d5a-a94d-6f20859f32c6 ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasObjectMap km-dev:RefObjectMap_d45cc824-0336-4960-a3b5-5e9304275d7a .

km-dev:PredicateObjectMap_3aecafe9-575e-4b74-a3d7-e3b5424e68f0 rr:objectMap km-dev:RefObjectMap_d45cc824-0336-4960-a3b5-5e9304275d7a .

km-dev:TriplesMap_5f14ff3c-ee85-48df-ac69-ef70ec643f4a rr:predicateObjectMap km-dev:PredicateObjectMap_3aecafe9-575e-4b74-a3d7-e3b5424e68f0 .

km-dev:PredicateObjectMap_3aecafe9-575e-4b74-a3d7-e3b5424e68f0 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1aellls1jx1 .

_:node1aellls1jx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_3aecafe9-575e-4b74-a3d7-e3b5424e68f0 .
