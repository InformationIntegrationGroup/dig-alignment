@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix schemax: <http://topbraid.org/schemax/> .
@prefix schema: <http://schema.org/> .
@prefix memex: <http://memexproxy.com/ontology/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix ht: <http://memexproxy.com/ontology/human-trafficking/> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix km-dev: <http://isi.edu/integration/karma/dev#> .

_:node19o1kef0ux1 a km-dev:R2RMLMapping ;
	km-dev:sourceName "webpage-sample.json" ;
	km-dev:modelPublicationTime "1434574076958"^^xsd:long ;
	km-dev:modelVersion "1.7" ;
	km-dev:hasInputColumns "[[{\"columnName\":\"title\"}],[{\"columnName\":\"age\"},{\"columnName\":\"values\"}],[{\"columnName\":\"name\"},{\"columnName\":\"values\"}],[{\"columnName\":\"weight\"},{\"columnName\":\"values\"}],[{\"columnName\":\"ethnicity\"},{\"columnName\":\"values\"}],[{\"columnName\":\"screenshot\"}],[{\"columnName\":\"email\"},{\"columnName\":\"values\"}],[{\"columnName\":\"importime\"}],[{\"columnName\":\"url\"}],[{\"columnName\":\"bodytext\"}],[{\"columnName\":\"height\"},{\"columnName\":\"values\"}],[{\"columnName\":\"username\"}],[{\"columnName\":\"website\"},{\"columnName\":\"values\"}],[{\"columnName\":\"phone\"},{\"columnName\":\"values\"}],[{\"columnName\":\"images\"},{\"columnName\":\"imageurl\"}],[{\"columnName\":\"images\"},{\"columnName\":\"s3imageurl\"}]]" ;
	km-dev:hasOutputColumns "[[{\"columnName\":\"ethnicity\"},{\"columnName\":\"ethnicity_feature_uri\"}],[{\"columnName\":\"website\"},{\"columnName\":\"website2\"}],[{\"columnName\":\"title_uri\"}],[{\"columnName\":\"snapshot_uri\"}],[{\"columnName\":\"person_username_uri\"}],[{\"columnName\":\"images\"},{\"columnName\":\"image_snapshot_uri\"}],[{\"columnName\":\"website\"},{\"columnName\":\"website_feature_uri\"}],[{\"columnName\":\"cache_uri\"}],[{\"columnName\":\"phone\"},{\"columnName\":\"phone_cc\"}],[{\"columnName\":\"ethnicity\"},{\"columnName\":\"ethnicity1\"}],[{\"columnName\":\"email\"},{\"columnName\":\"email_feature_uri\"}],[{\"columnName\":\"images\"},{\"columnName\":\"image_uri\"}],[{\"columnName\":\"weight\"},{\"columnName\":\"weight_feature_uri\"}],[{\"columnName\":\"weight\"},{\"columnName\":\"weights2\"}],[{\"columnName\":\"name\"},{\"columnName\":\"names2\"}],[{\"columnName\":\"email\"},{\"columnName\":\"email_clean2\"}],[{\"columnName\":\"ethnicity\"},{\"columnName\":\"ethnicity2\"}],[{\"columnName\":\"weight\"},{\"columnName\":\"weights\"}],[{\"columnName\":\"name\"},{\"columnName\":\"name_feature_uri\"}],[{\"columnName\":\"height\"},{\"columnName\":\"height_feature_uri\"}],[{\"columnName\":\"email\"},{\"columnName\":\"email_clean\"}],[{\"columnName\":\"bodytext\"}],[{\"columnName\":\"url\"}],[{\"columnName\":\"phone\"},{\"columnName\":\"phone_clean1\"}],[{\"columnName\":\"body_uri\"}],[{\"columnName\":\"age\"},{\"columnName\":\"age_feature_uri\"}],[{\"columnName\":\"phone\"},{\"columnName\":\"phone_clean2\"}],[{\"columnName\":\"import_time\"}],[{\"columnName\":\"title\"}],[{\"columnName\":\"featurecollection_uri\"}],[{\"columnName\":\"age\"},{\"columnName\":\"age_clean\"}],[{\"columnName\":\"age\"},{\"columnName\":\"age_clean2\"}],[{\"columnName\":\"phone\"},{\"columnName\":\"phone_uri\"}],[{\"columnName\":\"screenshot\"}],[{\"columnName\":\"name\"},{\"columnName\":\"names\"}],[{\"columnName\":\"import_time2\"}],[{\"columnName\":\"phone\"},{\"columnName\":\"phone_feature_uri\"}],[{\"columnName\":\"phone\"},{\"columnName\":\"phone_local\"}],[{\"columnName\":\"person_username\"}],[{\"columnName\":\"height\"},{\"columnName\":\"heights2\"}],[{\"columnName\":\"website\"},{\"columnName\":\"values\"}],[{\"columnName\":\"height\"},{\"columnName\":\"heights\"}],[{\"columnName\":\"images\"},{\"columnName\":\"imageurl\"}],[{\"columnName\":\"images\"},{\"columnName\":\"s3imageurl\"}],[{\"columnName\":\"phone\"},{\"columnName\":\"phone_clean\"}]]" ;
	km-dev:hasModelLabel "webpage-sample.json" ;
	km-dev:hasBaseURI "http://localhost:8080/source/" ;
	km-dev:hasWorksheetHistory """[
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"importime\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"import_time\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"import_time\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"import_time\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return iso8601date(getValue(\\\"importime\\\"), \\\"%f\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"importime\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"import_time\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"url\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"cache_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"cache_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"cache_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return \\\"page/\\\"+get_url_hash(getValue(\\\"url\\\"))+\\\"/\\\"+getValue(\\\"importime\\\")+\\\"/processed\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"importime\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"cache_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"cache_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"snapshot_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"snapshot_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"snapshot_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getHTBaseUrl() + \\\"page/\\\"+get_url_hash(getValue(\\\"url\\\"))+\\\"/\\\"+getValue(\\\"importime\\\")+\\\"/raw\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"importime\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"snapshot_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"website\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"featurecollection_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"featurecollection_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"featurecollection_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"cache_uri\\\")+\\\"/featurecollection\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"cache_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"cache_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/WebPage\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/WebPage1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"schema:WebPage1 (add)\",
                    \"DomainId\": \"http://schema.org/WebPage1\",
                    \"DomainUri\": \"http://schema.org/WebPage\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"cache_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"cache_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"url\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://schema.org/url\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"schema:WebPage1\",
                    \"DomainId\": \"http://schema.org/WebPage1\",
                    \"DomainUri\": \"http://schema.org/WebPage\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"snapshot_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://memexproxy.com/ontology/snapshotUri\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"schema:WebPage1\",
                    \"DomainId\": \"http://schema.org/WebPage1\",
                    \"DomainUri\": \"http://schema.org/WebPage\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"snapshot_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"snapshot_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"import_time\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://memexproxy.com/ontology/dateCrawled\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"schema:WebPage1\",
                    \"DomainId\": \"http://schema.org/WebPage1\",
                    \"DomainUri\": \"http://schema.org/WebPage\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"import_time\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"import_time\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"featurecollection_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/FeatureCollection\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/FeatureCollection1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:FeatureCollection1 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP11:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasFeatureCollection\",
                    \"edgeSourceId\": \"http://schema.org/WebPage1\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://schema.org/WebPage\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"website\"},
                    {\"columnName\": \"values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"website2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"website\"},
                    {\"columnName\": \"website2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"website2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"values\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"website\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"website\\\"},{\\\"columnName\\\":\\\"website2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"website\"},
                    {\"columnName\": \"website2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"website_feature_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"website\"},
                    {\"columnName\": \"website_feature_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"website_feature_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"website = getValue(\\\"values\\\")\\nif (len(website)>0):\\n  return getValue(\\\"featurecollection_uri\\\")+\\\"/\\\" + website_uri(website)\\nreturn ''\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"website\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"website\\\"},{\\\"columnName\\\":\\\"website_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"website\"},
                    {\"columnName\": \"website_feature_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/Feature\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/Feature1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:Feature1 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"website\\\"},{\\\"columnName\\\":\\\"website_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"website\\\"},{\\\"columnName\\\":\\\"website_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"website\"},
                    {\"columnName\": \"values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://memexproxy.com/ontology/website\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"website\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"website\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"website\"},
                    {\"columnName\": \"website2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:Feature1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"website\\\"},{\\\"columnName\\\":\\\"website2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"website\\\"},{\\\"columnName\\\":\\\"website2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"website\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"website\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeTargetId\": \"website1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP11:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeId\": \"http://memexproxy.com/ontology/website_feature\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"bodytext\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"body_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"body_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"body_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"if getValue(\\\"bodytext\\\"):\\n  return getValue(\\\"cache_uri\\\") + \\\"/body\\\"\\nreturn ''\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"cache_uri\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"bodytext\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"body_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"body_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/WebPageElement\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/WebPageElement1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"schema:WebPageElement1 (add)\",
                    \"DomainId\": \"http://schema.org/WebPageElement1\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"body_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"body_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"bodytext\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://schema.org/text\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"schema:WebPageElement1\",
                    \"DomainId\": \"http://schema.org/WebPageElement1\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"bodytext\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"bodytext\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP11:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPageElement1\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasBodyPart\",
                    \"edgeSourceId\": \"http://schema.org/WebPage1\",
                    \"edgeTargetId\": \"http://schema.org/WebPageElement1\",
                    \"edgeSourceUri\": \"http://schema.org/WebPage\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"title\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"title_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"title_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"title_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"if getValue(\\\"title\\\"):\\n  return getValue(\\\"cache_uri\\\") + \\\"/title\\\"\\nreturn ''\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"title\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"cache_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"title_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"title_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/WebPageElement\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/WebPageElement2 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"schema:WebPageElement2 (add)\",
                    \"DomainId\": \"http://schema.org/WebPageElement2\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"title_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"title_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"title\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://schema.org/text\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"schema:WebPageElement2\",
                    \"DomainId\": \"http://schema.org/WebPageElement2\",
                    \"DomainUri\": \"http://schema.org/WebPageElement\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"title\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP11:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/WebPageElement2\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasTitlePart\",
                    \"edgeSourceId\": \"http://schema.org/WebPage1\",
                    \"edgeTargetId\": \"http://schema.org/WebPageElement2\",
                    \"edgeSourceUri\": \"http://schema.org/WebPage\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"age\"},
                    {\"columnName\": \"values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"age_clean\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"age\"},
                    {\"columnName\": \"age_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"age_clean2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"age\"},
                    {\"columnName\": \"age_clean2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"age_feature_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"age\"},
                    {\"columnName\": \"age_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"age_clean\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_age(getValue(\\\"values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"age\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"age\\\"},{\\\"columnName\\\":\\\"age_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"age\"},
                    {\"columnName\": \"age_clean2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"age_clean2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"age_clean\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"age\\\"},{\\\"columnName\\\":\\\"age_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"age\\\"},{\\\"columnName\\\":\\\"age_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"age\"},
                    {\"columnName\": \"age_feature_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"age_feature_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"if getValue(\\\"age_clean\\\"):\\n  return getValue(\\\"featurecollection_uri\\\")+\\\"/\\\"+age_uri(getValue(\\\"age_clean\\\"))\\nreturn ''\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"age\\\"},{\\\"columnName\\\":\\\"age_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"age\\\"},{\\\"columnName\\\":\\\"age_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"age\"},
                    {\"columnName\": \"age_feature_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/Feature\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/Feature2 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:Feature2 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature2\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"age\\\"},{\\\"columnName\\\":\\\"age_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"age\\\"},{\\\"columnName\\\":\\\"age_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"age\"},
                    {\"columnName\": \"age_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://memexproxy.com/ontology/person_age\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:Feature2\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature2\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"age\\\"},{\\\"columnName\\\":\\\"age_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"age\\\"},{\\\"columnName\\\":\\\"age_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"age\"},
                    {\"columnName\": \"age_clean2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:Feature2\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature2\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"age\\\"},{\\\"columnName\\\":\\\"age_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"age\\\"},{\\\"columnName\\\":\\\"age_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"person_age\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"person_age\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature2\",
                    \"edgeTargetId\": \"person_age1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP11:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature2\",
                    \"edgeId\": \"http://memexproxy.com/ontology/person_age_feature\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature2\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"phone_clean\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"phone_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"phone_clean\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_phone(getValue(\\\"values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"phone_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"phone_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"phone_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"phone_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return phone_uri(getValue(\\\"phone_clean\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"phone_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"phone_clean1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"phone_clean1\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"phone_clean1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"phone_clean\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_clean1\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"phone_clean1\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"phone_clean2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"phone_clean2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"phone_clean2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"phone_clean\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"phone_clean2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"phone_local\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"phone_local\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"phone_local\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getLocalPhoneNumber(getValue(\\\"phone_clean\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_local\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"phone_local\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"phone_cc\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"phone_cc\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"phone_cc\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getPhoneCountryCode(getValue(\\\"phone_clean\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_cc\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"phone_feature_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"phone_feature_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"phone_feature_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"uri = getValue(\\\"phone_uri\\\")\\nif (len(uri)>0):\\n  return getValue(\\\"featurecollection_uri\\\")+\\\"/\\\"+uri\\nreturn ''\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"phone_feature_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/Feature\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/Feature3 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:Feature3 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature3\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"phone_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://memexproxy.com/ontology/phonenumber\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:Feature3\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature3\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"phone_clean1\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:Feature3\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature3\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_clean1\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_clean1\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"phone_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/PhoneNumber\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/PhoneNumber1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:PhoneNumber1 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/PhoneNumber1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/PhoneNumber\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"phone_clean2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://www.w3.org/2000/01/rdf-schema#label\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:PhoneNumber1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/PhoneNumber1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/PhoneNumber\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"phone_local\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://memexproxy.com/ontology/localPhoneNumber\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:PhoneNumber1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/PhoneNumber1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/PhoneNumber\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_local\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_local\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"phone\"},
                    {\"columnName\": \"phone_cc\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://memexproxy.com/ontology/countryDialingCode\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:PhoneNumber1\",
                    \"DomainId\": \"http://memexproxy.com/ontology/PhoneNumber1\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/PhoneNumber\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_cc\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"phone\\\"},{\\\"columnName\\\":\\\"phone_cc\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"phonenumber\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"phonenumber\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature3\",
                    \"edgeTargetId\": \"phonenumber1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP11:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/PhoneNumber1\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureObject\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature3\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/PhoneNumber1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP11:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature3\",
                    \"edgeId\": \"http://memexproxy.com/ontology/phonenumber_feature\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature3\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"email\"},
                    {\"columnName\": \"values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"email_clean\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"email\"},
                    {\"columnName\": \"email_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"email_clean2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"email\"},
                    {\"columnName\": \"email_clean2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"email_feature_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"email\"},
                    {\"columnName\": \"email_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"email_clean\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_email(getValue(\\\"values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"email\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"email\\\"},{\\\"columnName\\\":\\\"email_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"email\"},
                    {\"columnName\": \"email_clean2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"email_clean2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_email(getValue(\\\"values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"email\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"email\\\"},{\\\"columnName\\\":\\\"email_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"email\"},
                    {\"columnName\": \"email_feature_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"email_feature_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"uri = emailaddress_uri(getValue(\\\"values\\\"))\\nif uri:\\n  return getValue(\\\"featurecollection_uri\\\")+\\\"/\\\"+uri\\nreturn ''\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"email\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"email\\\"},{\\\"columnName\\\":\\\"email_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"email\"},
                    {\"columnName\": \"email_feature_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/Feature\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/Feature4 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:Feature4 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"email\\\"},{\\\"columnName\\\":\\\"email_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"email\\\"},{\\\"columnName\\\":\\\"email_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"email\"},
                    {\"columnName\": \"email_clean\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://memexproxy.com/ontology/emailaddress\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:Feature4\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"email\\\"},{\\\"columnName\\\":\\\"email_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"email\\\"},{\\\"columnName\\\":\\\"email_clean\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"email\"},
                    {\"columnName\": \"email_clean2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:Feature4\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"email\\\"},{\\\"columnName\\\":\\\"email_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"email\\\"},{\\\"columnName\\\":\\\"email_clean2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"emailaddress\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"emailaddress\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"emailaddress\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"edgeTargetId\": \"emailaddress2\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"label\",
                \"value\": \"emailaddress\",
                \"type\": \"other\"
            },
            {
                \"name\": \"id\",
                \"value\": \"emailaddress1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"DeleteNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP11:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature4\",
                    \"edgeId\": \"http://memexproxy.com/ontology/emailaddress_feature\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature4\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"images\"},
                    {\"columnName\": \"s3imageurl\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"image_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"images\"},
                    {\"columnName\": \"image_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"image_snapshot_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"images\"},
                    {\"columnName\": \"image_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"image_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getHTBaseUrl() + \\\"image/\\\"+get_url_hash(getValue(\\\"url\\\"))+\\\"/\\\"+getValue(\\\"importime\\\") + \\\"/processed\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"importime\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"images\\\"},{\\\"columnName\\\":\\\"image_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"images\"},
                    {\"columnName\": \"image_snapshot_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"image_snapshot_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getHTBaseUrl() + \\\"image/\\\"+get_url_hash(getValue(\\\"url\\\"))+\\\"/\\\"+getValue(\\\"importime\\\") + \\\"/raw\\\"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"importime\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"images\\\"},{\\\"columnName\\\":\\\"image_snapshot_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"images\"},
                    {\"columnName\": \"image_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/ImageObject\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/ImageObject1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"schema:ImageObject1 (add)\",
                    \"DomainId\": \"http://schema.org/ImageObject1\",
                    \"DomainUri\": \"http://schema.org/ImageObject\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"images\\\"},{\\\"columnName\\\":\\\"image_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"images\\\"},{\\\"columnName\\\":\\\"image_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"images\"},
                    {\"columnName\": \"image_snapshot_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://memexproxy.com/ontology/snapshotUri\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"schema:ImageObject1\",
                    \"DomainId\": \"http://schema.org/ImageObject1\",
                    \"DomainUri\": \"http://schema.org/ImageObject\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"images\\\"},{\\\"columnName\\\":\\\"image_snapshot_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"images\\\"},{\\\"columnName\\\":\\\"image_snapshot_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"images\"},
                    {\"columnName\": \"imageurl\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://schema.org/url\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"schema:ImageObject1\",
                    \"DomainId\": \"http://schema.org/ImageObject1\",
                    \"DomainUri\": \"http://schema.org/ImageObject\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"images\\\"},{\\\"columnName\\\":\\\"imageurl\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"images\\\"},{\\\"columnName\\\":\\\"imageurl\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"images\"},
                    {\"columnName\": \"s3imageurl\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://memexproxy.com/ontology/cacheUrl\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"schema:ImageObject1\",
                    \"DomainId\": \"http://schema.org/ImageObject1\",
                    \"DomainUri\": \"http://schema.org/ImageObject\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"images\\\"},{\\\"columnName\\\":\\\"s3imageurl\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"images\\\"},{\\\"columnName\\\":\\\"s3imageurl\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP11:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/ImageObject1\",
                    \"edgeId\": \"http://memexproxy.com/ontology/hasImagePart\",
                    \"edgeSourceId\": \"http://schema.org/WebPage1\",
                    \"edgeTargetId\": \"http://schema.org/ImageObject1\",
                    \"edgeSourceUri\": \"http://schema.org/WebPage\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"import_time\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"import_time2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"import_time2\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"import_time2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return iso8601date(getValue(\\\"importime\\\"), \\\"%f\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"importime\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"import_time2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"import_time2\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://www.w3.org/ns/prov#endedAtTime\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"prov:Activity1 (add)\",
                    \"DomainId\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"DomainUri\": \"http://www.w3.org/ns/prov#Activity\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"import_time2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"import_time2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"username\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://xmlns.com/foaf/0.1/name\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"prov:Person1 (add)\",
                    \"DomainId\": \"http://www.w3.org/ns/prov#Person1 (add)\",
                    \"DomainUri\": \"http://www.w3.org/ns/prov#Person\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"username\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"username\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP1:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"edgeId\": \"http://www.w3.org/ns/prov#wasGeneratedBy\",
                    \"edgeSourceId\": \"http://schema.org/WebPage1\",
                    \"edgeTargetId\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"edgeSourceUri\": \"http://schema.org/WebPage\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"http://ingest.dig.isi.edu:5000/ingest/webpage\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://ingest.dig.isi.edu:5000/ingest/webpage\",
                    \"edgeId\": \"http://www.w3.org/ns/prov#wasAttributedTo\",
                    \"edgeSourceId\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"edgeTargetId\": \"http://ingest.dig.isi.edu:5000/ingest/webpage1\",
                    \"edgeSourceUri\": \"http://www.w3.org/ns/prov#Activity\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"name\"},
                    {\"columnName\": \"values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"names2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"name\"},
                    {\"columnName\": \"names2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"names2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_name(getValue(\\\"values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"name\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"name\\\"},{\\\"columnName\\\":\\\"names2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"name\"},
                    {\"columnName\": \"names2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"name_feature_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"name\"},
                    {\"columnName\": \"name_feature_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"name_feature_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"name = getValue(\\\"values\\\")\\nif (len(name)>0):\\n  return getValue(\\\"featurecollection_uri\\\")+\\\"/\\\" + person_name_uri(name)\\nreturn ''\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"name\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"name\\\"},{\\\"columnName\\\":\\\"name_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"name\"},
                    {\"columnName\": \"name_feature_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/Feature\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/Feature5 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:Feature5 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"name\\\"},{\\\"columnName\\\":\\\"name_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"name\\\"},{\\\"columnName\\\":\\\"name_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"name\"},
                    {\"columnName\": \"values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://memexproxy.com/ontology/person_name\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:Feature5\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"name\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"name\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"name\"},
                    {\"columnName\": \"names2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:Feature5\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"name\\\"},{\\\"columnName\\\":\\\"names2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"name\\\"},{\\\"columnName\\\":\\\"names2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"provider_name\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"provider_name\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"edgeTargetId\": \"provider_name1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature5\",
                    \"edgeId\": \"http://memexproxy.com/ontology/person_name_feature\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"name\"},
                    {\"columnName\": \"values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"names\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"name\"},
                    {\"columnName\": \"names\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"names\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_name(getValue(\\\"values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"name\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"name\\\"},{\\\"columnName\\\":\\\"names\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"name\"},
                    {\"columnName\": \"values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"name\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"name\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"UnassignSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"name\"},
                    {\"columnName\": \"names\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/person_name\",
                    \"DomainLabel\": \"memex:Feature5\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature5\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"name\\\"},{\\\"columnName\\\":\\\"names\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"name\\\"},{\\\"columnName\\\":\\\"names\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"weight\"},
                    {\"columnName\": \"values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"weights\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"weight\"},
                    {\"columnName\": \"weights\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"weights2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"weight\"},
                    {\"columnName\": \"weights2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"weight_feature_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"weight\"},
                    {\"columnName\": \"weights\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"weights\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_weight(getValue(\\\"values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"weight\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"weight\\\"},{\\\"columnName\\\":\\\"weights\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"weight\"},
                    {\"columnName\": \"weights2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"weights2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_weight(getValue(\\\"values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"weight\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"weight\\\"},{\\\"columnName\\\":\\\"weights2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"weight\"},
                    {\"columnName\": \"weight_feature_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"weight_feature_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"weight = getValue(\\\"weights\\\")\\nif (len(weight)>0):\\n  return getValue(\\\"featurecollection_uri\\\")+\\\"/\\\" + person_weight_uri(weight)\\nreturn ''\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"weight\\\"},{\\\"columnName\\\":\\\"weights\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"weight\\\"},{\\\"columnName\\\":\\\"weight_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"weight\"},
                    {\"columnName\": \"weight_feature_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/Feature\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/Feature6 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"memex:Feature6 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"weight\\\"},{\\\"columnName\\\":\\\"weight_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"weight\\\"},{\\\"columnName\\\":\\\"weight_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"weight\"},
                    {\"columnName\": \"weights\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/person_weight\",
                    \"DomainLabel\": \"memex:Feature6\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"weight\\\"},{\\\"columnName\\\":\\\"weights\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"weight\\\"},{\\\"columnName\\\":\\\"weights\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"weight\"},
                    {\"columnName\": \"weights2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature6\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"weight\\\"},{\\\"columnName\\\":\\\"weights2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"weight\\\"},{\\\"columnName\\\":\\\"weights2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"person_weight\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"person_weight\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"person_weight1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature6\",
                    \"edgeId\": \"http://memexproxy.com/ontology/person_weight_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature6\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"height\"},
                    {\"columnName\": \"values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"heights\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"height\"},
                    {\"columnName\": \"heights\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"heights2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"height\"},
                    {\"columnName\": \"heights2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"height_feature_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"height\"},
                    {\"columnName\": \"heights\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"heights\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_height(getValue(\\\"values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"height\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"height\\\"},{\\\"columnName\\\":\\\"heights\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"height\"},
                    {\"columnName\": \"heights2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"heights2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_height(getValue(\\\"values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"height\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"height\\\"},{\\\"columnName\\\":\\\"heights2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"height\"},
                    {\"columnName\": \"height_feature_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"height_feature_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"height = getValue(\\\"heights\\\")\\nif (len(height)>0):\\n  return getValue(\\\"featurecollection_uri\\\")+\\\"/\\\" + person_height_uri(height)\\nreturn ''\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"height\\\"},{\\\"columnName\\\":\\\"heights\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"height\\\"},{\\\"columnName\\\":\\\"height_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"height\"},
                    {\"columnName\": \"height_feature_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/Feature\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/Feature7 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"memex:Feature7 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature7\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"height\\\"},{\\\"columnName\\\":\\\"height_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"height\\\"},{\\\"columnName\\\":\\\"height_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"height\"},
                    {\"columnName\": \"heights\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/person_height\",
                    \"DomainLabel\": \"memex:Feature7\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature7\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"height\\\"},{\\\"columnName\\\":\\\"heights\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"height\\\"},{\\\"columnName\\\":\\\"heights\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"height\"},
                    {\"columnName\": \"heights2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"DomainLabel\": \"memex:Feature7\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature7\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"height\\\"},{\\\"columnName\\\":\\\"heights2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"height\\\"},{\\\"columnName\\\":\\\"heights2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"person_height\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"person_height\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeTargetId\": \"person_height1\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature7\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature7\",
                    \"edgeId\": \"http://memexproxy.com/ontology/person_height_feature\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature7\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"username\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"person_username\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"person_username\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"person_username\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_name(getValue(\\\"username\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"username\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"person_username\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"person_username\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"person_username_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"person_username_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"person_username_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"name = getValue(\\\"person_username\\\")\\nif (len(name)>0):\\n  return person_name_uri(name)\\nreturn ''\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"person_username\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"person_username_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"person_username_uri\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://schema.org/Person\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://schema.org/Person1 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:Person1 (add)\",
                    \"DomainId\": \"http://schema.org/Person1 (add)\",
                    \"DomainUri\": \"http://schema.org/Person\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"person_username_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"person_username_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"username\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": true,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"username\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"username\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"UnassignSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://schema.org/Person1\",
                    \"edgeId\": \"http://www.w3.org/ns/prov#wasAssociatedWith\",
                    \"edgeTargetId\": \"http://schema.org/Person1\",
                    \"edgeSourceId\": \"http://www.w3.org/ns/prov#Activity1\",
                    \"edgeSourceUri\": \"http://www.w3.org/ns/prov#Activity\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [
                    {
                        \"edgeId\": \"http://www.w3.org/ns/prov#wasGeneratedBy\",
                        \"edgeTargetId\": \"http://www.w3.org/ns/prov#Activity1\",
                        \"edgeSourceId\": \"http://schema.org/WebPage1\"
                    },
                    {
                        \"edgeId\": \"http://www.w3.org/ns/prov#wasAssociatedWith\",
                        \"edgeTargetId\": \"http://schema.org/Person1\",
                        \"edgeSourceId\": \"http://www.w3.org/ns/prov#Activity1\"
                    },
                    {
                        \"edgeId\": \"http://www.w3.org/ns/prov#wasAssociatedWith\",
                        \"edgeTargetId\": \"http://www.w3.org/ns/prov#Person1\",
                        \"edgeSourceId\": \"http://www.w3.org/ns/prov#Activity1\"
                    },
                    {
                        \"edgeId\": \"http://www.w3.org/ns/prov#wasAttributedTo\",
                        \"edgeTargetId\": \"http://ingest.dig.isi.edu:5000/ingest/webpage1\",
                        \"edgeSourceId\": \"http://www.w3.org/ns/prov#Activity1\"
                    }
                ],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [
                    {
                        \"edgeTargetUri\": \"http://www.w3.org/ns/prov#Activity\",
                        \"edgeId\": \"http://www.w3.org/ns/prov#wasGeneratedBy\",
                        \"edgeTargetId\": \"http://www.w3.org/ns/prov#Activity1\",
                        \"edgeSourceId\": \"http://schema.org/WebPage1\",
                        \"edgeSourceUri\": \"http://schema.org/WebPage\"
                    },
                    {
                        \"edgeTargetUri\": \"http://schema.org/Person\",
                        \"edgeId\": \"http://www.w3.org/ns/prov#wasAssociatedWith\",
                        \"edgeTargetId\": \"http://schema.org/Person1\",
                        \"edgeSourceId\": \"http://www.w3.org/ns/prov#Activity1\",
                        \"edgeSourceUri\": \"http://www.w3.org/ns/prov#Activity\"
                    },
                    {
                        \"edgeTargetUri\": \"\",
                        \"edgeId\": \"http://www.w3.org/ns/prov#wasAttributedTo\",
                        \"edgeTargetId\": \"http://ingest.dig.isi.edu:5000/ingest/webpage1\",
                        \"edgeSourceId\": \"http://www.w3.org/ns/prov#Activity1\",
                        \"edgeSourceUri\": \"http://www.w3.org/ns/prov#Activity\"
                    }
                ],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"ethnicity\"},
                    {\"columnName\": \"values\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"ethnicity1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"ethnicity\"},
                    {\"columnName\": \"ethnicity1\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"ethnicity2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"ethnicity\"},
                    {\"columnName\": \"ethnicity2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"hTableId\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"ethnicity_feature_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"defaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddColumnCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"ethnicity\"},
                    {\"columnName\": \"ethnicity1\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"ethnicity1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return clean_ethnicity(getValue(\\\"values\\\"))\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"ethnicity\\\"},{\\\"columnName\\\":\\\"values\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"ethnicity\\\"},{\\\"columnName\\\":\\\"ethnicity1\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"ethnicity\"},
                    {\"columnName\": \"ethnicity2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"ethnicity2\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"return getValue(\\\"ethnicity1\\\")\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"ethnicity\\\"},{\\\"columnName\\\":\\\"ethnicity1\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"ethnicity\\\"},{\\\"columnName\\\":\\\"ethnicity2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Transformation\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"ethnicity\"},
                    {\"columnName\": \"ethnicity_feature_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newColumnName\",
                \"value\": \"ethnicity_feature_uri\",
                \"type\": \"other\"
            },
            {
                \"name\": \"transformationCode\",
                \"value\": \"ethnicity = getValue(\\\"ethnicity1\\\")\\nif (len(ethnicity)>0):\\n  return getValue(\\\"featurecollection_uri\\\")+\\\"/\\\" + person_ethnicity_uri(ethnicity)\\nreturn ''\",
                \"type\": \"other\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"value\": \"false\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"featurecollection_uri\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"ethnicity\\\"},{\\\"columnName\\\":\\\"ethnicity1\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"ethnicity\\\"},{\\\"columnName\\\":\\\"ethnicity_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SubmitPythonTransformationCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"ethnicity\"},
                    {\"columnName\": \"ethnicity_feature_uri\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"value\": \"isUriOfClass\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"value\": \"http://memexproxy.com/ontology/Feature\",
                \"type\": \"other\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"value\": \"http://memexproxy.com/ontology/Feature8 (add)\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:Feature8 (add)\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature8\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"ethnicity\\\"},{\\\"columnName\\\":\\\"ethnicity_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"ethnicity\\\"},{\\\"columnName\\\":\\\"ethnicity_feature_uri\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetMetaPropertyCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"ethnicity\"},
                    {\"columnName\": \"ethnicity1\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://memexproxy.com/ontology/person_ethnicity\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:Feature8\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature8\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"ethnicity\\\"},{\\\"columnName\\\":\\\"ethnicity1\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"ethnicity\\\"},{\\\"columnName\\\":\\\"ethnicity1\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [
                    {\"columnName\": \"ethnicity\"},
                    {\"columnName\": \"ethnicity2\"}
                ],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://memexproxy.com/ontology/featureValue\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"memex:Feature8\",
                    \"DomainId\": \"http://memexproxy.com/ontology/Feature8\",
                    \"DomainUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"ethnicity\\\"},{\\\"columnName\\\":\\\"ethnicity2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"ethnicity\\\"},{\\\"columnName\\\":\\\"ethnicity2\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"person_ethnicity\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"person_ethnicity\",
                    \"edgeId\": \"http://memexproxy.com/ontology/featureName\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/Feature8\",
                    \"edgeTargetId\": \"person_ethnicity1\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/Feature\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"initialEdges\",
                \"value\": [],
                \"type\": \"other\"
            },
            {
                \"name\": \"alignmentId\",
                \"value\": \"WSP2:WS1AL\",
                \"type\": \"other\"
            },
            {
                \"name\": \"newEdges\",
                \"value\": [{
                    \"edgeTargetUri\": \"http://memexproxy.com/ontology/Feature8\",
                    \"edgeId\": \"http://memexproxy.com/ontology/person_ethnicity_feature\",
                    \"edgeSourceId\": \"http://memexproxy.com/ontology/FeatureCollection1\",
                    \"edgeTargetId\": \"http://memexproxy.com/ontology/Feature8\",
                    \"edgeSourceUri\": \"http://memexproxy.com/ontology/FeatureCollection\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"ChangeInternalNodeLinksCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"value\": [{\"columnName\": \"screenshot\"}],
                \"type\": \"hNodeId\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"selectionName\",
                \"value\": \"DEFAULT_TEST\",
                \"type\": \"other\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"value\": [{
                    \"FullType\": \"http://schema.org/screenshot\",
                    \"isPrimary\": true,
                    \"DomainLabel\": \"schema:WebPage1\",
                    \"DomainId\": \"http://schema.org/WebPage1\",
                    \"DomainUri\": \"http://schema.org/WebPage\"
                }],
                \"type\": \"other\"
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"rdfLiteralType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"screenshot\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"screenshot\\\"}]}]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"SetSemanticTypeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"person_name\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"nodeId\",
                \"value\": \"provider_name1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    },
    {
        \"tags\": [\"Modeling\"],
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"literalValue\",
                \"value\": \"person_name\",
                \"type\": \"other\"
            },
            {
                \"name\": \"literalType\",
                \"value\": \"\",
                \"type\": \"other\"
            },
            {
                \"name\": \"worksheetId\",
                \"value\": \"W\",
                \"type\": \"worksheetId\"
            },
            {
                \"name\": \"nodeId\",
                \"value\": \"provider_name1\",
                \"type\": \"other\"
            },
            {
                \"name\": \"isUri\",
                \"value\": false,
                \"type\": \"other\"
            },
            {
                \"name\": \"inputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            },
            {
                \"name\": \"outputColumns\",
                \"value\": \"[]\",
                \"type\": \"hNodeIdList\"
            }
        ],
        \"commandName\": \"AddLiteralNodeCommand\"
    }
]""" .

km-dev:TriplesMap_4b7201cc-29b6-49fb-aebd-c7b0aa6dc20c a rr:TriplesMap .

_:node19o1kef0ux1 km-dev:hasTriplesMap km-dev:TriplesMap_4b7201cc-29b6-49fb-aebd-c7b0aa6dc20c .

km-dev:TriplesMap_4b7201cc-29b6-49fb-aebd-c7b0aa6dc20c km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux2 rr:tableName "webpage-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasLogicalTable _:node19o1kef0ux2 .

km-dev:TriplesMap_4b7201cc-29b6-49fb-aebd-c7b0aa6dc20c rr:logicalTable _:node19o1kef0ux2 ;
	rr:subjectMap _:node19o1kef0ux3 .

_:node19o1kef0ux1 km-dev:hasSubjectMap _:node19o1kef0ux3 .

_:node19o1kef0ux3 km-dev:isPartOfMapping _:node19o1kef0ux1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature1" ;
	rr:class memex:Feature ;
	rr:template "{[\"website\",\"website_feature_uri\"]}" .

km-dev:PredicateObjectMap_84d543e1-f51b-40f8-815d-a2a21560f657 rr:predicate memex:featureName .

_:node19o1kef0ux4 rr:constant "website" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux4 .

km-dev:PredicateObjectMap_84d543e1-f51b-40f8-815d-a2a21560f657 rr:objectMap _:node19o1kef0ux4 .

km-dev:TriplesMap_4b7201cc-29b6-49fb-aebd-c7b0aa6dc20c rr:predicateObjectMap km-dev:PredicateObjectMap_84d543e1-f51b-40f8-815d-a2a21560f657 .

km-dev:PredicateObjectMap_84d543e1-f51b-40f8-815d-a2a21560f657 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_84d543e1-f51b-40f8-815d-a2a21560f657 .

km-dev:PredicateObjectMap_42d0f93d-cdbc-40a2-9f50-08f172891b3b rr:predicate memex:featureValue .

_:node19o1kef0ux5 rr:column "[\"website\",\"values\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux5 .

km-dev:PredicateObjectMap_42d0f93d-cdbc-40a2-9f50-08f172891b3b rr:objectMap _:node19o1kef0ux5 .

km-dev:TriplesMap_4b7201cc-29b6-49fb-aebd-c7b0aa6dc20c rr:predicateObjectMap km-dev:PredicateObjectMap_42d0f93d-cdbc-40a2-9f50-08f172891b3b .

km-dev:PredicateObjectMap_42d0f93d-cdbc-40a2-9f50-08f172891b3b a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_42d0f93d-cdbc-40a2-9f50-08f172891b3b .

km-dev:PredicateObjectMap_8ad5a9c7-6e44-46a5-902f-526b974828bd rr:predicate memex:website .

_:node19o1kef0ux6 rr:column "[\"website\",\"values\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux6 .

km-dev:PredicateObjectMap_8ad5a9c7-6e44-46a5-902f-526b974828bd rr:objectMap _:node19o1kef0ux6 .

km-dev:TriplesMap_4b7201cc-29b6-49fb-aebd-c7b0aa6dc20c rr:predicateObjectMap km-dev:PredicateObjectMap_8ad5a9c7-6e44-46a5-902f-526b974828bd .

km-dev:PredicateObjectMap_8ad5a9c7-6e44-46a5-902f-526b974828bd a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_8ad5a9c7-6e44-46a5-902f-526b974828bd .

km-dev:TriplesMap_0e4c755c-35e2-43c3-9af5-ccef293ba74e a rr:TriplesMap .

_:node19o1kef0ux1 km-dev:hasTriplesMap km-dev:TriplesMap_0e4c755c-35e2-43c3-9af5-ccef293ba74e .

km-dev:TriplesMap_0e4c755c-35e2-43c3-9af5-ccef293ba74e km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux7 rr:tableName "webpage-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasLogicalTable _:node19o1kef0ux7 .

km-dev:TriplesMap_0e4c755c-35e2-43c3-9af5-ccef293ba74e rr:logicalTable _:node19o1kef0ux7 ;
	rr:subjectMap _:node19o1kef0ux8 .

_:node19o1kef0ux1 km-dev:hasSubjectMap _:node19o1kef0ux8 .

_:node19o1kef0ux8 km-dev:isPartOfMapping _:node19o1kef0ux1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature2" ;
	rr:class memex:Feature ;
	rr:template "{[\"age\",\"age_feature_uri\"]}" .

km-dev:PredicateObjectMap_2f8dd876-774f-4138-a767-75a7f7683b14 rr:predicate memex:featureName .

_:node19o1kef0ux9 rr:constant "person_age" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux9 .

km-dev:PredicateObjectMap_2f8dd876-774f-4138-a767-75a7f7683b14 rr:objectMap _:node19o1kef0ux9 .

km-dev:TriplesMap_0e4c755c-35e2-43c3-9af5-ccef293ba74e rr:predicateObjectMap km-dev:PredicateObjectMap_2f8dd876-774f-4138-a767-75a7f7683b14 .

km-dev:PredicateObjectMap_2f8dd876-774f-4138-a767-75a7f7683b14 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_2f8dd876-774f-4138-a767-75a7f7683b14 .

km-dev:PredicateObjectMap_d106b837-c5e3-4a2b-b91a-ffaa30f6fd0f rr:predicate memex:featureValue .

_:node19o1kef0ux10 rr:column "[\"age\",\"age_clean\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux10 .

km-dev:PredicateObjectMap_d106b837-c5e3-4a2b-b91a-ffaa30f6fd0f rr:objectMap _:node19o1kef0ux10 .

km-dev:TriplesMap_0e4c755c-35e2-43c3-9af5-ccef293ba74e rr:predicateObjectMap km-dev:PredicateObjectMap_d106b837-c5e3-4a2b-b91a-ffaa30f6fd0f .

km-dev:PredicateObjectMap_d106b837-c5e3-4a2b-b91a-ffaa30f6fd0f a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_d106b837-c5e3-4a2b-b91a-ffaa30f6fd0f .

km-dev:PredicateObjectMap_1b04fabc-754d-41e1-9bd2-b02bd6683144 rr:predicate memex:person_age .

_:node19o1kef0ux11 rr:column "[\"age\",\"age_clean\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux11 .

km-dev:PredicateObjectMap_1b04fabc-754d-41e1-9bd2-b02bd6683144 rr:objectMap _:node19o1kef0ux11 .

km-dev:TriplesMap_0e4c755c-35e2-43c3-9af5-ccef293ba74e rr:predicateObjectMap km-dev:PredicateObjectMap_1b04fabc-754d-41e1-9bd2-b02bd6683144 .

km-dev:PredicateObjectMap_1b04fabc-754d-41e1-9bd2-b02bd6683144 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_1b04fabc-754d-41e1-9bd2-b02bd6683144 .

km-dev:TriplesMap_a51f97dd-e7a9-4dfd-bc93-90c186448100 a rr:TriplesMap .

_:node19o1kef0ux1 km-dev:hasTriplesMap km-dev:TriplesMap_a51f97dd-e7a9-4dfd-bc93-90c186448100 .

km-dev:TriplesMap_a51f97dd-e7a9-4dfd-bc93-90c186448100 km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux12 rr:tableName "webpage-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasLogicalTable _:node19o1kef0ux12 .

km-dev:TriplesMap_a51f97dd-e7a9-4dfd-bc93-90c186448100 rr:logicalTable _:node19o1kef0ux12 ;
	rr:subjectMap _:node19o1kef0ux13 .

_:node19o1kef0ux1 km-dev:hasSubjectMap _:node19o1kef0ux13 .

_:node19o1kef0ux13 km-dev:isPartOfMapping _:node19o1kef0ux1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature3" ;
	rr:class memex:Feature ;
	rr:template "{[\"phone\",\"phone_feature_uri\"]}" .

km-dev:PredicateObjectMap_2b70cf32-bf85-4a2b-9d9a-180e5a4a8fb2 rr:predicate memex:featureName .

_:node19o1kef0ux14 rr:constant "phonenumber" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux14 .

km-dev:PredicateObjectMap_2b70cf32-bf85-4a2b-9d9a-180e5a4a8fb2 rr:objectMap _:node19o1kef0ux14 .

km-dev:TriplesMap_a51f97dd-e7a9-4dfd-bc93-90c186448100 rr:predicateObjectMap km-dev:PredicateObjectMap_2b70cf32-bf85-4a2b-9d9a-180e5a4a8fb2 .

km-dev:PredicateObjectMap_2b70cf32-bf85-4a2b-9d9a-180e5a4a8fb2 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_2b70cf32-bf85-4a2b-9d9a-180e5a4a8fb2 .

km-dev:PredicateObjectMap_af40ee0c-f589-4d81-a5fe-59e5b065a95e rr:predicate memex:featureObject .

km-dev:RefObjectMap_34427986-b117-47af-82c1-08bb00e0b3ca a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_5cd53926-d036-46a3-86f1-ba18a572344c ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap km-dev:RefObjectMap_34427986-b117-47af-82c1-08bb00e0b3ca .

km-dev:PredicateObjectMap_af40ee0c-f589-4d81-a5fe-59e5b065a95e rr:objectMap km-dev:RefObjectMap_34427986-b117-47af-82c1-08bb00e0b3ca .

km-dev:TriplesMap_a51f97dd-e7a9-4dfd-bc93-90c186448100 rr:predicateObjectMap km-dev:PredicateObjectMap_af40ee0c-f589-4d81-a5fe-59e5b065a95e .

km-dev:PredicateObjectMap_af40ee0c-f589-4d81-a5fe-59e5b065a95e a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_af40ee0c-f589-4d81-a5fe-59e5b065a95e .

km-dev:PredicateObjectMap_2d64ca80-19a5-44dc-835a-267a201aa477 rr:predicate memex:featureValue .

_:node19o1kef0ux15 rr:column "[\"phone\",\"phone_clean\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux15 .

km-dev:PredicateObjectMap_2d64ca80-19a5-44dc-835a-267a201aa477 rr:objectMap _:node19o1kef0ux15 .

km-dev:TriplesMap_a51f97dd-e7a9-4dfd-bc93-90c186448100 rr:predicateObjectMap km-dev:PredicateObjectMap_2d64ca80-19a5-44dc-835a-267a201aa477 .

km-dev:PredicateObjectMap_2d64ca80-19a5-44dc-835a-267a201aa477 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_2d64ca80-19a5-44dc-835a-267a201aa477 .

km-dev:PredicateObjectMap_31a2cbd7-5057-4cb9-8168-179dca8b0514 rr:predicate memex:phonenumber .

_:node19o1kef0ux16 rr:column "[\"phone\",\"phone_clean\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux16 .

km-dev:PredicateObjectMap_31a2cbd7-5057-4cb9-8168-179dca8b0514 rr:objectMap _:node19o1kef0ux16 .

km-dev:TriplesMap_a51f97dd-e7a9-4dfd-bc93-90c186448100 rr:predicateObjectMap km-dev:PredicateObjectMap_31a2cbd7-5057-4cb9-8168-179dca8b0514 .

km-dev:PredicateObjectMap_31a2cbd7-5057-4cb9-8168-179dca8b0514 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_31a2cbd7-5057-4cb9-8168-179dca8b0514 .

km-dev:TriplesMap_5cd53926-d036-46a3-86f1-ba18a572344c a rr:TriplesMap .

_:node19o1kef0ux1 km-dev:hasTriplesMap km-dev:TriplesMap_5cd53926-d036-46a3-86f1-ba18a572344c .

km-dev:TriplesMap_5cd53926-d036-46a3-86f1-ba18a572344c km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux17 rr:tableName "webpage-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasLogicalTable _:node19o1kef0ux17 .

km-dev:TriplesMap_5cd53926-d036-46a3-86f1-ba18a572344c rr:logicalTable _:node19o1kef0ux17 ;
	rr:subjectMap _:node19o1kef0ux18 .

_:node19o1kef0ux1 km-dev:hasSubjectMap _:node19o1kef0ux18 .

_:node19o1kef0ux18 km-dev:isPartOfMapping _:node19o1kef0ux1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/PhoneNumber1" ;
	rr:class memex:PhoneNumber ;
	rr:template "{[\"phone\",\"phone_uri\"]}" .

km-dev:PredicateObjectMap_9376991b-c6bc-403d-b7f4-ad5826073976 rr:predicate memex:countryDialingCode .

_:node19o1kef0ux19 rr:column "[\"phone\",\"phone_cc\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux19 .

km-dev:PredicateObjectMap_9376991b-c6bc-403d-b7f4-ad5826073976 rr:objectMap _:node19o1kef0ux19 .

km-dev:TriplesMap_5cd53926-d036-46a3-86f1-ba18a572344c rr:predicateObjectMap km-dev:PredicateObjectMap_9376991b-c6bc-403d-b7f4-ad5826073976 .

km-dev:PredicateObjectMap_9376991b-c6bc-403d-b7f4-ad5826073976 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_9376991b-c6bc-403d-b7f4-ad5826073976 .

km-dev:PredicateObjectMap_4ce800fa-ebbc-4bfc-8d02-f19571040987 rr:predicate memex:localPhoneNumber .

_:node19o1kef0ux20 rr:column "[\"phone\",\"phone_local\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux20 .

km-dev:PredicateObjectMap_4ce800fa-ebbc-4bfc-8d02-f19571040987 rr:objectMap _:node19o1kef0ux20 .

km-dev:TriplesMap_5cd53926-d036-46a3-86f1-ba18a572344c rr:predicateObjectMap km-dev:PredicateObjectMap_4ce800fa-ebbc-4bfc-8d02-f19571040987 .

km-dev:PredicateObjectMap_4ce800fa-ebbc-4bfc-8d02-f19571040987 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_4ce800fa-ebbc-4bfc-8d02-f19571040987 .

km-dev:PredicateObjectMap_eb47594d-0c83-4fd9-9896-4ca5ae144727 rr:predicate rdfs:label .

_:node19o1kef0ux21 rr:column "[\"phone\",\"phone_clean\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux21 .

km-dev:PredicateObjectMap_eb47594d-0c83-4fd9-9896-4ca5ae144727 rr:objectMap _:node19o1kef0ux21 .

km-dev:TriplesMap_5cd53926-d036-46a3-86f1-ba18a572344c rr:predicateObjectMap km-dev:PredicateObjectMap_eb47594d-0c83-4fd9-9896-4ca5ae144727 .

km-dev:PredicateObjectMap_eb47594d-0c83-4fd9-9896-4ca5ae144727 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_eb47594d-0c83-4fd9-9896-4ca5ae144727 .

km-dev:TriplesMap_ade5f1be-1132-47c8-8867-6de67971d2a7 a rr:TriplesMap .

_:node19o1kef0ux1 km-dev:hasTriplesMap km-dev:TriplesMap_ade5f1be-1132-47c8-8867-6de67971d2a7 .

km-dev:TriplesMap_ade5f1be-1132-47c8-8867-6de67971d2a7 km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux22 rr:tableName "webpage-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasLogicalTable _:node19o1kef0ux22 .

km-dev:TriplesMap_ade5f1be-1132-47c8-8867-6de67971d2a7 rr:logicalTable _:node19o1kef0ux22 ;
	rr:subjectMap _:node19o1kef0ux23 .

_:node19o1kef0ux1 km-dev:hasSubjectMap _:node19o1kef0ux23 .

_:node19o1kef0ux23 km-dev:isPartOfMapping _:node19o1kef0ux1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature4" ;
	rr:class memex:Feature ;
	rr:template "{[\"email\",\"email_feature_uri\"]}" .

km-dev:PredicateObjectMap_117b5778-2a66-440d-9f2c-ef41e3367f1d rr:predicate memex:emailaddress .

_:node19o1kef0ux24 rr:column "[\"email\",\"email_clean\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux24 .

km-dev:PredicateObjectMap_117b5778-2a66-440d-9f2c-ef41e3367f1d rr:objectMap _:node19o1kef0ux24 .

km-dev:TriplesMap_ade5f1be-1132-47c8-8867-6de67971d2a7 rr:predicateObjectMap km-dev:PredicateObjectMap_117b5778-2a66-440d-9f2c-ef41e3367f1d .

km-dev:PredicateObjectMap_117b5778-2a66-440d-9f2c-ef41e3367f1d a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_117b5778-2a66-440d-9f2c-ef41e3367f1d .

km-dev:PredicateObjectMap_83033014-df03-4be2-8ce2-eb514493ccc9 rr:predicate memex:featureName .

_:node19o1kef0ux25 rr:constant "emailaddress" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux25 .

km-dev:PredicateObjectMap_83033014-df03-4be2-8ce2-eb514493ccc9 rr:objectMap _:node19o1kef0ux25 .

km-dev:TriplesMap_ade5f1be-1132-47c8-8867-6de67971d2a7 rr:predicateObjectMap km-dev:PredicateObjectMap_83033014-df03-4be2-8ce2-eb514493ccc9 .

km-dev:PredicateObjectMap_83033014-df03-4be2-8ce2-eb514493ccc9 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_83033014-df03-4be2-8ce2-eb514493ccc9 .

km-dev:PredicateObjectMap_b1eb4178-022e-47c0-a7e3-3c45b6e116db rr:predicate memex:featureValue .

_:node19o1kef0ux26 rr:column "[\"email\",\"email_clean2\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux26 .

km-dev:PredicateObjectMap_b1eb4178-022e-47c0-a7e3-3c45b6e116db rr:objectMap _:node19o1kef0ux26 .

km-dev:TriplesMap_ade5f1be-1132-47c8-8867-6de67971d2a7 rr:predicateObjectMap km-dev:PredicateObjectMap_b1eb4178-022e-47c0-a7e3-3c45b6e116db .

km-dev:PredicateObjectMap_b1eb4178-022e-47c0-a7e3-3c45b6e116db a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_b1eb4178-022e-47c0-a7e3-3c45b6e116db .

km-dev:TriplesMap_01e1e9ca-5ad4-4252-9f50-8bf09f31cf81 a rr:TriplesMap .

_:node19o1kef0ux1 km-dev:hasTriplesMap km-dev:TriplesMap_01e1e9ca-5ad4-4252-9f50-8bf09f31cf81 .

km-dev:TriplesMap_01e1e9ca-5ad4-4252-9f50-8bf09f31cf81 km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux27 rr:tableName "webpage-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasLogicalTable _:node19o1kef0ux27 .

km-dev:TriplesMap_01e1e9ca-5ad4-4252-9f50-8bf09f31cf81 rr:logicalTable _:node19o1kef0ux27 ;
	rr:subjectMap _:node19o1kef0ux28 .

_:node19o1kef0ux1 km-dev:hasSubjectMap _:node19o1kef0ux28 .

_:node19o1kef0ux28 km-dev:isPartOfMapping _:node19o1kef0ux1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature5" ;
	rr:class memex:Feature ;
	rr:template "{[\"name\",\"name_feature_uri\"]}" .

km-dev:PredicateObjectMap_d1a86474-dae4-4499-a3c6-18deef6e8ebe rr:predicate memex:featureName .

_:node19o1kef0ux29 rr:constant "person_name" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux29 .

km-dev:PredicateObjectMap_d1a86474-dae4-4499-a3c6-18deef6e8ebe rr:objectMap _:node19o1kef0ux29 .

km-dev:TriplesMap_01e1e9ca-5ad4-4252-9f50-8bf09f31cf81 rr:predicateObjectMap km-dev:PredicateObjectMap_d1a86474-dae4-4499-a3c6-18deef6e8ebe .

km-dev:PredicateObjectMap_d1a86474-dae4-4499-a3c6-18deef6e8ebe a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_d1a86474-dae4-4499-a3c6-18deef6e8ebe .

km-dev:PredicateObjectMap_1c2c2bee-7512-46c4-a0b1-13f25bdeb832 rr:predicate memex:featureValue .

_:node19o1kef0ux30 rr:column "[\"name\",\"names2\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux30 .

km-dev:PredicateObjectMap_1c2c2bee-7512-46c4-a0b1-13f25bdeb832 rr:objectMap _:node19o1kef0ux30 .

km-dev:TriplesMap_01e1e9ca-5ad4-4252-9f50-8bf09f31cf81 rr:predicateObjectMap km-dev:PredicateObjectMap_1c2c2bee-7512-46c4-a0b1-13f25bdeb832 .

km-dev:PredicateObjectMap_1c2c2bee-7512-46c4-a0b1-13f25bdeb832 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_1c2c2bee-7512-46c4-a0b1-13f25bdeb832 .

km-dev:PredicateObjectMap_a19e1b75-314d-40c5-bfdc-d2e619433375 rr:predicate memex:person_name .

_:node19o1kef0ux31 rr:column "[\"name\",\"names\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux31 .

km-dev:PredicateObjectMap_a19e1b75-314d-40c5-bfdc-d2e619433375 rr:objectMap _:node19o1kef0ux31 .

km-dev:TriplesMap_01e1e9ca-5ad4-4252-9f50-8bf09f31cf81 rr:predicateObjectMap km-dev:PredicateObjectMap_a19e1b75-314d-40c5-bfdc-d2e619433375 .

km-dev:PredicateObjectMap_a19e1b75-314d-40c5-bfdc-d2e619433375 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_a19e1b75-314d-40c5-bfdc-d2e619433375 .

km-dev:TriplesMap_19452101-3a56-4c87-bc3c-d345e44d08d2 a rr:TriplesMap .

_:node19o1kef0ux1 km-dev:hasTriplesMap km-dev:TriplesMap_19452101-3a56-4c87-bc3c-d345e44d08d2 .

km-dev:TriplesMap_19452101-3a56-4c87-bc3c-d345e44d08d2 km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux32 rr:tableName "webpage-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasLogicalTable _:node19o1kef0ux32 .

km-dev:TriplesMap_19452101-3a56-4c87-bc3c-d345e44d08d2 rr:logicalTable _:node19o1kef0ux32 ;
	rr:subjectMap _:node19o1kef0ux33 .

_:node19o1kef0ux1 km-dev:hasSubjectMap _:node19o1kef0ux33 .

_:node19o1kef0ux33 km-dev:isPartOfMapping _:node19o1kef0ux1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature6" ;
	rr:class memex:Feature ;
	rr:template "{[\"weight\",\"weight_feature_uri\"]}" .

km-dev:PredicateObjectMap_a102fcd5-7b35-46e3-ae7b-cb4d694a1971 rr:predicate memex:featureName .

_:node19o1kef0ux34 rr:constant "person_weight" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux34 .

km-dev:PredicateObjectMap_a102fcd5-7b35-46e3-ae7b-cb4d694a1971 rr:objectMap _:node19o1kef0ux34 .

km-dev:TriplesMap_19452101-3a56-4c87-bc3c-d345e44d08d2 rr:predicateObjectMap km-dev:PredicateObjectMap_a102fcd5-7b35-46e3-ae7b-cb4d694a1971 .

km-dev:PredicateObjectMap_a102fcd5-7b35-46e3-ae7b-cb4d694a1971 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_a102fcd5-7b35-46e3-ae7b-cb4d694a1971 .

km-dev:PredicateObjectMap_8cc94d6b-09fe-456b-b19e-90cf3ee71e77 rr:predicate memex:featureValue .

_:node19o1kef0ux35 rr:column "[\"weight\",\"weights2\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux35 .

km-dev:PredicateObjectMap_8cc94d6b-09fe-456b-b19e-90cf3ee71e77 rr:objectMap _:node19o1kef0ux35 .

km-dev:TriplesMap_19452101-3a56-4c87-bc3c-d345e44d08d2 rr:predicateObjectMap km-dev:PredicateObjectMap_8cc94d6b-09fe-456b-b19e-90cf3ee71e77 .

km-dev:PredicateObjectMap_8cc94d6b-09fe-456b-b19e-90cf3ee71e77 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_8cc94d6b-09fe-456b-b19e-90cf3ee71e77 .

km-dev:PredicateObjectMap_d2dd5577-8c58-43ee-9949-5b2fc7d6bea1 rr:predicate memex:person_weight .

_:node19o1kef0ux36 rr:column "[\"weight\",\"weights\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux36 .

km-dev:PredicateObjectMap_d2dd5577-8c58-43ee-9949-5b2fc7d6bea1 rr:objectMap _:node19o1kef0ux36 .

km-dev:TriplesMap_19452101-3a56-4c87-bc3c-d345e44d08d2 rr:predicateObjectMap km-dev:PredicateObjectMap_d2dd5577-8c58-43ee-9949-5b2fc7d6bea1 .

km-dev:PredicateObjectMap_d2dd5577-8c58-43ee-9949-5b2fc7d6bea1 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_d2dd5577-8c58-43ee-9949-5b2fc7d6bea1 .

km-dev:TriplesMap_18f0d124-cc04-425d-b0c8-6f5f044a6bf0 a rr:TriplesMap .

_:node19o1kef0ux1 km-dev:hasTriplesMap km-dev:TriplesMap_18f0d124-cc04-425d-b0c8-6f5f044a6bf0 .

km-dev:TriplesMap_18f0d124-cc04-425d-b0c8-6f5f044a6bf0 km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux37 rr:tableName "webpage-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasLogicalTable _:node19o1kef0ux37 .

km-dev:TriplesMap_18f0d124-cc04-425d-b0c8-6f5f044a6bf0 rr:logicalTable _:node19o1kef0ux37 ;
	rr:subjectMap _:node19o1kef0ux38 .

_:node19o1kef0ux1 km-dev:hasSubjectMap _:node19o1kef0ux38 .

_:node19o1kef0ux38 km-dev:isPartOfMapping _:node19o1kef0ux1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature7" ;
	rr:class memex:Feature ;
	rr:template "{[\"height\",\"height_feature_uri\"]}" .

km-dev:PredicateObjectMap_cf4867ae-61d3-4e92-92c3-9bf32076192b rr:predicate memex:featureName .

_:node19o1kef0ux39 rr:constant "person_height" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux39 .

km-dev:PredicateObjectMap_cf4867ae-61d3-4e92-92c3-9bf32076192b rr:objectMap _:node19o1kef0ux39 .

km-dev:TriplesMap_18f0d124-cc04-425d-b0c8-6f5f044a6bf0 rr:predicateObjectMap km-dev:PredicateObjectMap_cf4867ae-61d3-4e92-92c3-9bf32076192b .

km-dev:PredicateObjectMap_cf4867ae-61d3-4e92-92c3-9bf32076192b a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_cf4867ae-61d3-4e92-92c3-9bf32076192b .

km-dev:PredicateObjectMap_6d2a0a6d-7d70-417d-a9f6-3f78bd96e29e rr:predicate memex:featureValue .

_:node19o1kef0ux40 rr:column "[\"height\",\"heights2\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux40 .

km-dev:PredicateObjectMap_6d2a0a6d-7d70-417d-a9f6-3f78bd96e29e rr:objectMap _:node19o1kef0ux40 .

km-dev:TriplesMap_18f0d124-cc04-425d-b0c8-6f5f044a6bf0 rr:predicateObjectMap km-dev:PredicateObjectMap_6d2a0a6d-7d70-417d-a9f6-3f78bd96e29e .

km-dev:PredicateObjectMap_6d2a0a6d-7d70-417d-a9f6-3f78bd96e29e a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_6d2a0a6d-7d70-417d-a9f6-3f78bd96e29e .

km-dev:PredicateObjectMap_f6d43f27-5782-4ed3-b325-0e3ab2625655 rr:predicate memex:person_height .

_:node19o1kef0ux41 rr:column "[\"height\",\"heights\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux41 .

km-dev:PredicateObjectMap_f6d43f27-5782-4ed3-b325-0e3ab2625655 rr:objectMap _:node19o1kef0ux41 .

km-dev:TriplesMap_18f0d124-cc04-425d-b0c8-6f5f044a6bf0 rr:predicateObjectMap km-dev:PredicateObjectMap_f6d43f27-5782-4ed3-b325-0e3ab2625655 .

km-dev:PredicateObjectMap_f6d43f27-5782-4ed3-b325-0e3ab2625655 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_f6d43f27-5782-4ed3-b325-0e3ab2625655 .

km-dev:TriplesMap_a44ee515-83c5-4091-98f5-2b1f478042ec a rr:TriplesMap .

_:node19o1kef0ux1 km-dev:hasTriplesMap km-dev:TriplesMap_a44ee515-83c5-4091-98f5-2b1f478042ec .

km-dev:TriplesMap_a44ee515-83c5-4091-98f5-2b1f478042ec km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux42 rr:tableName "webpage-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasLogicalTable _:node19o1kef0ux42 .

km-dev:TriplesMap_a44ee515-83c5-4091-98f5-2b1f478042ec rr:logicalTable _:node19o1kef0ux42 ;
	rr:subjectMap _:node19o1kef0ux43 .

_:node19o1kef0ux1 km-dev:hasSubjectMap _:node19o1kef0ux43 .

_:node19o1kef0ux43 km-dev:isPartOfMapping _:node19o1kef0ux1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/Feature8" ;
	rr:class memex:Feature ;
	rr:template "{[\"ethnicity\",\"ethnicity_feature_uri\"]}" .

km-dev:PredicateObjectMap_fe75e45c-b65c-4cdf-887a-b63f545b9dff rr:predicate memex:featureName .

_:node19o1kef0ux44 rr:constant "person_ethnicity" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux44 .

km-dev:PredicateObjectMap_fe75e45c-b65c-4cdf-887a-b63f545b9dff rr:objectMap _:node19o1kef0ux44 .

km-dev:TriplesMap_a44ee515-83c5-4091-98f5-2b1f478042ec rr:predicateObjectMap km-dev:PredicateObjectMap_fe75e45c-b65c-4cdf-887a-b63f545b9dff .

km-dev:PredicateObjectMap_fe75e45c-b65c-4cdf-887a-b63f545b9dff a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_fe75e45c-b65c-4cdf-887a-b63f545b9dff .

km-dev:PredicateObjectMap_fb22aa0c-fc8f-4a28-ad87-ce1de2ba991c rr:predicate memex:featureValue .

_:node19o1kef0ux45 rr:column "[\"ethnicity\",\"ethnicity1\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux45 .

km-dev:PredicateObjectMap_fb22aa0c-fc8f-4a28-ad87-ce1de2ba991c rr:objectMap _:node19o1kef0ux45 .

km-dev:TriplesMap_a44ee515-83c5-4091-98f5-2b1f478042ec rr:predicateObjectMap km-dev:PredicateObjectMap_fb22aa0c-fc8f-4a28-ad87-ce1de2ba991c .

km-dev:PredicateObjectMap_fb22aa0c-fc8f-4a28-ad87-ce1de2ba991c a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_fb22aa0c-fc8f-4a28-ad87-ce1de2ba991c .

km-dev:PredicateObjectMap_64968560-1364-460b-af66-850b31ebcc90 rr:predicate memex:person_ethnicity .

_:node19o1kef0ux46 rr:column "[\"ethnicity\",\"ethnicity1\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux46 .

km-dev:PredicateObjectMap_64968560-1364-460b-af66-850b31ebcc90 rr:objectMap _:node19o1kef0ux46 .

km-dev:TriplesMap_a44ee515-83c5-4091-98f5-2b1f478042ec rr:predicateObjectMap km-dev:PredicateObjectMap_64968560-1364-460b-af66-850b31ebcc90 .

km-dev:PredicateObjectMap_64968560-1364-460b-af66-850b31ebcc90 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_64968560-1364-460b-af66-850b31ebcc90 .

km-dev:TriplesMap_3beec3f1-5402-4a48-9a53-0921a2233884 a rr:TriplesMap .

_:node19o1kef0ux1 km-dev:hasTriplesMap km-dev:TriplesMap_3beec3f1-5402-4a48-9a53-0921a2233884 .

km-dev:TriplesMap_3beec3f1-5402-4a48-9a53-0921a2233884 km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux47 rr:tableName "webpage-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasLogicalTable _:node19o1kef0ux47 .

km-dev:TriplesMap_3beec3f1-5402-4a48-9a53-0921a2233884 rr:logicalTable _:node19o1kef0ux47 ;
	rr:subjectMap _:node19o1kef0ux48 .

_:node19o1kef0ux1 km-dev:hasSubjectMap _:node19o1kef0ux48 .

_:node19o1kef0ux48 km-dev:isPartOfMapping _:node19o1kef0ux1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://memexproxy.com/ontology/FeatureCollection1" ;
	rr:class memex:FeatureCollection ;
	rr:template "{cache_uri}/featurecollection" .

km-dev:PredicateObjectMap_15a2ae98-045f-41a6-8853-8f65ab090d92 rr:predicate memex:emailaddress_feature .

km-dev:RefObjectMap_0c99fb50-17b0-4f07-a8e4-a7b562233f20 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_ade5f1be-1132-47c8-8867-6de67971d2a7 ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap km-dev:RefObjectMap_0c99fb50-17b0-4f07-a8e4-a7b562233f20 .

km-dev:PredicateObjectMap_15a2ae98-045f-41a6-8853-8f65ab090d92 rr:objectMap km-dev:RefObjectMap_0c99fb50-17b0-4f07-a8e4-a7b562233f20 .

km-dev:TriplesMap_3beec3f1-5402-4a48-9a53-0921a2233884 rr:predicateObjectMap km-dev:PredicateObjectMap_15a2ae98-045f-41a6-8853-8f65ab090d92 .

km-dev:PredicateObjectMap_15a2ae98-045f-41a6-8853-8f65ab090d92 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_15a2ae98-045f-41a6-8853-8f65ab090d92 .

km-dev:PredicateObjectMap_26d90201-e64c-4822-b29a-a7ff89b8075d rr:predicate memex:person_age_feature .

km-dev:RefObjectMap_db0e1f81-87c3-4f56-881b-c23de4bc0af7 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_0e4c755c-35e2-43c3-9af5-ccef293ba74e ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap km-dev:RefObjectMap_db0e1f81-87c3-4f56-881b-c23de4bc0af7 .

km-dev:PredicateObjectMap_26d90201-e64c-4822-b29a-a7ff89b8075d rr:objectMap km-dev:RefObjectMap_db0e1f81-87c3-4f56-881b-c23de4bc0af7 .

km-dev:TriplesMap_3beec3f1-5402-4a48-9a53-0921a2233884 rr:predicateObjectMap km-dev:PredicateObjectMap_26d90201-e64c-4822-b29a-a7ff89b8075d .

km-dev:PredicateObjectMap_26d90201-e64c-4822-b29a-a7ff89b8075d a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_26d90201-e64c-4822-b29a-a7ff89b8075d .

km-dev:PredicateObjectMap_fad37b6e-047d-4b4e-877f-590e685d9b83 rr:predicate memex:person_ethnicity_feature .

km-dev:RefObjectMap_03fd8fdb-3d63-4d75-8445-3200ac298b1b a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_a44ee515-83c5-4091-98f5-2b1f478042ec ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap km-dev:RefObjectMap_03fd8fdb-3d63-4d75-8445-3200ac298b1b .

km-dev:PredicateObjectMap_fad37b6e-047d-4b4e-877f-590e685d9b83 rr:objectMap km-dev:RefObjectMap_03fd8fdb-3d63-4d75-8445-3200ac298b1b .

km-dev:TriplesMap_3beec3f1-5402-4a48-9a53-0921a2233884 rr:predicateObjectMap km-dev:PredicateObjectMap_fad37b6e-047d-4b4e-877f-590e685d9b83 .

km-dev:PredicateObjectMap_fad37b6e-047d-4b4e-877f-590e685d9b83 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_fad37b6e-047d-4b4e-877f-590e685d9b83 .

km-dev:PredicateObjectMap_9be78d1d-6640-4414-bc0d-baeec7abcd48 rr:predicate memex:person_height_feature .

km-dev:RefObjectMap_70af8847-8e36-4e58-8f53-768b2ef4863a a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_18f0d124-cc04-425d-b0c8-6f5f044a6bf0 ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap km-dev:RefObjectMap_70af8847-8e36-4e58-8f53-768b2ef4863a .

km-dev:PredicateObjectMap_9be78d1d-6640-4414-bc0d-baeec7abcd48 rr:objectMap km-dev:RefObjectMap_70af8847-8e36-4e58-8f53-768b2ef4863a .

km-dev:TriplesMap_3beec3f1-5402-4a48-9a53-0921a2233884 rr:predicateObjectMap km-dev:PredicateObjectMap_9be78d1d-6640-4414-bc0d-baeec7abcd48 .

km-dev:PredicateObjectMap_9be78d1d-6640-4414-bc0d-baeec7abcd48 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_9be78d1d-6640-4414-bc0d-baeec7abcd48 .

km-dev:PredicateObjectMap_1ba9a501-9330-46ed-9931-a6fa375b05a4 rr:predicate memex:person_name_feature .

km-dev:RefObjectMap_75a9d73c-3f13-4372-bbdc-114c6d01aee3 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_01e1e9ca-5ad4-4252-9f50-8bf09f31cf81 ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap km-dev:RefObjectMap_75a9d73c-3f13-4372-bbdc-114c6d01aee3 .

km-dev:PredicateObjectMap_1ba9a501-9330-46ed-9931-a6fa375b05a4 rr:objectMap km-dev:RefObjectMap_75a9d73c-3f13-4372-bbdc-114c6d01aee3 .

km-dev:TriplesMap_3beec3f1-5402-4a48-9a53-0921a2233884 rr:predicateObjectMap km-dev:PredicateObjectMap_1ba9a501-9330-46ed-9931-a6fa375b05a4 .

km-dev:PredicateObjectMap_1ba9a501-9330-46ed-9931-a6fa375b05a4 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_1ba9a501-9330-46ed-9931-a6fa375b05a4 .

km-dev:PredicateObjectMap_d6ca76ee-d6f5-469e-99fd-1d56464532a6 rr:predicate memex:person_weight_feature .

km-dev:RefObjectMap_515f3acd-1a4d-493f-9130-a1d229c786fa a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_19452101-3a56-4c87-bc3c-d345e44d08d2 ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap km-dev:RefObjectMap_515f3acd-1a4d-493f-9130-a1d229c786fa .

km-dev:PredicateObjectMap_d6ca76ee-d6f5-469e-99fd-1d56464532a6 rr:objectMap km-dev:RefObjectMap_515f3acd-1a4d-493f-9130-a1d229c786fa .

km-dev:TriplesMap_3beec3f1-5402-4a48-9a53-0921a2233884 rr:predicateObjectMap km-dev:PredicateObjectMap_d6ca76ee-d6f5-469e-99fd-1d56464532a6 .

km-dev:PredicateObjectMap_d6ca76ee-d6f5-469e-99fd-1d56464532a6 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_d6ca76ee-d6f5-469e-99fd-1d56464532a6 .

km-dev:PredicateObjectMap_fce02ed0-891b-4c15-9631-9fc015104f1e rr:predicate memex:phonenumber_feature .

km-dev:RefObjectMap_c9fe6fa4-166c-43b7-9638-0f64ca96f4ac a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_a51f97dd-e7a9-4dfd-bc93-90c186448100 ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap km-dev:RefObjectMap_c9fe6fa4-166c-43b7-9638-0f64ca96f4ac .

km-dev:PredicateObjectMap_fce02ed0-891b-4c15-9631-9fc015104f1e rr:objectMap km-dev:RefObjectMap_c9fe6fa4-166c-43b7-9638-0f64ca96f4ac .

km-dev:TriplesMap_3beec3f1-5402-4a48-9a53-0921a2233884 rr:predicateObjectMap km-dev:PredicateObjectMap_fce02ed0-891b-4c15-9631-9fc015104f1e .

km-dev:PredicateObjectMap_fce02ed0-891b-4c15-9631-9fc015104f1e a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_fce02ed0-891b-4c15-9631-9fc015104f1e .

km-dev:PredicateObjectMap_f990425e-e7d9-4c38-91aa-47da75f39420 rr:predicate memex:website_feature .

km-dev:RefObjectMap_6a38faa1-b51e-4e95-a664-401593713e6f a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_4b7201cc-29b6-49fb-aebd-c7b0aa6dc20c ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap km-dev:RefObjectMap_6a38faa1-b51e-4e95-a664-401593713e6f .

km-dev:PredicateObjectMap_f990425e-e7d9-4c38-91aa-47da75f39420 rr:objectMap km-dev:RefObjectMap_6a38faa1-b51e-4e95-a664-401593713e6f .

km-dev:TriplesMap_3beec3f1-5402-4a48-9a53-0921a2233884 rr:predicateObjectMap km-dev:PredicateObjectMap_f990425e-e7d9-4c38-91aa-47da75f39420 .

km-dev:PredicateObjectMap_f990425e-e7d9-4c38-91aa-47da75f39420 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_f990425e-e7d9-4c38-91aa-47da75f39420 .

km-dev:TriplesMap_12b29592-03e2-4481-8f44-dc48cced0318 a rr:TriplesMap .

_:node19o1kef0ux1 km-dev:hasTriplesMap km-dev:TriplesMap_12b29592-03e2-4481-8f44-dc48cced0318 .

km-dev:TriplesMap_12b29592-03e2-4481-8f44-dc48cced0318 km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux49 rr:tableName "webpage-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasLogicalTable _:node19o1kef0ux49 .

km-dev:TriplesMap_12b29592-03e2-4481-8f44-dc48cced0318 rr:logicalTable _:node19o1kef0ux49 ;
	rr:subjectMap _:node19o1kef0ux50 .

_:node19o1kef0ux1 km-dev:hasSubjectMap _:node19o1kef0ux50 .

_:node19o1kef0ux50 km-dev:isPartOfMapping _:node19o1kef0ux1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/ImageObject1" ;
	rr:class schema:ImageObject ;
	rr:template "{[\"images\",\"image_uri\"]}" .

km-dev:PredicateObjectMap_ead7d265-9277-4c0f-a0ed-c1c4fe50d221 rr:predicate memex:cacheUrl .

_:node19o1kef0ux51 rr:column "[\"images\",\"s3imageurl\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux51 .

km-dev:PredicateObjectMap_ead7d265-9277-4c0f-a0ed-c1c4fe50d221 rr:objectMap _:node19o1kef0ux51 .

km-dev:TriplesMap_12b29592-03e2-4481-8f44-dc48cced0318 rr:predicateObjectMap km-dev:PredicateObjectMap_ead7d265-9277-4c0f-a0ed-c1c4fe50d221 .

km-dev:PredicateObjectMap_ead7d265-9277-4c0f-a0ed-c1c4fe50d221 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_ead7d265-9277-4c0f-a0ed-c1c4fe50d221 .

km-dev:PredicateObjectMap_868a6c65-35ba-4ab2-9d73-6188c6aa91bd rr:predicate memex:snapshotUri .

_:node19o1kef0ux52 rr:column "[\"images\",\"image_snapshot_uri\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux52 .

km-dev:PredicateObjectMap_868a6c65-35ba-4ab2-9d73-6188c6aa91bd rr:objectMap _:node19o1kef0ux52 .

km-dev:TriplesMap_12b29592-03e2-4481-8f44-dc48cced0318 rr:predicateObjectMap km-dev:PredicateObjectMap_868a6c65-35ba-4ab2-9d73-6188c6aa91bd .

km-dev:PredicateObjectMap_868a6c65-35ba-4ab2-9d73-6188c6aa91bd a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_868a6c65-35ba-4ab2-9d73-6188c6aa91bd .

km-dev:PredicateObjectMap_b15a1a4e-3fd3-4265-8e5c-ae57ba76002d rr:predicate schema:url .

_:node19o1kef0ux53 rr:column "[\"images\",\"imageurl\"]" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux53 .

km-dev:PredicateObjectMap_b15a1a4e-3fd3-4265-8e5c-ae57ba76002d rr:objectMap _:node19o1kef0ux53 .

km-dev:TriplesMap_12b29592-03e2-4481-8f44-dc48cced0318 rr:predicateObjectMap km-dev:PredicateObjectMap_b15a1a4e-3fd3-4265-8e5c-ae57ba76002d .

km-dev:PredicateObjectMap_b15a1a4e-3fd3-4265-8e5c-ae57ba76002d a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_b15a1a4e-3fd3-4265-8e5c-ae57ba76002d .

km-dev:TriplesMap_0ef75b59-467f-4a59-a30b-8c4f6df4884d a rr:TriplesMap .

_:node19o1kef0ux1 km-dev:hasTriplesMap km-dev:TriplesMap_0ef75b59-467f-4a59-a30b-8c4f6df4884d .

km-dev:TriplesMap_0ef75b59-467f-4a59-a30b-8c4f6df4884d km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux54 rr:tableName "webpage-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasLogicalTable _:node19o1kef0ux54 .

km-dev:TriplesMap_0ef75b59-467f-4a59-a30b-8c4f6df4884d rr:logicalTable _:node19o1kef0ux54 ;
	rr:subjectMap _:node19o1kef0ux55 .

_:node19o1kef0ux1 km-dev:hasSubjectMap _:node19o1kef0ux55 .

_:node19o1kef0ux55 km-dev:isPartOfMapping _:node19o1kef0ux1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/Person1" ;
	rr:class schema:Person ;
	rr:template "{person_username_uri}" .

km-dev:TriplesMap_a895bd26-8886-4f8f-8a38-973b9c2761eb a rr:TriplesMap .

_:node19o1kef0ux1 km-dev:hasTriplesMap km-dev:TriplesMap_a895bd26-8886-4f8f-8a38-973b9c2761eb .

km-dev:TriplesMap_a895bd26-8886-4f8f-8a38-973b9c2761eb km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux56 rr:tableName "webpage-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasLogicalTable _:node19o1kef0ux56 .

km-dev:TriplesMap_a895bd26-8886-4f8f-8a38-973b9c2761eb rr:logicalTable _:node19o1kef0ux56 ;
	rr:subjectMap _:node19o1kef0ux57 .

_:node19o1kef0ux1 km-dev:hasSubjectMap _:node19o1kef0ux57 .

_:node19o1kef0ux57 km-dev:isPartOfMapping _:node19o1kef0ux1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPage1" ;
	rr:class schema:WebPage ;
	rr:template "{cache_uri}" ;
	a km-dev:steinerTreeRootNode .

km-dev:PredicateObjectMap_ee018c13-792e-4d31-9208-2c7a250936f7 rr:predicate memex:dateCrawled .

_:node19o1kef0ux58 rr:column "import_time" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux58 .

km-dev:PredicateObjectMap_ee018c13-792e-4d31-9208-2c7a250936f7 rr:objectMap _:node19o1kef0ux58 .

km-dev:TriplesMap_a895bd26-8886-4f8f-8a38-973b9c2761eb rr:predicateObjectMap km-dev:PredicateObjectMap_ee018c13-792e-4d31-9208-2c7a250936f7 .

km-dev:PredicateObjectMap_ee018c13-792e-4d31-9208-2c7a250936f7 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_ee018c13-792e-4d31-9208-2c7a250936f7 .

km-dev:PredicateObjectMap_59b2fd6b-747a-4e22-bc84-11d2fef59f76 rr:predicate memex:hasBodyPart .

km-dev:RefObjectMap_e389ac4a-e840-4825-936d-fb7bb54117b4 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_f4082d5f-3634-4300-ba40-49067f7d7b5a ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap km-dev:RefObjectMap_e389ac4a-e840-4825-936d-fb7bb54117b4 .

km-dev:PredicateObjectMap_59b2fd6b-747a-4e22-bc84-11d2fef59f76 rr:objectMap km-dev:RefObjectMap_e389ac4a-e840-4825-936d-fb7bb54117b4 .

km-dev:TriplesMap_a895bd26-8886-4f8f-8a38-973b9c2761eb rr:predicateObjectMap km-dev:PredicateObjectMap_59b2fd6b-747a-4e22-bc84-11d2fef59f76 .

km-dev:PredicateObjectMap_59b2fd6b-747a-4e22-bc84-11d2fef59f76 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_59b2fd6b-747a-4e22-bc84-11d2fef59f76 .

km-dev:PredicateObjectMap_161cc940-41c7-47c5-a79f-19b68457169b rr:predicate memex:hasFeatureCollection .

km-dev:RefObjectMap_e068e914-e5bc-4bc8-84be-089ecd6a0161 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_3beec3f1-5402-4a48-9a53-0921a2233884 ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap km-dev:RefObjectMap_e068e914-e5bc-4bc8-84be-089ecd6a0161 .

km-dev:PredicateObjectMap_161cc940-41c7-47c5-a79f-19b68457169b rr:objectMap km-dev:RefObjectMap_e068e914-e5bc-4bc8-84be-089ecd6a0161 .

km-dev:TriplesMap_a895bd26-8886-4f8f-8a38-973b9c2761eb rr:predicateObjectMap km-dev:PredicateObjectMap_161cc940-41c7-47c5-a79f-19b68457169b .

km-dev:PredicateObjectMap_161cc940-41c7-47c5-a79f-19b68457169b a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_161cc940-41c7-47c5-a79f-19b68457169b .

km-dev:PredicateObjectMap_012e1346-8ee4-401e-9d7b-5cef93856071 rr:predicate memex:hasImagePart .

km-dev:RefObjectMap_6bae26cb-cb13-4149-a4b4-203b215ed75b a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_12b29592-03e2-4481-8f44-dc48cced0318 ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap km-dev:RefObjectMap_6bae26cb-cb13-4149-a4b4-203b215ed75b .

km-dev:PredicateObjectMap_012e1346-8ee4-401e-9d7b-5cef93856071 rr:objectMap km-dev:RefObjectMap_6bae26cb-cb13-4149-a4b4-203b215ed75b .

km-dev:TriplesMap_a895bd26-8886-4f8f-8a38-973b9c2761eb rr:predicateObjectMap km-dev:PredicateObjectMap_012e1346-8ee4-401e-9d7b-5cef93856071 .

km-dev:PredicateObjectMap_012e1346-8ee4-401e-9d7b-5cef93856071 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_012e1346-8ee4-401e-9d7b-5cef93856071 .

km-dev:PredicateObjectMap_40f9b138-16c5-42e6-b834-03211e0d8b8a rr:predicate memex:hasTitlePart .

km-dev:RefObjectMap_a1618ea0-fa71-455a-b24b-8531fb3eea30 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_8759dc40-f402-480b-8249-7fd35ed48857 ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap km-dev:RefObjectMap_a1618ea0-fa71-455a-b24b-8531fb3eea30 .

km-dev:PredicateObjectMap_40f9b138-16c5-42e6-b834-03211e0d8b8a rr:objectMap km-dev:RefObjectMap_a1618ea0-fa71-455a-b24b-8531fb3eea30 .

km-dev:TriplesMap_a895bd26-8886-4f8f-8a38-973b9c2761eb rr:predicateObjectMap km-dev:PredicateObjectMap_40f9b138-16c5-42e6-b834-03211e0d8b8a .

km-dev:PredicateObjectMap_40f9b138-16c5-42e6-b834-03211e0d8b8a a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_40f9b138-16c5-42e6-b834-03211e0d8b8a .

km-dev:PredicateObjectMap_56c00752-3d8a-4069-b492-bcba14cd235e rr:predicate memex:snapshotUri .

_:node19o1kef0ux59 rr:column "snapshot_uri" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux59 .

km-dev:PredicateObjectMap_56c00752-3d8a-4069-b492-bcba14cd235e rr:objectMap _:node19o1kef0ux59 .

km-dev:TriplesMap_a895bd26-8886-4f8f-8a38-973b9c2761eb rr:predicateObjectMap km-dev:PredicateObjectMap_56c00752-3d8a-4069-b492-bcba14cd235e .

km-dev:PredicateObjectMap_56c00752-3d8a-4069-b492-bcba14cd235e a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_56c00752-3d8a-4069-b492-bcba14cd235e .

km-dev:PredicateObjectMap_0432101e-767f-4488-904c-d97e750541de rr:predicate schema:screenshot .

_:node19o1kef0ux60 rr:column "screenshot" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux60 .

km-dev:PredicateObjectMap_0432101e-767f-4488-904c-d97e750541de rr:objectMap _:node19o1kef0ux60 .

km-dev:TriplesMap_a895bd26-8886-4f8f-8a38-973b9c2761eb rr:predicateObjectMap km-dev:PredicateObjectMap_0432101e-767f-4488-904c-d97e750541de .

km-dev:PredicateObjectMap_0432101e-767f-4488-904c-d97e750541de a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_0432101e-767f-4488-904c-d97e750541de .

km-dev:PredicateObjectMap_f1ddbaba-d40e-4995-8624-65aeca36a5c7 rr:predicate schema:url .

_:node19o1kef0ux61 rr:column "url" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux61 .

km-dev:PredicateObjectMap_f1ddbaba-d40e-4995-8624-65aeca36a5c7 rr:objectMap _:node19o1kef0ux61 .

km-dev:TriplesMap_a895bd26-8886-4f8f-8a38-973b9c2761eb rr:predicateObjectMap km-dev:PredicateObjectMap_f1ddbaba-d40e-4995-8624-65aeca36a5c7 .

km-dev:PredicateObjectMap_f1ddbaba-d40e-4995-8624-65aeca36a5c7 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_f1ddbaba-d40e-4995-8624-65aeca36a5c7 .

km-dev:PredicateObjectMap_dba644e3-abd3-4be6-9cfd-69ee3679ef17 rr:predicate prov:wasGeneratedBy .

km-dev:RefObjectMap_6435ad01-db81-4285-8adc-978bf155ec32 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_6d53f80b-d46b-435b-b8ac-19a4a0db561c ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap km-dev:RefObjectMap_6435ad01-db81-4285-8adc-978bf155ec32 .

km-dev:PredicateObjectMap_dba644e3-abd3-4be6-9cfd-69ee3679ef17 rr:objectMap km-dev:RefObjectMap_6435ad01-db81-4285-8adc-978bf155ec32 .

km-dev:TriplesMap_a895bd26-8886-4f8f-8a38-973b9c2761eb rr:predicateObjectMap km-dev:PredicateObjectMap_dba644e3-abd3-4be6-9cfd-69ee3679ef17 .

km-dev:PredicateObjectMap_dba644e3-abd3-4be6-9cfd-69ee3679ef17 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_dba644e3-abd3-4be6-9cfd-69ee3679ef17 .

km-dev:TriplesMap_f4082d5f-3634-4300-ba40-49067f7d7b5a a rr:TriplesMap .

_:node19o1kef0ux1 km-dev:hasTriplesMap km-dev:TriplesMap_f4082d5f-3634-4300-ba40-49067f7d7b5a .

km-dev:TriplesMap_f4082d5f-3634-4300-ba40-49067f7d7b5a km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux62 rr:tableName "webpage-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasLogicalTable _:node19o1kef0ux62 .

km-dev:TriplesMap_f4082d5f-3634-4300-ba40-49067f7d7b5a rr:logicalTable _:node19o1kef0ux62 ;
	rr:subjectMap _:node19o1kef0ux63 .

_:node19o1kef0ux1 km-dev:hasSubjectMap _:node19o1kef0ux63 .

_:node19o1kef0ux63 km-dev:isPartOfMapping _:node19o1kef0ux1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPageElement1" ;
	rr:class schema:WebPageElement ;
	rr:template "{body_uri}" .

km-dev:PredicateObjectMap_654bcb0c-ec2f-45fa-9eeb-5b937d8e633b rr:predicate schema:text .

_:node19o1kef0ux64 rr:column "bodytext" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux64 .

km-dev:PredicateObjectMap_654bcb0c-ec2f-45fa-9eeb-5b937d8e633b rr:objectMap _:node19o1kef0ux64 .

km-dev:TriplesMap_f4082d5f-3634-4300-ba40-49067f7d7b5a rr:predicateObjectMap km-dev:PredicateObjectMap_654bcb0c-ec2f-45fa-9eeb-5b937d8e633b .

km-dev:PredicateObjectMap_654bcb0c-ec2f-45fa-9eeb-5b937d8e633b a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_654bcb0c-ec2f-45fa-9eeb-5b937d8e633b .

km-dev:TriplesMap_8759dc40-f402-480b-8249-7fd35ed48857 a rr:TriplesMap .

_:node19o1kef0ux1 km-dev:hasTriplesMap km-dev:TriplesMap_8759dc40-f402-480b-8249-7fd35ed48857 .

km-dev:TriplesMap_8759dc40-f402-480b-8249-7fd35ed48857 km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux65 rr:tableName "webpage-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasLogicalTable _:node19o1kef0ux65 .

km-dev:TriplesMap_8759dc40-f402-480b-8249-7fd35ed48857 rr:logicalTable _:node19o1kef0ux65 ;
	rr:subjectMap _:node19o1kef0ux66 .

_:node19o1kef0ux1 km-dev:hasSubjectMap _:node19o1kef0ux66 .

_:node19o1kef0ux66 km-dev:isPartOfMapping _:node19o1kef0ux1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/WebPageElement2" ;
	rr:class schema:WebPageElement ;
	rr:template "{title_uri}" .

km-dev:PredicateObjectMap_9d0710e7-d01a-416f-b694-7650ae2ff953 rr:predicate schema:text .

_:node19o1kef0ux67 rr:column "title" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux67 .

km-dev:PredicateObjectMap_9d0710e7-d01a-416f-b694-7650ae2ff953 rr:objectMap _:node19o1kef0ux67 .

km-dev:TriplesMap_8759dc40-f402-480b-8249-7fd35ed48857 rr:predicateObjectMap km-dev:PredicateObjectMap_9d0710e7-d01a-416f-b694-7650ae2ff953 .

km-dev:PredicateObjectMap_9d0710e7-d01a-416f-b694-7650ae2ff953 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_9d0710e7-d01a-416f-b694-7650ae2ff953 .

km-dev:TriplesMap_6d53f80b-d46b-435b-b8ac-19a4a0db561c a rr:TriplesMap .

_:node19o1kef0ux1 km-dev:hasTriplesMap km-dev:TriplesMap_6d53f80b-d46b-435b-b8ac-19a4a0db561c .

km-dev:TriplesMap_6d53f80b-d46b-435b-b8ac-19a4a0db561c km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux68 rr:tableName "webpage-sample.json" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasLogicalTable _:node19o1kef0ux68 .

km-dev:TriplesMap_6d53f80b-d46b-435b-b8ac-19a4a0db561c rr:logicalTable _:node19o1kef0ux68 ;
	rr:subjectMap _:node19o1kef0ux69 .

_:node19o1kef0ux1 km-dev:hasSubjectMap _:node19o1kef0ux69 .

_:node19o1kef0ux69 km-dev:isPartOfMapping _:node19o1kef0ux1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://www.w3.org/ns/prov#Activity1" ;
	rr:class prov:Activity ;
	rr:termType rr:BlankNode ;
	km-dev:namePrefix "prov:Activity1" .

km-dev:PredicateObjectMap_20930601-e1e8-46d4-9820-60e194650eee rr:predicate prov:endedAtTime .

_:node19o1kef0ux70 rr:column "import_time2" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux70 .

km-dev:PredicateObjectMap_20930601-e1e8-46d4-9820-60e194650eee rr:objectMap _:node19o1kef0ux70 .

km-dev:TriplesMap_6d53f80b-d46b-435b-b8ac-19a4a0db561c rr:predicateObjectMap km-dev:PredicateObjectMap_20930601-e1e8-46d4-9820-60e194650eee .

km-dev:PredicateObjectMap_20930601-e1e8-46d4-9820-60e194650eee a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_20930601-e1e8-46d4-9820-60e194650eee .

km-dev:PredicateObjectMap_55cf5eeb-b40a-4592-b6c3-7eba5529a4ea rr:predicate prov:wasAssociatedWith .

km-dev:RefObjectMap_95e59aa7-e5d8-4dd6-9f69-35321bf82949 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_0ef75b59-467f-4a59-a30b-8c4f6df4884d ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap km-dev:RefObjectMap_95e59aa7-e5d8-4dd6-9f69-35321bf82949 .

km-dev:PredicateObjectMap_55cf5eeb-b40a-4592-b6c3-7eba5529a4ea rr:objectMap km-dev:RefObjectMap_95e59aa7-e5d8-4dd6-9f69-35321bf82949 .

km-dev:TriplesMap_6d53f80b-d46b-435b-b8ac-19a4a0db561c rr:predicateObjectMap km-dev:PredicateObjectMap_55cf5eeb-b40a-4592-b6c3-7eba5529a4ea .

km-dev:PredicateObjectMap_55cf5eeb-b40a-4592-b6c3-7eba5529a4ea a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_55cf5eeb-b40a-4592-b6c3-7eba5529a4ea .

km-dev:PredicateObjectMap_363cc47a-5269-446a-8303-25bd379049b2 rr:predicate prov:wasAttributedTo .

_:node19o1kef0ux71 rr:constant <http://ingest.dig.isi.edu:5000/ingest/webpage> ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasObjectMap _:node19o1kef0ux71 .

km-dev:PredicateObjectMap_363cc47a-5269-446a-8303-25bd379049b2 rr:objectMap _:node19o1kef0ux71 .

km-dev:TriplesMap_6d53f80b-d46b-435b-b8ac-19a4a0db561c rr:predicateObjectMap km-dev:PredicateObjectMap_363cc47a-5269-446a-8303-25bd379049b2 .

km-dev:PredicateObjectMap_363cc47a-5269-446a-8303-25bd379049b2 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node19o1kef0ux1 .

_:node19o1kef0ux1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_363cc47a-5269-446a-8303-25bd379049b2 .
